{
  "openapi": "3.0.2",
  "info": {
    "version": "ml_v1",
    "title": "watsonx.ai",
    "license": {
      "name": "IBM",
      "url": "https://www.ibm.com"
    },
    "x-alternate-name": "watsonx_ai_ml",
    "termsOfService": "https://www.ibm.com/software/sla/sladb.nsf/sla/bm-6883-09",
    "x-codegen-config": {
      "groupMethodsByTag": true,
      "cli": {
        "apiPackage": "github.ibm.com/AILifecycle/cpdctl",
        "cliPluginName": "cpdctl",
        "cliExecutableName": "",
        "serviceCommandName": "wx.ai",
        "disableConfigCommand": true
      },
      "python": {
        "apiPackage": "ibm_wxai"
      },
      "java": {
        "apiPackage": "com.ibm.cloud.watsonx.ai"
      }
    },
    "x-last-updated": "2025-07-02"
  },
  "servers": [
    {
      "url": "https://{region}.ml.cloud.ibm.com",
      "variables": {
        "region": {
          "default": "us-south",
          "enum": [
            "us-south",
            "eu-de",
            "eu-gb",
            "jp-tok",
            "au-syd",
            "ca-tor"
          ]
        }
      }
    },
    {
      "url": "/wx"
    }
  ],
  "tags": [
    {
      "name": "AI Services",
      "x-cli-command-group": "AI service",
      "description": "Manage AI services.",
      "x-displayName": "AI Services"
    },
    {
      "name": "AutoAI RAG",
      "x-cli-command-group": "autoai_rag",
      "description": "Find the best RAG patterns.",
      "x-displayName": "AutoAI RAG"
    },
    {
      "name": "Deployments",
      "x-cli-command-group": "Deployment",
      "description": "Manage Deployments.",
      "x-displayName": "Deployments"
    },
    {
      "name": "Fine Tunings (Beta)",
      "x-cli-command-group": "Fine Tuning",
      "description": "Fine tune an LLM.",
      "x-displayName": "Fine Tunings (Beta)"
    },
    {
      "name": "Foundation Model Specs",
      "x-cli-command-group": "Foundation model",
      "description": "Operations to query the details of the deployed foundation models.",
      "x-displayName": "Foundation Model Specs"
    },
    {
      "name": "Notebooks",
      "x-cli-command-group": "Notebook",
      "description": "A notebook here refers to all the information about a Jupyter Notebook, such as its name, creation time, associated project, environment, asset etc.",
      "x-displayName": "Notebooks"
    },
    {
      "name": "Notebook Versions",
      "x-cli-command-group": "Notebook version",
      "description": "A notebook can be saved in different versions. Users can revert their changes to a specific version.",
      "x-displayName": "Notebook Versions"
    },
    {
      "name": "Prompts",
      "x-cli-command-group": "Prompt",
      "description": "Prompts for foundational models.",
      "x-displayName": "Prompts"
    },
    {
      "name": "Prompt Sessions",
      "x-cli-command-group": "Prompt Session",
      "description": "Prompt sessions for foundational model inferencing.",
      "x-displayName": "Prompt Sessions"
    },
    {
      "name": "Text Chat",
      "description": "Operations to infer text from a chat context.",
      "x-displayName": "Text Chat"
    },
    {
      "name": "Text Embeddings",
      "description": "Operations for text embeddings.",
      "x-displayName": "Text Embeddings"
    },
    {
      "name": "Text Extraction",
      "description": "Operations to extract text and metadata from documents.",
      "x-displayName": "Text Extraction"
    },
    {
      "name": "Text Generation",
      "description": "Operations to infer text from a prompt.",
      "x-displayName": "Text Generation"
    },
    {
      "name": "Text Rerank",
      "description": "Operations for text reranking.",
      "x-displayName": "Text Rerank"
    },
    {
      "name": "Text Tokenization",
      "description": "Operations to calculate tokens.",
      "x-displayName": "Text Tokenization"
    },
    {
      "name": "Time Series",
      "description": "Operation for time series.",
      "x-displayName": "Time Series"
    },
    {
      "name": "Trainings",
      "x-cli-command-group": "Training",
      "description": "Manage Trainings.",
      "x-displayName": "Trainings"
    },
    {
      "name": "Vector Indexes",
      "description": "Create a vector index asset.",
      "x-displayName": "Vector Indexes"
    },
    {
      "name": "Document Extraction (Beta)",
      "description": "Operations for document Extractions.",
      "x-displayName": "Document Extraction (Beta)"
    },
    {
      "name": "Synthetic Data (Beta)",
      "description": "Operations for Synthetic Data Generation.",
      "x-displayName": "Synthetic Data (Beta)"
    },
    {
      "name": "Synthetic Data Generation (Beta)",
      "description": "Operations for Synthetic Data Generation.",
      "x-displayName": "Synthetic Data Generation (Beta)"
    },
    {
      "name": "Taxonomy (Beta)",
      "description": "Operations for Taxonomy.",
      "x-displayName": "Taxonomy (Beta)"
    },
    {
      "name": "Utility Agent tools (Beta)",
      "x-cli-command-group": "Agent tool",
      "description": "Run an agent tool.",
      "x-displayName": "Utility Agent tools (Beta)"
    },
    {
      "name": "Model Gateway (Preview)",
      "description": "Operations for the Model Gateway.",
      "x-displayName": "Model Gateway (Preview)"
    },
    {
      "name": "Utility Agent Tools (Beta)",
      "x-displayName": "Utility Agent Tools (Beta)"
    }
  ],
  "paths": {
    "/ml/v1/text/generation": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "text_generation",
        "x-cli-command": "generate",
        "x-cli-command-group": "text",
        "tags": [
          "Text Generation"
        ],
        "summary": "Infer text",
        "description": "Infer the next tokens for a given deployed model with a set of parameters.\n\nThis API is legacy, consider using [Text Chat](#text-chat).\n",
        "requestBody": {
          "required": true,
          "description": "From a given prompt, infer the next tokens.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextGenRequest"
              },
              "examples": {
                "request": {
                  "summary": "A request without moderations.",
                  "description": "A simple request.\n",
                  "value": {
                    "model_id": "google/flan-ul2",
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "input": "Generate a marketing email advertising a new sale with the following characteristics:\n\nCompany: Swimwear Unlimited\n\nOffer Keywords: {Select customers only, mid-summer fun, swimwear sale}\n\nOffer End Date: July 15\n\nAdvertisement Tone: Exciting!\n\nInclude no URLs.\n\nInclude no telephone numbers.\n",
                    "parameters": {
                      "temperature": 0.8,
                      "max_new_tokens": 30
                    }
                  }
                },
                "moderations_request": {
                  "summary": "A request with moderations.",
                  "description": "A simple request with moderations.\n",
                  "value": {
                    "model_id": "google/flan-t5-xl",
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "input": "Tell me how to reach the US Postal service",
                    "parameters": {
                      "max_new_tokens": 120,
                      "min_new_tokens": 100,
                      "repetition_penalty": 2
                    },
                    "moderations": {
                      "hap": {
                        "output": {
                          "enabled": true,
                          "threshold": 0.5
                        }
                      },
                      "pii": {
                        "output": {
                          "enabled": true
                        },
                        "mask": {
                          "remove_entity_value": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextGenResponse"
                },
                "examples": {
                  "response": {
                    "summary": "A response without moderations.",
                    "description": "The generated text from the model along with other details.\n",
                    "value": {
                      "model_id": "google/flan-ul2",
                      "created_at": "2023-07-21T16:52:32.190Z",
                      "results": [
                        {
                          "generated_text": "4,000 km",
                          "generated_token_count": 4,
                          "input_token_count": 12,
                          "stop_reason": "eos_token"
                        }
                      ]
                    }
                  },
                  "moderated_response": {
                    "summary": "A response with moderations.",
                    "description": "The generated text from the model along with other details.\n",
                    "value": {
                      "model_id": "google/flan-t5-xl",
                      "created_at": "2023-07-21T16:52:32.190Z",
                      "results": [
                        {
                          "generated_text": "c/o USPS, PO Box 3000, Washington, D.C. 20001-5000, www.usps.com, or call **************. You can also visit the website at https://www.usps.com/contactus/. You can also contact them by telephone at 1-************. You can also send an email to ***************. You can find the US Postal Service on Facebook at https://www.facebook.com/postalservice/.",
                          "generated_token_count": 118,
                          "input_token_count": 11,
                          "stop_reason": "eos_token",
                          "moderations": {
                            "pii": [
                              {
                                "score": 0.8,
                                "input": false,
                                "position": {
                                  "start": 74,
                                  "end": 88
                                },
                                "entity": "PhoneNumber"
                              },
                              {
                                "score": 0.8,
                                "input": false,
                                "position": {
                                  "start": 200,
                                  "end": 212
                                },
                                "entity": "PhoneNumber"
                              },
                              {
                                "score": 0.8,
                                "input": false,
                                "position": {
                                  "start": 244,
                                  "end": 259
                                },
                                "entity": "EmailAddress"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.foundation-model.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "post request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/text/generation?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw '{\n",
                      "  \"model_id\": \"google/flan-t5-xxl\",\n",
                      "  \"input\": \"how far is paris from bangalore:\",\n",
                      "  \"parameters\": {\n",
                      "    \"max_new_tokens\": 100,\n",
                      "    \"time_limit\": 1000\n",
                      "  },\n",
                      "  \"project_id\": \"63dc4cf1-252f-424b-b52d-5cdd9814987f\"\n",
                      "}'"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/text/generation_stream": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "text_generation_stream",
        "x-cli-command": "generate-stream",
        "x-cli-command-group": "text",
        "tags": [
          "Text Generation"
        ],
        "summary": "Infer text event stream",
        "description": "Infer the next tokens for a given deployed model with a set of parameters.\nThis operation will return the output tokens as a stream of events.\n\nThis API is legacy, consider using [Text Chat Stream](#text-chat-stream).\n",
        "requestBody": {
          "required": true,
          "description": "From a given prompt, infer the next tokens in a server-sent events (SSE) stream.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextGenRequest"
              },
              "examples": {
                "request": {
                  "summary": "A request without moderations.",
                  "description": "A simple request.\n",
                  "value": {
                    "model_id": "google/flan-ul2",
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "input": "Generate a marketing email advertising a new sale with the following characteristics:\n\nCompany: Swimwear Unlimited\n\nOffer Keywords: {Select customers only, mid-summer fun, swimwear sale}\n\nOffer End Date: July 15\n\nAdvertisement Tone: Exciting!\n\nInclude no URLs.\n\nInclude no telephone numbers.\n",
                    "parameters": {
                      "temperature": 0.8,
                      "max_new_tokens": 30
                    }
                  }
                },
                "moderations_request": {
                  "summary": "A request with moderations.",
                  "description": "A simple request with moderations.\n",
                  "value": {
                    "model_id": "google/flan-t5-xl",
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "input": "Tell me how to reach the US Postal service",
                    "parameters": {
                      "max_new_tokens": 120,
                      "min_new_tokens": 100,
                      "repetition_penalty": 2
                    },
                    "moderations": {
                      "hap": {
                        "output": {
                          "enabled": true,
                          "threshold": 0.5
                        }
                      },
                      "pii": {
                        "output": {
                          "enabled": true
                        },
                        "mask": {
                          "remove_entity_value": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation (`Content-Type: text/event-stream`).",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TextGenStreamResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.foundation-model.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "post request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/text/generation_stream?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw '{\n",
                      "  \"model_id\": \"google/flan-t5-xxl\",\n",
                      "  \"input\": \"how far is paris from bangalore:\",\n",
                      "  \"parameters\": {\n",
                      "    \"max_new_tokens\": 100,\n",
                      "    \"time_limit\": 1000\n",
                      "  },\n",
                      "  \"project_id\": \"63dc4cf1-252f-424b-b52d-5cdd9814987f\"\n",
                      "}'"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/text/tokenization": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "text_tokenization",
        "x-cli-command": "tokenize",
        "x-cli-command-group": "text",
        "tags": [
          "Text Tokenization"
        ],
        "summary": "Text tokenization",
        "description": "The text tokenize operation allows you to check the conversion of provided input to tokens for a given model.\nIt splits text into words or sub-words, which then are converted to ids through a look-up table (vocabulary).\nTokenization allows the model to have a reasonable vocabulary size.\n",
        "requestBody": {
          "required": true,
          "description": "The input string to tokenize.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextTokenizeRequest"
              },
              "examples": {
                "request": {
                  "summary": "A sample request.",
                  "value": {
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "model_id": "google/flan-ul2",
                    "input": "Write a tagline for an alumni association: Together we",
                    "parameters": {
                      "return_tokens": true
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextTokenizeResponse"
                },
                "examples": {
                  "response": {
                    "summary": "The response with the token count.",
                    "description": "The response with the token count and the tokens, if requested.\n",
                    "value": {
                      "model_id": "google/flan-ul2",
                      "result": {
                        "token_count": 11,
                        "tokens": [
                          "Write",
                          "a",
                          "tag",
                          "line",
                          "for",
                          "an",
                          "alumni",
                          "associ",
                          "ation:",
                          "Together",
                          "we"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.text-tokenization.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "post request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/text/tokenization?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw '{\n",
                      "  \"model_id\": \"google/flan-ul2,\",\n",
                      "  \"input\": \"Write a tagline for an alumni association: Together we\",\n",
                      "  \"parameters\": {\n",
                      "    \"return_tokens\": true\n",
                      "  },\n",
                      "  \"project_id\": \"63dc4cf1-252f-424b-b52d-5cdd9814987f\"\n",
                      "}'"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/foundation_model_specs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        },
        {
          "$ref": "#/components/parameters/start"
        },
        {
          "$ref": "#/components/parameters/limit"
        },
        {
          "$ref": "#/components/parameters/model_filters"
        },
        {
          "$ref": "#/components/parameters/tech_preview"
        }
      ],
      "get": {
        "operationId": "list_foundation_model_specs",
        "x-cli-command": "list-models",
        "description": "Retrieve the list of deployed foundation models.\n",
        "tags": [
          "Foundation Model Specs"
        ],
        "summary": "List the available foundation models",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FoundationModels"
                },
                "examples": {
                  "foundation_model_specs": {
                    "summary": "The list of models.",
                    "description": "The models that are currently deployed in the cluster.\n",
                    "value": {
                      "total_count": 1,
                      "limit": 100,
                      "first": {
                        "href": "https://us-south.ml.cloud.ibm.com/ml/v1/foundation_model_specs?version=2023-05-02"
                      },
                      "resources": [
                        {
                          "model_id": "bigcode/starcoder",
                          "label": "starcoder-15.5b",
                          "provider": "BigCode",
                          "source": "Hugging Face",
                          "short_description": "The StarCoder models are 15.5B parameter models that can generate code from natural language descriptions",
                          "tasks": [
                            {
                              "id": "code",
                              "ratings": {
                                "quality": 3
                              }
                            }
                          ],
                          "min_shot_size": 0,
                          "input_tier": "class_2",
                          "output_tier": "class_2",
                          "number_params": "15.5b"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "get foundation models",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request GET 'https://{cluster_url}/ml/v1/foundation_model_specs?version=2019-10-25&filters=function_time_series_forecast'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Accept: application/json'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/foundation_model_tasks": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        },
        {
          "$ref": "#/components/parameters/start"
        },
        {
          "$ref": "#/components/parameters/limit"
        }
      ],
      "get": {
        "operationId": "list_foundation_model_tasks",
        "x-cli-command": "list-tasks",
        "description": "Retrieve the list of tasks that are supported by the foundation models.\n",
        "tags": [
          "Foundation Model Specs"
        ],
        "summary": "List the supported tasks",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FoundationModelTasks"
                },
                "examples": {
                  "foundation_model_tasks": {
                    "summary": "The list of tasks.",
                    "description": "The tasks that are currently supported by models deployed in the cluster.\n",
                    "value": {
                      "total_count": 1,
                      "limit": 100,
                      "first": {
                        "href": "https://us-south.ml.cloud.ibm.com/ml/v1/foundation_model_tasks?version=2023-05-02"
                      },
                      "resources": [
                        {
                          "task_id": "question_answering",
                          "label": "Question answering",
                          "rank": 1,
                          "description": "Based on a set of documents or dynamic content, create a chatbot or a question-answering feature grounded on specific content. E.g. building a Q&A resource from a broad knowledge base, providing customer service assistance."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v4/deployments": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "create_deployment",
        "x-cli-command": "create",
        "tags": [
          "Deployments"
        ],
        "summary": "Create a new watsonx.ai deployment",
        "description": "Create a new deployment, currently the only supported type is `online`.\n\nIf this is a deployment for a prompt tune then the `asset` object must exist\nand the `id` must be the `id` of the `model` that was created after the\nprompt training.\n\nIf this is a deployment for a prompt template then the `prompt_template`\nobject should\nexist and the `id` must be the `id` of the prompt template to be deployed.\n",
        "x-cli-generate-async-handler": true,
        "requestBody": {
          "description": "The deployment request entity.\n\nThe following important fields are described for each use case:\n1. Prompt template:\n   - `base_model_id`: **required**\n   - `promt_template.id`: **required**\n   - `online`: **required**\n   - `hardware_spec`: **forbidden**\n   - `hardware_request`: **forbidden**\n   - response `deployed_asset_type`: `foundation_model`\n1. Prompt tune:\n   - `asset.id`: **required**\n   - `online`: **required**\n   - `hardware_spec`: **forbidden**\n   - `hardware_request`: **forbidden**\n   - `base_model_id`: **forbidden**\n   - response `deployed_asset_type`: `prompt_tune`\n1. Custom foundation model:\n   - `asset.id`: **required**\n   - `online`: **required**\n   - `online.parameters.foundation_model`: **optional**\n   - `hardware_spec`: **forbidden**\n   - `hardware_request`: **required**\n   - `base_model_id`: **forbidden**\n   - `base_deployment_id`: **forbidden**\n   - response `deployed_asset_type`: `custom_foundation_model`\n1. Deploy on Demand model:\n   - `asset.id`: **required**\n   - `online`: **required**\n   - `online.parameters.foundation_model`: **forbidden**\n   - `hardware_spec`: **forbidden**\n   - `hardware_request`: **forbidden**\n   - `base_model_id`: **forbidden**\n   - `base_deployment_id`: **forbidden**\n   - `space_id`: **required**\n   - `project_id`: **forbidden**\n   - response `deployed_asset_type`: `curated_foundation_model`\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentResourcePrototype"
              },
              "examples": {
                "prompt_tuning": {
                  "summary": "Create a prompt tune deployment.",
                  "value": {
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "name": "text_classification",
                    "asset": {
                      "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
                    },
                    "online": {}
                  }
                },
                "prompt_template": {
                  "summary": "Create a prompt template deployment.",
                  "value": {
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "name": "text_classification",
                    "base_model_id": "google/flan-ul2",
                    "prompt_template": {
                      "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
                    },
                    "online": {}
                  }
                },
                "custom_foundation_model_saas": {
                  "summary": "Create a custom foundation model deployment.",
                  "value": {
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "name": "my_tuned_flan",
                    "asset": {
                      "id": "366c31e9-1a6b-417a-8e25-06178a1514a1"
                    },
                    "online": {
                      "parameters": {
                        "serving_name": "myflan"
                      }
                    }
                  }
                },
                "deploy_on_demand_model": {
                  "summary": "Deploy a curated model.",
                  "value": {
                    "space_id": "8ca6eec6-ce39-4285-877b-97a9720cdd03",
                    "name": "my_granite_13b_chat_v2",
                    "asset": {
                      "id": "38d30589-286c-4b9f-82d5-5006d5fa3bb4"
                    },
                    "online": {
                      "parameters": {
                        "serving_name": "granite_13b_chat_v2"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Deployment created.",
            "headers": {
              "Location": {
                "description": "The location of the newly created resource (deployment).",
                "schema": {
                  "type": "string",
                  "description": "The location of the newly created resource (deployment).\n"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentResource"
                },
                "examples": {
                  "prompt_tune_deployment": {
                    "summary": "A prompt tune deployment.",
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "created_at": "2023-05-02T16:27:51Z",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "name": "text_classification",
                        "description": "Classification prompt tuned model deployment",
                        "tags": [
                          "classification"
                        ]
                      },
                      "entity": {
                        "asset": {
                          "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
                        },
                        "online": {},
                        "deployed_asset_type": "prompt_tune",
                        "base_model_id": "google/flan-ul2",
                        "status": {
                          "state": "ready",
                          "message": {
                            "level": "info",
                            "text": "The deployment is successful"
                          },
                          "inference": [
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/6213cf1-252f-424b-b52d-5cdd9814956c/text/generation"
                            },
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/6213cf1-252f-424b-b52d-5cdd9814956c/text/generation_stream",
                              "sse": true
                            }
                          ]
                        }
                      }
                    }
                  },
                  "prompt_template_deployment": {
                    "summary": "A prompt template deployment.",
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "created_at": "2023-05-02T16:27:51Z",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "name": "text_classification",
                        "description": "Classification prompt template deployment",
                        "tags": [
                          "classification"
                        ]
                      },
                      "entity": {
                        "prompt_template": {
                          "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
                        },
                        "online": {},
                        "deployed_asset_type": "foundation_model",
                        "base_model_id": "google/flan-t5-xl",
                        "status": {
                          "state": "ready",
                          "message": {
                            "level": "info",
                            "text": "The deployment is successful"
                          },
                          "inference": [
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/6213cf1-252f-424b-b52d-5cdd9814956c/text/generation"
                            },
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/6213cf1-252f-424b-b52d-5cdd9814956c/text/generation_stream",
                              "sse": true
                            }
                          ]
                        }
                      }
                    }
                  },
                  "custom_foundation_model_deployment_saas": {
                    "summary": "A custom foundation model deployment.",
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "created_at": "2023-05-02T16:27:51Z",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "name": "my_tuned_flan"
                      },
                      "entity": {
                        "asset": {
                          "id": "366c31e9-1a6b-417a-8e25-06178a1514a1"
                        },
                        "online": {
                          "parameters": {
                            "serving_name": "myflan"
                          }
                        },
                        "deployed_asset_type": "custom_foundation_model",
                        "base_model_id": "google/flan-t5-xl",
                        "status": {
                          "state": "ready",
                          "message": {
                            "level": "info",
                            "text": "The deployment is successful"
                          },
                          "inference": [
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/6213cf1-252f-424b-b52d-5cdd9814956c/text/generation"
                            },
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/myflan/text/generation",
                              "uses_serving_name": true
                            },
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/6213cf1-252f-424b-b52d-5cdd9814956c/text/generation_stream",
                              "sse": true
                            },
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/myflan/text/generation_stream",
                              "sse": true,
                              "uses_serving_name": true
                            }
                          ]
                        }
                      }
                    }
                  },
                  "deploy_on_demand_model": {
                    "summary": "A curated foundation model.",
                    "value": {
                      "metadata": {
                        "id": "c9240431-8697-42ad-8ab3-1cced97fc6db",
                        "created_at": "2024-12-12T10:42:52.298Z",
                        "name": "my_granite_13b_chat_v2",
                        "space_id": "8ca6eec6-ce39-4285-877b-97a9720cdd03"
                      },
                      "entity": {
                        "asset": {
                          "id": "38d30589-286c-4b9f-82d5-5006d5fa3bb4"
                        },
                        "base_model_id": "ibm/granite-13b-chat-v2-curated",
                        "deployed_asset_type": "curated_foundation_model",
                        "hardware_request": {
                          "num_nodes": 1,
                          "size": "gpu_s"
                        },
                        "online": {
                          "parameters": {
                            "serving_name": "granite_13b_chat_v2"
                          }
                        },
                        "status": {
                          "inference": [
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/curated_test_22/text/generation",
                              "uses_serving_name": true
                            },
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/curated_test_22/text/generation_stream",
                              "uses_serving_name": true,
                              "sse": true
                            },
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/c9240431-8697-42ad-8ab3-1cced97fc6db/text/generation"
                            },
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/c9240431-8697-42ad-8ab3-1cced97fc6db/text/generation_stream",
                              "sse": true
                            }
                          ],
                          "state": "ready"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.deployment.create"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "A prompt tune deployment",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v4/deployments?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "-d ",
                      "{\n",
                      "    \"project_id\": \"12ac4cf1-252f-424b-b52d-5cdd9814987f\",\n",
                      "    \"name\": \"text_classification\",\n",
                      "    \"description\": \"Classification prompt tuned model deployment\",\n",
                      "    \"tags\": [\"classification\"],\n",
                      "    \"asset\": {\n",
                      "        \"id\": \"4cedab6d-e8e4-4214-b81a-2ddb122db2ab\"\n",
                      "    },\n",
                      "    \"online\": {}\n",
                      "}\n"
                    ]
                  }
                ]
              },
              {
                "name": "A prompt template deployment",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v4/deployments?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "-d ",
                      "{\n",
                      "    \"project_id\": \"12ac4cf1-252f-424b-b52d-5cdd9814987f\",\n",
                      "    \"name\": \"text_classification\",\n",
                      "    \"description\": \"Classification prompt template deployment\",\n",
                      "    \"tags\": [\"classification\"],\n",
                      "    \"prompt_template\": {\n",
                      "        \"id\": \"4cedab6d-e8e4-4214-b81a-2ddb122db2ab\"\n",
                      "    },\n",
                      "    \"base_model_id\": \"google/flan-t5-xl\",\n",
                      "    \"online\": {}\n",
                      "}\n"
                    ]
                  }
                ]
              },
              {
                "name": "A custom foundation model deployment",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v4/deployments?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "-d ",
                      "{\n",
                      "    \"project_id\": \"12ac4cf1-252f-424b-b52d-5cdd9814987f\"\n",
                      "    \"name\": \"my_tuned_flan\"\n",
                      "    \"asset\": {\n",
                      "        \"id\": \"366c31e9-1a6b-417a-8e25-06178a1514a1\"\n",
                      "    },\n",
                      "    \"online\": {\n",
                      "        \"parameters\": {\n",
                      "            \"serving_name\": \"myflan\"\n",
                      "         }\n",
                      "    }\n",
                      "}\n"
                    ]
                  }
                ]
              },
              {
                "name": "A curated foundational model deployment",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v4/deployments?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "-d ",
                      "{\n",
                      "    \"space_id\": \"8ca6eec6-ce39-4285-877b-97a9720cdd03\",\n",
                      "    \"name\": \"my_granite_13b_chat_v2\",\n",
                      "    \"asset\": {\n",
                      "        \"id\": \"38d30589-286c-4b9f-82d5-5006d5fa3bb4\"\n",
                      "    },\n",
                      "    \"base_model_id\": \"ibm/granite-13b-chat-v2-curated\",\n",
                      "    \"hardware_request\": {\n",
                      "        \"size\": \"gpu_s\",\n",
                      "        \"num_nodes\": 1\n",
                      "    },\n",
                      "    \"online\": {\n",
                      "        \"parameters\": {\n",
                      "            \"serving_name\": \"granite_13b_chat_v2\"\n",
                      "         }\n",
                      "    }\n",
                      "}\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "get": {
        "operationId": "list_deployments",
        "tags": [
          "Deployments"
        ],
        "summary": "Retrieve the deployments",
        "description": "Retrieve the list of deployments for the specified space or project.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          },
          {
            "name": "serving_name",
            "description": "Retrieves the deployment, if any, that contains this `serving_name`.",
            "example": "classification",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag.value",
            "description": "Retrieves only the resources with the given tag value.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asset_id",
            "description": "Retrieves only the resources with the given asset_id,\nasset_id would be the model id.\n",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "prompt_template_id",
            "description": "Retrieves only the resources with the given prompt_template_id.\n",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "description": "Retrieves only the resources with the given name.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "description": "Retrieves the resources filtered with the given type. There are the deployment types as well as an additional\n`prompt_template` if the deployment type includes a prompt template.\n\nThe supported deployment types are (see the description for `deployed_asset_type` in the deployment entity):\n\n1. `prompt_tune` - when a prompt tuned model is deployed.\n2. `foundation_model` - when a prompt template is used on a pre-deployed IBM provided model.\n3. `custom_foundation_model` - when a custom foundation model is deployed.\n\nThese can be combined with the flag `prompt_template` like this:\n\n1. `type=prompt_tune` - return all prompt tuned model deployments.\n2. `type=prompt_tune and prompt_template` - return all prompt tuned model deployments with a prompt template.\n3. `type=foundation_model` - return all prompt template deployments.\n4. `type=foundation_model and prompt_template` - return all prompt template deployments - this is the same as the previous query because a `foundation_model` can only exist with a prompt template.\n5. `type=prompt_template` - return all deployments with a prompt template.\n",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "description": "Retrieves the resources filtered by state. Allowed values are `initializing`, `updating`, `ready` and `failed`.\n",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conflict",
            "description": "Returns whether `serving_name` is available for use or not.\nThis query parameter cannot be combined with any other parameter except for `serving_name`.\n",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentResourceCollection"
                },
                "examples": {
                  "get_all_prompt_tune_deployments": {
                    "summary": "Get all prompt tune deployments.",
                    "value": {
                      "limit": 10,
                      "first": {
                        "href": "https://us-south.ml.cloud.ibm.com/ml/v4/deployments"
                      },
                      "resources": [
                        {
                          "metadata": {
                            "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                            "created_at": "2023-05-02T16:27:51Z",
                            "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                            "name": "text_classification",
                            "description": "Classification prompt tuned model deployment",
                            "tags": [
                              "classification"
                            ]
                          },
                          "entity": {
                            "asset": {
                              "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
                            },
                            "deployed_asset_type": "prompt_tune",
                            "online": {},
                            "base_model_id": "google/flan-t5-xl",
                            "status": {
                              "state": "ready",
                              "message": {
                                "level": "info",
                                "text": "The deployment is successful"
                              },
                              "inference": [
                                {
                                  "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation"
                                },
                                {
                                  "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation_stream",
                                  "sse": true
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "`serving_name` is available for use.\nReturned when `serving_name` and `conflict` query parameters are used.\n"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Returned when `serving_name` and `conflict` query parameters are used.\nThe response body will contain the reason.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.deployment.list"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Retrieve list of deployments",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request GET 'https://{cluster_url}/ml/v4/deployments?space_id=aa6dc728-958e-42b7-acdf-d403e16d1e9e&\n",
                      "serving_name=ibm&asset_id=259efabd-7850-40fc-843d-6dddcfc286d1\n",
                      "&state=ready&version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v4/deployments/{deployment_id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        },
        {
          "name": "deployment_id",
          "in": "path",
          "description": "The deployment id.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "deployments_get",
        "x-cli-command": "get",
        "tags": [
          "Deployments"
        ],
        "summary": "Retrieve the deployment details",
        "description": "Retrieve the deployment details with the specified identifier.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          }
        ],
        "responses": {
          "200": {
            "description": "Deployment details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentResource"
                },
                "examples": {
                  "prompt_tune_deployment": {
                    "summary": "A prompt tune deployment.",
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "created_at": "2023-05-02T16:27:51Z",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "name": "text_classification",
                        "description": "Classification prompt tuned model deployment",
                        "tags": [
                          "classification"
                        ]
                      },
                      "entity": {
                        "asset": {
                          "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
                        },
                        "online": {},
                        "deployed_asset_type": "prompt_tune",
                        "base_model_id": "google/flan-ul2",
                        "status": {
                          "state": "ready",
                          "message": {
                            "level": "info",
                            "text": "The deployment is successful"
                          },
                          "inference": [
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation"
                            },
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation_stream",
                              "sse": true
                            }
                          ]
                        }
                      }
                    }
                  },
                  "prompt_template_deployment": {
                    "summary": "A prompt template deployment.",
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "created_at": "2023-05-02T16:27:51Z",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "name": "text_classification",
                        "description": "Classification prompt template deployment",
                        "tags": [
                          "classification"
                        ]
                      },
                      "entity": {
                        "prompt_template": {
                          "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
                        },
                        "online": {},
                        "deployed_asset_type": "foundation_model",
                        "base_model_id": "google/flan-t5-xl",
                        "status": {
                          "state": "ready",
                          "message": {
                            "level": "info",
                            "text": "The deployment is successful"
                          },
                          "inference": [
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation"
                            },
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation_stream",
                              "sse": true
                            }
                          ]
                        }
                      }
                    }
                  },
                  "custom_foundation_model_deployment_saas": {
                    "summary": "A custom foundation model deployment.",
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "created_at": "2023-05-02T16:27:51Z",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "name": "my_tuned_flan"
                      },
                      "entity": {
                        "asset": {
                          "id": "366c31e9-1a6b-417a-8e25-06178a1514a1"
                        },
                        "online": {
                          "parameters": {
                            "serving_name": "myflan"
                          }
                        },
                        "deployed_asset_type": "custom_foundation_model",
                        "base_model_id": "google/flan-t5-xl",
                        "status": {
                          "state": "ready",
                          "message": {
                            "level": "info",
                            "text": "The deployment is successful"
                          },
                          "inference": [
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/6213cf1-252f-424b-b52d-5cdd9814956c/text/generation"
                            },
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/myflan/text/generation",
                              "uses_serving_name": true
                            },
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/6213cf1-252f-424b-b52d-5cdd9814956c/text/generation_stream",
                              "sse": true
                            },
                            {
                              "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/myflan/text/generation_stream",
                              "sse": true,
                              "uses_serving_name": true
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.deployment.read"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Retrieve deployment details",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request GET \"https://{cluster_url}/ml/v4/deployments/{deployment_id}?space_id=aa6dc728-958e-42b7-acdf-d403e16d1e9e&version=2023-05-02\"\n",
                      "-H \"Authorization: Bearer eyJhbGciOiJSUzUxM...\""
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "patch": {
        "operationId": "deployments_update",
        "x-cli-command": "update",
        "x-cli-generate-async-handler": true,
        "tags": [
          "Deployments"
        ],
        "summary": "Update the deployment metadata",
        "parameters": [
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          }
        ],
        "description": "Update the deployment metadata.\nThe following parameters of deployment metadata are supported for the patch operation.\n\n- `/name`\n- `/description`\n- `/tags`\n- `/custom`\n- `/online/parameters`\n- `/asset` - `replace` only\n- `/prompt_template` - `replace` only\n- `/hardware_spec`\n- `/hardware_request`\n- `/base_model_id` - `replace` only (applicable only to prompt template deployments referring to IBM base foundation models) \n\nThe PATCH operation with path specified as `/online/parameters` can be used to update the `serving_name`.\n",
        "requestBody": {
          "description": "The json patch.\n",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatch"
              }
            }
          },
          "required": true
        },
        "x-json-patch-helper-model": "DeploymentResourcePatch",
        "responses": {
          "202": {
            "description": "Deployment accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentResource"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-codegen-request-body-name": "json-patch",
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.deployment.update"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Update the deployment metadata.",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request PATCH \"https://{cluster_url}/ml/v4/deployments/{deployment_id}?space_id=aa6dc728-958e-42b7-acdf-d403e16d1e9e&version=2023-05-02\"\n",
                      "-H \"Authorization: Bearer eyJhbGciOiJSUzUxM...\"\n",
                      "-H \"Content-Type: application/json\"\n",
                      "-H \"Accept: application/json\"\n",
                      "-d \n",
                      "[\n",
                      "  {\n",
                      "    \"op\": \"replace\",\n",
                      "    \"path\": \"/description\",\n",
                      "    \"value\": \"New Description\",\n",
                      "  }\n",
                      "]"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "delete": {
        "operationId": "deployments_delete",
        "x-cli-command": "delete",
        "tags": [
          "Deployments"
        ],
        "summary": "Delete the deployment",
        "description": "Delete the deployment with the specified identifier.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          }
        ],
        "responses": {
          "204": {
            "description": "Deployment deleted."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.deployment.delete"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Delete deployment",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request DELETE 'https://{cluster_url}/ml/v4/deployments/{deployment_id}?space_id=aa6dc728-958e-42b7-acdf-d403e16d1e9e&version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/deployments/{id_or_name}/text/generation": {
      "parameters": [
        {
          "$ref": "#/components/parameters/id_or_name"
        },
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "deployments_text_generation",
        "x-cli-command": "text-generate",
        "tags": [
          "Deployments"
        ],
        "summary": "Infer text",
        "description": "Infer the next tokens for a given deployed model with a set of parameters.\nIf a `serving_name` is used then it must match the `serving_name` that is returned in the `inference` section when the deployment was created.\n\nThis API is legacy, consider using [Deployment Text Chat](#deployments-text-chat).\n\n### Return options\n\nNote that there is currently a limitation in this operation when using `return_options`,\nfor input only `input_text` will be returned if requested,\nfor output the `input_tokens` and `generated_tokens` will not be returned.\n",
        "requestBody": {
          "description": "From a given prompt, infer the next tokens.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentTextGenRequest"
              },
              "examples": {
                "prompt_tune": {
                  "summary": "A prompt tune request.",
                  "description": "A prompt tune request.\n",
                  "value": {
                    "space_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "input": "how far is paris from bangalore:\n",
                    "parameters": {
                      "max_new_tokens": 100
                    }
                  }
                },
                "prompt_tune_with_moderations": {
                  "summary": "A prompt tune request with moderations.",
                  "description": "A prompt tune request with moderations.\n",
                  "value": {
                    "space_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "input": "Tell me how to reach the US Postal service",
                    "parameters": {
                      "max_new_tokens": 120,
                      "min_new_tokens": 100,
                      "repetition_penalty": 2
                    },
                    "moderations": {
                      "hap": {
                        "output": {
                          "enabled": true,
                          "threshold": 0.5
                        }
                      },
                      "pii": {
                        "output": {
                          "enabled": true
                        },
                        "mask": {
                          "remove_entity_value": true
                        }
                      }
                    }
                  }
                },
                "prompt_template": {
                  "summary": "A prompt template request.",
                  "description": "A prompt template request.\n",
                  "value": {
                    "space_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "input": "how far is paris from bangalore:\n",
                    "parameters": {
                      "max_new_tokens": 100
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextGenResponse"
                },
                "examples": {
                  "prompt_tune": {
                    "summary": "A prompt tune response.",
                    "description": "The generated text from the model along with other details for a prompt tune.\n",
                    "value": {
                      "model_id": "google/flan-ul2",
                      "created_at": "2023-07-21T16:52:32.190Z",
                      "results": [
                        {
                          "generated_text": "4,000 km",
                          "generated_token_count": 4,
                          "input_token_count": 12,
                          "stop_reason": "eos_token"
                        }
                      ]
                    }
                  },
                  "prompt_tune_with_moderations": {
                    "summary": "A prompt tune response with moderations.",
                    "description": "The generated text from the model along with other details for a prompt tune with moderations.\n",
                    "value": {
                      "model_id": "google/flan-t5-xl",
                      "created_at": "2023-07-21T16:52:32.190Z",
                      "results": [
                        {
                          "generated_text": "c/o USPS, PO Box 3000, Washington, D.C. 20001-5000, www.usps.com, or call **************. You can also visit the website at https://www.usps.com/contactus/. You can also contact them by telephone at 1-************. You can also send an email to ***************. You can find the US Postal Service on Facebook at https://www.facebook.com/postalservice/.",
                          "generated_token_count": 118,
                          "input_token_count": 11,
                          "stop_reason": "eos_token",
                          "moderations": {
                            "pii": [
                              {
                                "score": 0.8,
                                "input": false,
                                "position": {
                                  "start": 74,
                                  "end": 88
                                },
                                "entity": "PhoneNumber"
                              },
                              {
                                "score": 0.8,
                                "input": false,
                                "position": {
                                  "start": 200,
                                  "end": 212
                                },
                                "entity": "PhoneNumber"
                              },
                              {
                                "score": 0.8,
                                "input": false,
                                "position": {
                                  "start": 244,
                                  "end": 259
                                },
                                "entity": "EmailAddress"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "prompt_template": {
                    "summary": "A prompt template response.",
                    "description": "The generated text from the model along with other details for a prompt template.\n",
                    "value": {
                      "model_id": "google/flan-ul2",
                      "created_at": "2023-07-21T16:52:32.190Z",
                      "results": [
                        {
                          "generated_text": "4,000 km",
                          "generated_token_count": 4,
                          "input_token_count": 12,
                          "stop_reason": "eos_token"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.foundation-model.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "prompt tune",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/deployments/{id_or_name}/text/generation?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw '{\n",
                      "  \"input\": \"how far is paris from bangalore:\",\n",
                      "  \"parameters\": {\n",
                      "    \"max_new_tokens\": 100,\n",
                      "    \"time_limit\": 1000\n",
                      "  },\n",
                      "}'"
                    ]
                  }
                ]
              },
              {
                "name": "prompt template",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/deployments/{id_or_name}/text/generation?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw '{\n",
                      "  \"parameters\": {\n",
                      "    \"max_new_tokens\": 100,\n",
                      "    \"time_limit\": 1000,\n",
                      "    \"prompt_variables\": {\n",
                      "      \"name\": \"joe\",\n",
                      "      \"count\": 3\n",
                      "    },\n",
                      "  },\n",
                      "}'"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/deployments/{id_or_name}/text/generation_stream": {
      "parameters": [
        {
          "$ref": "#/components/parameters/id_or_name"
        },
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "deployments_text_generation_stream",
        "x-cli-command": "text-generate-stream",
        "tags": [
          "Deployments"
        ],
        "summary": "Infer text event stream",
        "description": "Infer the next tokens for a given deployed model with a set of parameters.\nThis operation will return the output tokens as a stream of events.\nIf a `serving_name` is used then it must match the `serving_name` that is returned in the `inference` section when the deployment was created.\n\nThis API is legacy, consider using [Deployment Text Chat Stream](#deployments-text-chat-stream).\n### Return options\n\nNote that there is currently a limitation in this operation when using `return_options`,\nfor input only `input_text` will be returned if requested,\nfor output the `input_tokens` and `generated_tokens` will not be returned, also the\n`rank` and `top_tokens` will not be returned.\n",
        "requestBody": {
          "description": "From a given prompt, infer the next tokens in a server-sent events (SSE) stream.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentTextGenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation (`Content-Type: text/event-stream`).",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TextGenStreamResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.foundation-model.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "prompt tune",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/deployments/{id_or_name}/text/generation_stream?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw '{\n",
                      "  \"input\": \"how far is paris from bangalore:\",\n",
                      "  \"parameters\": {\n",
                      "    \"max_new_tokens\": 100,\n",
                      "    \"time_limit\": 1000\n",
                      "  },\n",
                      "}'"
                    ]
                  }
                ]
              },
              {
                "name": "prompt template",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/deployments/{id_or_name}/text/generation_stream?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw '{\n",
                      "  \"parameters\": {\n",
                      "    \"max_new_tokens\": 100,\n",
                      "    \"time_limit\": 1000,\n",
                      "    \"prompt_variables\": {\n",
                      "      \"name\": \"joe\",\n",
                      "      \"count\": 3\n",
                      "    },\n",
                      "  },\n",
                      "}'"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/deployments/{id_or_name}/text/chat": {
      "parameters": [
        {
          "$ref": "#/components/parameters/id_or_name_chat_template"
        },
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "deployments_text_chat",
        "x-cli-command": "chat",
        "tags": [
          "Deployments"
        ],
        "summary": "Infer text chat",
        "description": "Infer the next chat message for a given deployment. The deployment must reference a prompt template which has `input_mode` set to `chat`. The model to the chat request will be from the deployment `base_model_id`. Parameters to the chat request will be from the prompt template `model_parameters`. Related guides: [Deployment](#create-deployment), [Prompt template](#post-prompt), [Text chat](#text-chat).\n\nIf a `serving_name` is used then it must match the `serving_name` that is returned in the `inference` section when the deployment was created.\n",
        "requestBody": {
          "description": "From a given prompt, infer the next chat message.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentTextChatRequest"
              },
              "examples": {
                "prompt_template": {
                  "summary": "A chat prompt template request.",
                  "description": "A prompt template request.\n",
                  "value": {
                    "messages": [
                      {
                        "role": "user",
                        "content": "Who won the world series in 2020?"
                      },
                      {
                        "role": "assistant",
                        "content": "The Los Angeles Dodgers won the World Series in 2020."
                      },
                      {
                        "role": "user",
                        "content": {
                          "type": "text",
                          "text": "Where was it played?"
                        }
                      }
                    ]
                  }
                },
                "system_prompt_and_context": {
                  "summary": "A chat prompt template request with system_prompt and context.",
                  "description": "A prompt template request.\n",
                  "value": {
                    "context": "Today is Wednesday",
                    "messages": [
                      {
                        "role": "user",
                        "content": {
                          "type": "text",
                          "text": "Who are you and which day is tomorrow?"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextChatResponse"
                },
                "examples": {
                  "prompt_template": {
                    "summary": "A chat prompt template response.",
                    "description": "The generated text from the model along with other details for a prompt template.\n",
                    "value": {
                      "id": "cmpl-15475d0dea9b4429a55843c77997f8a9",
                      "model_id": "ibm/granite-3-2b-instruct",
                      "created": 1689958352,
                      "created_at": "2023-07-21T16:52:32.190Z",
                      "choices": [
                        {
                          "index": 0,
                          "message": {
                            "role": "assistant",
                            "content": "The 2020 World Series was played at the Globe Life Field in Arlington, Texas.\n"
                          },
                          "finish_reason": "stop"
                        }
                      ],
                      "usage": {
                        "completion_tokens": 27,
                        "prompt_tokens": 186,
                        "total_tokens": 213
                      }
                    }
                  },
                  "system_prompt_and_context": {
                    "summary": "A chat prompt template with system_prompt and context response.",
                    "description": "The generated text from the model along with other details for a prompt template.\n",
                    "value": {
                      "id": "cmpl-15475d0dea9b4429a55843c77997f8a9",
                      "model_id": "ibm/granite-3-2b-instruct",
                      "created": 1689958352,
                      "created_at": "2023-07-21T16:52:32.190Z",
                      "choices": [
                        {
                          "index": 0,
                          "message": {
                            "role": "assistant",
                            "content": "Hello! I am Granite Chat, created by IBM. I am here to assist you. Today is Wednesday.tomorrow is Thursday.\n"
                          },
                          "finish_reason": "stop"
                        }
                      ],
                      "usage": {
                        "completion_tokens": 32,
                        "prompt_tokens": 154,
                        "total_tokens": 186
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.foundation-model.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v1/deployments/{id_or_name}/text/chat_stream": {
      "parameters": [
        {
          "$ref": "#/components/parameters/id_or_name_chat_template"
        },
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "deployments_text_chat_stream",
        "x-cli-command": "chat-stream",
        "tags": [
          "Deployments"
        ],
        "summary": "Infer text chat event stream",
        "description": "Infer the next chat message for a given deployment. This operation will return the output tokens as a stream of events. The deployment must reference a prompt template which has `input_mode` set to `chat`. The model to the chat request will be from the deployment `base_model_id`. Parameters to the chat request will be from the prompt template `model_parameters`. Related guides: [Deployment](#create-deployment), [Prompt template](#post-prompt), [Text chat](#text-chat).\n\nIf a `serving_name` is used then it must match the `serving_name` that is returned in the `inference` section when the deployment was created.\n",
        "requestBody": {
          "description": "From a given prompt, infer the next chat message in a server-sent events (SSE)\nstream.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentTextChatRequest"
              },
              "examples": {
                "prompt_template": {
                  "summary": "A chat prompt template request.",
                  "description": "A prompt template request.\n",
                  "value": {
                    "messages": [
                      {
                        "role": "user",
                        "content": "Who won the world series in 2020?"
                      },
                      {
                        "role": "assistant",
                        "content": "The Los Angeles Dodgers won the World Series in 2020."
                      },
                      {
                        "role": "user",
                        "content": {
                          "type": "text",
                          "text": "Where was it played?"
                        }
                      }
                    ]
                  }
                },
                "system_prompt_and_context": {
                  "summary": "A chat prompt template request with system_prompt and context.",
                  "description": "A prompt template request.\n",
                  "value": {
                    "context": "Today is Wednesday",
                    "messages": [
                      {
                        "role": "user",
                        "content": {
                          "type": "text",
                          "text": "Who are you and which day is tomorrow?"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation (`Content-Type: text/event-stream`).",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TextChatStreamResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.foundation-model.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v1/deployments/{id_or_name}/time_series/forecast": {
      "parameters": [
        {
          "$ref": "#/components/parameters/id_or_name"
        },
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "deployments_time_series_forecast",
        "x-cli-command": "time-series-forecast",
        "tags": [
          "Deployments"
        ],
        "summary": "Time series forecast",
        "description": "Generate forecasts, or predictions for future time points, given historical time series data.\n",
        "requestBody": {
          "required": true,
          "description": "The forecast request.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentTSForecastResource"
              },
              "examples": {
                "request": {
                  "summary": "A sample request.",
                  "value": {
                    "schema": {
                      "timestamp_column": "date",
                      "id_columns": [
                        "ID1"
                      ]
                    },
                    "data": {
                      "date": [
                        "2020-01-01T00:00:00",
                        "2020-01-01T01:00:00",
                        "2020-01-05T01:00:00"
                      ],
                      "ID1": [
                        "D1",
                        "D1",
                        "D1"
                      ],
                      "TARGET1": [
                        1.46,
                        2.34,
                        4.55
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TSForecastResponse"
                },
                "examples": {
                  "response": {
                    "summary": "A sample response.",
                    "value": {
                      "model_id": "bc35d16e-dd21-472e-9cde-c6c3ad88e3b5",
                      "created_at": "2020-05-02T16:27:51Z",
                      "results": [
                        {
                          "date": [
                            "2020-01-05T02:00:00",
                            "2020-01-05T03:00:00",
                            "2020-01-06T00:00:00"
                          ],
                          "ID1": [
                            "D1",
                            "D1",
                            "D1"
                          ],
                          "TARGET1": [
                            1.86,
                            3.24,
                            6.78
                          ]
                        }
                      ],
                      "input_data_points": 512,
                      "output_data_points": 1024
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.time-series-forecast.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v4/deployments/{id_or_name}/ai_service": {
      "parameters": [
        {
          "$ref": "#/components/parameters/id_or_name"
        },
        {
          "$ref": "#/components/parameters/version"
        }
      ]
    },
    "/ml/v4/deployments/{id_or_name}/ai_service_stream": {
      "parameters": [
        {
          "$ref": "#/components/parameters/id_or_name"
        },
        {
          "$ref": "#/components/parameters/version"
        }
      ]
    },
    "/ml/v4/trainings": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "trainings_create",
        "tags": [
          "Trainings"
        ],
        "summary": "Create a new watsonx.ai training",
        "description": "Create a new watsonx.ai training in a project or a space.\n\nThe details of the base model and parameters for the training\nmust be provided in the `prompt_tuning` object.\n\n\nIn order to deploy the tuned model you need to follow the following steps:\n\n  1. Create a WML model asset, in a space or a project,\n     by providing the `request.json` as shown below:\n       ```\n       curl -X POST \"https://{cpd_cluster}/ml/v4/models?version=2024-01-29\" \\\n         -H \"Authorization: Bearer <replace with your token>\" \\\n         -H \"content-type: application/json\" \\\n         --data '{\n            \"name\": \"replace_with_a_meaningful_name\",\n            \"space_id\": \"replace_with_your_space_id\",\n            \"type\": \"prompt_tune_1.0\",\n            \"software_spec\": {\n              \"name\": \"watsonx-textgen-fm-1.0\"\n            },\n            \"metrics\": [ from the training job ],\n            \"training\": {\n              \"id\": \"05859469-b25b-420e-aefe-4a5cb6b595eb\",\n              \"base_model\": {\n                \"model_id\": \"google/flan-t5-xl\"\n              },\n              \"task_id\": \"generation\",\n              \"verbalizer\": \"Input: {{input}} Output:\"\n            },\n            \"training_data_references\": [\n              {\n                \"connection\": {\n                  \"id\": \"20933468-7e8a-4706-bc90-f0a09332b263\"\n                },\n                \"id\": \"file_to_tune1.json\",\n                \"location\": {\n                  \"bucket\": \"wxproject-donotdelete-pr-xeyivy0rx3vrbl\",\n                  \"path\": \"file_to_tune1.json\"\n                },\n                \"type\": \"connection_asset\"\n              }\n            ]\n          }'\n       ```\n\n\n       **Notes:**\n\n       1. If you used the training request field `auto_update_model: true`\n       then you can skip this step as the model will have been saved at\n       the end of the training job.\n       1. Rather than creating the payload for the model you can use the\n          generated `request.json` that was stored in the `results_reference`\n          field, look for the path in the field\n          `entity.results_reference.location.model_request_path`.\n       1. The model `type` must be `prompt_tune_1.0`.\n       1. The software spec name must be `watsonx-textgen-fm-1.0`.\n\n  1. Create a tuned model deployment as described in the\n     [create deployment documentation](#create-deployment).\n",
        "x-cli-generate-async-handler": true,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrainingResourcePrototype"
              },
              "examples": {
                "TrainingPromptTuningRequest": {
                  "summary": "Start a prompt tune training job.",
                  "value": {
                    "name": "my-prompt-tune-training",
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "prompt_tuning": {
                      "base_model": {
                        "model_id": "google/flan-t5-xl"
                      },
                      "tuning_type": "prompt_tuning",
                      "task_id": "classification",
                      "num_epochs": 30,
                      "learning_rate": 0.4,
                      "accumulate_steps": 3,
                      "batch_size": 10,
                      "max_input_tokens": 100,
                      "max_output_tokens": 100
                    },
                    "training_data_references": [
                      {
                        "id": "tune1_data.json",
                        "location": {
                          "path": "tune1_data.json"
                        },
                        "type": "container"
                      }
                    ],
                    "auto_update_model": true,
                    "results_reference": {
                      "location": {
                        "path": "tune1/results"
                      },
                      "type": "container"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The training job has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingResource"
                },
                "examples": {
                  "TrainingPromptTuningResponse": {
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "name": "my-prompt-training",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "created_at": "2023-08-04T13:22:47.000Z"
                      },
                      "entity": {
                        "prompt_tuning": {
                          "base_model": {
                            "model_id": "google/flan-t5-xl"
                          },
                          "task_id": "classification"
                        },
                        "training_data_references": [
                          {
                            "id": "tune1_data.json",
                            "location": {
                              "path": "tune1_data.json"
                            },
                            "type": "container"
                          }
                        ],
                        "auto_update_model": true,
                        "results_reference": {
                          "location": {
                            "path": "tune1/results",
                            "training": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82",
                            "training_status": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/training-status.json",
                            "assets_path": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets",
                            "model_request_path": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets/c29e7544-dfd0-4427-bc66-20fa6023e2e0/resources/wml_model/request.json"
                          },
                          "type": "container"
                        },
                        "status": {
                          "state": "completed",
                          "running_at": "2023-08-04T13:22:48.000Z",
                          "completed_at": "2023-08-04T13:22:55.289Z",
                          "metrics": [
                            {
                              "iteration": 0,
                              "ml_metrics": {
                                "loss": 4.49988
                              },
                              "timestamp": "2023-09-22T02:52:03.324Z"
                            },
                            {
                              "iteration": 1,
                              "ml_metrics": {
                                "loss": 3.86884
                              },
                              "timestamp": "2023-09-22T02:52:03.689Z"
                            },
                            {
                              "iteration": 2,
                              "ml_metrics": {
                                "loss": 4.05115
                              },
                              "timestamp": "2023-09-22T02:52:04.053Z"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.training.create"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Prompt tuning",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v4/trainings?version=2023-05-02'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw '{\n",
                      "  \"name\": \"my-prompt-tune-training\",\n",
                      "  \"project_id\": \"12ac4cf1-252f-424b-b52d-5cdd9814987f\",\n",
                      "  \"prompt_tuning\": {\n",
                      "    \"base_model\": {\n",
                      "      \"model_id\": \"google/flan-t5-xl\"\n",
                      "    },\n",
                      "    \"task_id\": \"classification\",\n",
                      "    \"tuning_type\": \"prompt_tuning\",\n",
                      "    \"num_epochs\": 30,\n",
                      "    \"learning_rate\": 0.4,\n",
                      "    \"accumulate_steps\": 3,\n",
                      "    \"batch_size\": 10,\n",
                      "    \"max_input_tokens\": 100,\n",
                      "    \"max_output_tokens\": 100\n",
                      "  },\n",
                      "  \"training_data_references\": [\n",
                      "    {\n",
                      "      \"id\": \"tune1_data.json\",\n",
                      "      \"location\": {\n",
                      "        \"path\": \"tune1_data.json\"\n",
                      "      },\n",
                      "      \"type\": \"container\"\n",
                      "    }\n",
                      "  ],\n",
                      "  \"auto_update_model\": true,\n",
                      "  \"results_reference\": {\n",
                      "    \"location\": {\n",
                      "      \"path\": \"tune1/results\"\n",
                      "    },\n",
                      "    \"type\": \"container\"\n",
                      "  }\n",
                      "}'"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "get": {
        "operationId": "trainings_list",
        "tags": [
          "Trainings"
        ],
        "summary": "Retrieve the list of trainings",
        "description": "Retrieve the list of trainings for the specified space or project.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/total_count"
          },
          {
            "name": "tag.value",
            "description": "Return only the resources with the given tag value.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "description": "Filter based on on the training job state.\n",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "queued",
                "pending",
                "running",
                "storing",
                "completed",
                "failed",
                "canceled"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingResourceCollection"
                },
                "examples": {
                  "TrainingPromptTuningResponses": {
                    "value": {
                      "limit": 100,
                      "first": {
                        "href": "https://{cluster_url}/ml/v4/trainings"
                      },
                      "total_count": 1,
                      "resources": [
                        {
                          "metadata": {
                            "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                            "name": "my-prompt-training",
                            "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                            "created_at": "2023-08-04T13:22:47.000Z"
                          },
                          "entity": {
                            "prompt_tuning": {
                              "base_model": {
                                "model_id": "google/flan-t5-xl"
                              },
                              "task_id": "classification"
                            },
                            "training_data_references": [
                              {
                                "id": "tune1_data.json",
                                "location": {
                                  "path": "tune1_data.json"
                                },
                                "type": "container"
                              }
                            ],
                            "auto_update_model": true,
                            "results_reference": {
                              "location": {
                                "path": "tune1/results",
                                "training": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82",
                                "training_status": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/training-status.json",
                                "assets_path": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets",
                                "model_request_path": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets/c29e7544-dfd0-4427-bc66-20fa6023e2e0/resources/wml_model/request.json"
                              },
                              "type": "container"
                            },
                            "status": {
                              "state": "completed",
                              "running_at": "2023-08-04T13:22:48.000Z",
                              "completed_at": "2023-08-04T13:22:55.289Z",
                              "metrics": [
                                {
                                  "iteration": 0,
                                  "ml_metrics": {
                                    "loss": 4.49988
                                  },
                                  "timestamp": "2023-09-22T02:52:03.324Z"
                                },
                                {
                                  "iteration": 1,
                                  "ml_metrics": {
                                    "loss": 3.86884
                                  },
                                  "timestamp": "2023-09-22T02:52:03.689Z"
                                },
                                {
                                  "iteration": 2,
                                  "ml_metrics": {
                                    "loss": 4.05115
                                  },
                                  "timestamp": "2023-09-22T02:52:04.053Z"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.training.list"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v4/trainings/{training_id}": {
      "parameters": [
        {
          "name": "training_id",
          "in": "path",
          "description": "The training identifier.",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "$ref": "#/components/parameters/version"
        },
        {
          "$ref": "#/components/parameters/SpaceId"
        },
        {
          "$ref": "#/components/parameters/ProjectId"
        }
      ],
      "get": {
        "operationId": "trainings_get",
        "tags": [
          "Trainings"
        ],
        "summary": "Retrieve the training",
        "description": "Retrieve the training with the specified identifier.\n",
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingResource"
                },
                "examples": {
                  "TrainingPromptTuningResponse": {
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "name": "my-prompt-training",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "created_at": "2023-08-04T13:22:47.000Z"
                      },
                      "entity": {
                        "prompt_tuning": {
                          "base_model": {
                            "model_id": "google/flan-t5-xl"
                          },
                          "task_id": "classification"
                        },
                        "training_data_references": [
                          {
                            "id": "tune1_data.json",
                            "location": {
                              "path": "tune1_data.json"
                            },
                            "type": "container"
                          }
                        ],
                        "auto_update_model": true,
                        "results_reference": {
                          "location": {
                            "path": "tune1/results",
                            "training": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82",
                            "training_status": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/training-status.json",
                            "assets_path": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets",
                            "model_request_path": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets/c29e7544-dfd0-4427-bc66-20fa6023e2e0/resources/wml_model/request.json"
                          },
                          "type": "container"
                        },
                        "status": {
                          "state": "completed",
                          "running_at": "2023-08-04T13:22:48.000Z",
                          "completed_at": "2023-08-04T13:22:55.289Z",
                          "metrics": [
                            {
                              "iteration": 0,
                              "ml_metrics": {
                                "loss": 4.49988
                              },
                              "timestamp": "2023-09-22T02:52:03.324Z"
                            },
                            {
                              "iteration": 1,
                              "ml_metrics": {
                                "loss": 3.86884
                              },
                              "timestamp": "2023-09-22T02:52:03.689Z"
                            },
                            {
                              "iteration": 2,
                              "ml_metrics": {
                                "loss": 4.05115
                              },
                              "timestamp": "2023-09-22T02:52:04.053Z"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.training.get"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "trainings_delete",
        "tags": [
          "Trainings"
        ],
        "summary": "Cancel or delete the training",
        "description": "Cancel or delete the specified training, once deleted all trace of the job is gone.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/hard_delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Training cancelled."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.training.delete"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v1/text/embeddings": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "text_embeddings",
        "x-cli-command": "calculate-embeddings",
        "x-cli-command-group": "text",
        "tags": [
          "Text Embeddings"
        ],
        "summary": "Generate embeddings",
        "description": "Generate embeddings from text input.\n\nSee the [documentation](https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/fm-embed-overview.html?context=wx&audience=wdp)\nfor a description of text embeddings.\n",
        "requestBody": {
          "required": true,
          "description": "The text input for a given model to be used to generate the embeddings.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbeddingsRequest"
              },
              "examples": {
                "request": {
                  "summary": "A sample request.",
                  "description": "A simple request.\n",
                  "value": {
                    "model_id": "slate",
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "inputs": [
                      "Youth craves thrills while adulthood cherishes wisdom."
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbeddingsResponse"
                },
                "examples": {
                  "response": {
                    "summary": "A sample response.",
                    "description": "An array of embeddings for each input string.\n",
                    "value": {
                      "model_id": "slate",
                      "results": [
                        {
                          "embedding": [
                            -0.006929283,
                            -0.005336422,
                            -0.024047505
                          ]
                        }
                      ],
                      "created_at": "2024-02-21T17:32:28Z",
                      "input_token_count": 10
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.text-embeddings.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "generate embeddings",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/text/embeddings?version=2023-10-25'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Accept: application/json'\n",
                      "-d '{\n",
                      "  \"inputs\": [\n",
                      "    \"Youth craves thrills while adulthood cherishes wisdom.\",\n",
                      "    \"Youth seeks ambition while adulthood finds contentment.\",\n",
                      "    \"Dreams chased in youth while goals pursued in adulthood.\"\n",
                      "  ],\n",
                      "  \"model_id\": \"slate\",\n",
                      "  \"project_id\": \"12ac4cf1-252f-424b-b52d-5cdd9814987f\"\n",
                      "}'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/text/rerank": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "text_rerank",
        "x-cli-command": "rerank",
        "x-cli-command-group": "text",
        "tags": [
          "Text Rerank"
        ],
        "summary": "Generate rerank",
        "description": "Rerank texts based on some queries.\n",
        "requestBody": {
          "required": true,
          "description": "The input texts and the queries for reranking.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RerankRequest"
              },
              "examples": {
                "sample request": {
                  "summary": "A sample request.",
                  "value": {
                    "model_id": "cross-encoder/ms-marco-minilm-l-12-v2",
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "inputs": [
                      {
                        "text": "In my younger years, I often reveled in the excitement of spontaneous adventures and embraced the thrill of the unknown, whereas in my grownup life, I've come to appreciate the comforting stability of a well-established routine."
                      },
                      {
                        "text": "As a young man, I frequently sought out exhilarating experiences, craving the adrenaline rush of life's novelties, while as a responsible adult, I've come to understand the profound value of accumulated wisdom and life experience."
                      }
                    ],
                    "query": "As a Youth, I craved excitement while in adulthood I followed Enthusiastic Pursuit.",
                    "parameters": {
                      "return_options": {
                        "top_n": 2
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RerankResponse"
                },
                "examples": {
                  "response": {
                    "summary": "A sample response.",
                    "description": "An array of embeddings for each input string.\n",
                    "value": {
                      "model_id": "cross-encoder/ms-marco-minilm-l-12-v2",
                      "results": [
                        {
                          "index": 1,
                          "score": 0.7461
                        },
                        {
                          "index": 0,
                          "score": 0.8274
                        }
                      ],
                      "created_at": "2024-02-21T17:32:28Z",
                      "input_token_count": 20
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.text-rerank.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "sample request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/text/rerank?version=2023-10-25'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Accept: application/json'\n",
                      "-d ",
                      "'{\n",
                      "  \"model_id\": \"cross-encoder/ms-marco-minilm-l-12-v2\",\n",
                      "  \"project_id\": \"12ac4cf1-252f-424b-b52d-5cdd9814987f\",\n",
                      "  \"inputs\": [\n",
                      "    {\n",
                      "      \"text\": \"In my younger years, I often reveled in the excitement of spontaneous adventures and embraced the thrill of the unknown, whereas in my grownup life, I've come to appreciate the comforting stability of a well-established routine.\"\n",
                      "    },\n",
                      "    {\n",
                      "      \"text\": \"As a young man, I frequently sought out exhilarating experiences, craving the adrenaline rush of life's novelties, while as a responsible adult, I've come to understand the profound value of accumulated wisdom and life experience.\"\n",
                      "    }\n",
                      "  ],\n",
                      "  \"query\": \"As a Youth, I craved excitement while in adulthood I followed Enthusiastic Pursuit.\",\n",
                      "  \"parameters\": {\n",
                      "    \"return_options\": {\n",
                      "      \"top_n\": 2\n",
                      "    }\n",
                      "  }\n",
                      "}'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/autoai/rags": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "create_autoai_rags",
        "x-cli-command": "create",
        "x-cli-command-group": "autoai-rag",
        "tags": [
          "AutoAI RAG"
        ],
        "summary": "Create a new AutoAI RAG run",
        "description": "Create a new AutoAI RAG that will find the best RAG pattern from the data that is provided in the request.\n",
        "requestBody": {
          "required": true,
          "description": "The details of the AutoAI RAG run with the data used to find the best RAG patterns.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoAIRAGRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoAIRAGResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Create AutoAI RAG job",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/autoai/rags?version=2023-10-25'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "-d '{\n",
                      "  \"name\": \"AutoAI RAG #1\",\n",
                      "  \"description\": \"My autorag experiment for 2023 financial documents.\",\n",
                      "  \"hardware_spec\":{\n",
                      "    \"id\": \"c076e82c-b2a7-4d20-9c0f-1f0c2fdf5a24\",\n",
                      "    \"name\": \"L\"\n",
                      "  },\n",
                      "  \"parameters\":{\n",
                      "    \"constraints\":{\n",
                      "      \"embedding_models\": [\"ibm/slate.30m.english.rtrvr\", \"ibm/slate.125m.english.rtrvr\"],\n",
                      "      \"foundation_models\":[\"meta-llama/llama-2-13b\", \"mistralai/mixtral-8x7b-instruct-v0-1\", \"ibm/granite-13b-instruct-v2\"],\n",
                      "      \"max_number_of_rag_patterns\": 8\n",
                      "    },\n",
                      "    \"optimization\":{\n",
                      "      \"metrics\":[\"answer_correctness\"]\n",
                      "    },\n",
                      "    \"output_logs\": true\n",
                      "  },\n",
                      "  \"input_data_references\":[\n",
                      "    {\n",
                      "      \"type\": \"connection_asset\",\n",
                      "      \"connection\": {\n",
                      "        \"id\": \"d118eb8c-b0da-44f4-abf4-c4ecba4a496a\"\n",
                      "      },\n",
                      "      \"location\":{\n",
                      "        \"bucket\": \"autorag-documents-datasets\",\n",
                      "        \"file_name\": \"docs/document_1.txt\"\n",
                      "      }\n",
                      "    },\n",
                      "    {\n",
                      "      \"type\": \"connection_asset\",\n",
                      "      \"connection\": {\n",
                      "        \"id\": \"d118eb8c-b0da-44f4-abf4-c4ecba4a496a\"\n",
                      "      },\n",
                      "      \"location\":{\n",
                      "        \"bucket\": \"autorag-documents-datasets\",\n",
                      "        \"file_name\": \"docs/document_2.txt\"\n",
                      "      }\n",
                      "    },\n",
                      "  ],\n",
                      "  \"test_data_references\":[\n",
                      "    {\n",
                      "      \"type\": \"connection_asset\",\n",
                      "      \"connection\": {\n",
                      "        \"id\": \"d118eb8c-b0da-44f4-abf4-c4ecba4a496a\"\n",
                      "      },\n",
                      "      \"location\":{\n",
                      "        \"bucket\": \"autorag-documents-datasets\",\n",
                      "        \"file_name\": \"benchmarks/q_and_a_data.json\"\n",
                      "      }\n",
                      "    }\n",
                      "  ],\n",
                      "  \"vector_store_references\":[\n",
                      "    {\n",
                      "      \"type\": \"connection_asset\",\n",
                      "      \"connection\": {\n",
                      "        \"id\": \"497956b8-626f-4800-901d-3bcba21c6770\"\n",
                      "      }\n",
                      "    }\n",
                      "  ],\n",
                      "  \"results_reference\": {\n",
                      "    \"type\": \"container\",\n",
                      "    \"connection\": {\n",
                      "    },\n",
                      "    \"location\": {\n",
                      "      \"path\": \"results_autoai\"\n",
                      "    }\n",
                      "  },\n",
                      "  \"project_id\": \"12ac4cf1-252f-424b-b52d-5cdd9814987f\"\n",
                      "}'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "get": {
        "operationId": "list_autoai_rags",
        "x-cli-command": "list",
        "x-cli-command-group": "autoai-rag",
        "tags": [
          "AutoAI RAG"
        ],
        "summary": "Retrieve the AutoAI RAG runs",
        "description": "Retrieve the list of AutoAI RAG requests for the specified space or project.\n\nThis operation does not save the history, any requests that were deleted or purged\nwill not appear in this list.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoRAGResultResources"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Retrieve the AutoAI RAG runs",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/autoai/rags?version=2023-10-25'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Accept: application/json'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/autoai/rags/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path_id"
        },
        {
          "$ref": "#/components/parameters/version"
        },
        {
          "$ref": "#/components/parameters/SpaceId"
        },
        {
          "$ref": "#/components/parameters/ProjectId"
        }
      ],
      "get": {
        "operationId": "get_autoai_rags",
        "x-cli-command": "get",
        "x-cli-command-group": "autoai-rag",
        "tags": [
          "AutoAI RAG"
        ],
        "summary": "Get an AutoAI RAG run",
        "description": "Get the results of an AutoAI RAG run, or details if the job failed.\n",
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoAIRAGResponse"
                },
                "examples": {
                  "response": {
                    "summary": "A sample response.",
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "created_at": "2023-05-02T16:27:51Z",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "description": "My autoai rag experiment for 2023 financial documents",
                        "name": "AutoAI RAG"
                      },
                      "entity": {
                        "timestamp": "2023-09-22T02:52:03.324Z",
                        "hardware_spec": {
                          "id": "c076e82c-b2a7-4d20-9c0f-1f0c2fdf5a24",
                          "name": "L"
                        },
                        "parameters": {
                          "constraints": {
                            "embedding_models": [
                              "ibm/slate-125m-english-rtrvr"
                            ],
                            "foundation_models": [
                              "meta-llama/llama-3-70b-instruct",
                              "mistralai/mixtral-8x7b-instruct-v01",
                              "ibm/granite-13b-chat-v2"
                            ],
                            "max_number_of_rag_patterns": 8
                          },
                          "optimization": {
                            "metrics": [
                              "answer_correctness"
                            ]
                          },
                          "output_logs": true
                        },
                        "input_data_references": [
                          {
                            "type": "connection_asset",
                            "connection": {
                              "id": "6f5688fd-f3bf-42c2-a18b-49c0d8a1920d"
                            },
                            "location": {
                              "path": "files/document.pdf"
                            }
                          }
                        ],
                        "test_data_references": [
                          {
                            "type": "connection_asset",
                            "connection": {
                              "id": "6f5688fd-f3bf-42c2-a18b-49c0d8a1920d"
                            },
                            "location": {
                              "path": "files/qa_document.json"
                            }
                          }
                        ],
                        "vector_store_references": [
                          {
                            "type": "connection_asset",
                            "connection": {
                              "id": "6f5688fd-f3bf-42c2-a18b-49c0d8a1920d"
                            }
                          }
                        ],
                        "results_reference": {
                          "type": "container",
                          "location": {
                            "path": "results_autoai",
                            "training": "results_autoai/6a9362f6-7ea2-4419-8c7d-a7e07432dec5",
                            "training_status": "results_autoai/6a9362f6-7ea2-4419-8c7d-a7e07432dec5/rag/training-status.json",
                            "assets_path": "results_autoai/6a9362f6-7ea2-4419-8c7d-a7e07432dec5/rag/assets",
                            "training_log": "results_autoai/6a9362f6-7ea2-4419-8c7d-a7e07432dec5/rag/training.log"
                          }
                        },
                        "results": [
                          {
                            "metrics": {
                              "test_data": [
                                {
                                  "metric_name": "answer_correctness",
                                  "mean": 0.51,
                                  "ci_high": 0.68,
                                  "ci_low": 0.43
                                }
                              ]
                            },
                            "context": {
                              "rag_pattern": {
                                "composition_steps": [
                                  "vector_store",
                                  "chunking",
                                  "embeddings",
                                  "retrieval",
                                  "generation"
                                ],
                                "location": {
                                  "evaluation_results": "results_autoai/6a9362f6-7ea2-4419-8c7d-a7e07432dec5/rag/assets/Pattern1/evaluation_results.json",
                                  "indexing_notebook": "results_autoai/6a9362f6-7ea2-4419-8c7d-a7e07432dec5/rag/assets/Pattern1/indexing_notebook.ipynb",
                                  "inference_notebook": "results_autoai/6a9362f6-7ea2-4419-8c7d-a7e07432dec5/rag/assets/Pattern1/inference_notebook.ipynb",
                                  "inference_service_code": "results_autoai/6a9362f6-7ea2-4419-8c7d-a7e07432dec5/rag/assets/Pattern1/inference_service_code.gz",
                                  "inference_service_metadata": "results_autoai/6a9362f6-7ea2-4419-8c7d-a7e07432dec5/rag/assets/Pattern1/inference_service_metadata.json"
                                },
                                "name": "Pattern 1",
                                "settings": {
                                  "vector_store": {
                                    "datasource_type": "milvus",
                                    "index_name": "autoai_rag_1234_iteration_5_index",
                                    "distance_metric": "euclidean",
                                    "operation": "upsert",
                                    "schema": {
                                      "id": "autoai_rag_1.0.0",
                                      "name": "AutoAI RAG document schema",
                                      "type": "struct",
                                      "fields": [
                                        {
                                          "name": "text",
                                          "description": "text field",
                                          "type": "string",
                                          "role": "text"
                                        },
                                        {
                                          "name": "document_id",
                                          "description": "document name field",
                                          "type": "string",
                                          "role": "document_name"
                                        },
                                        {
                                          "name": "start_index",
                                          "description": "chunk starting token position in the source document",
                                          "type": "number",
                                          "role": "start_index"
                                        },
                                        {
                                          "name": "sequence_number",
                                          "description": "chunk number per document",
                                          "type": "number",
                                          "role": "sequence_number"
                                        },
                                        {
                                          "name": "vector",
                                          "description": "vector embeddings",
                                          "type": "array",
                                          "role": "vector_embeddings"
                                        }
                                      ]
                                    }
                                  },
                                  "chunking": {
                                    "method": "recursive",
                                    "chunk_size": 256,
                                    "chunk_overlap": 64
                                  },
                                  "embeddings": {
                                    "truncate_strategy": "left",
                                    "truncate_input_tokens": 384,
                                    "model_id": "ibm/slate-125m-english-rtrvr"
                                  },
                                  "retrieval": {
                                    "method": "simple",
                                    "number_of_chunks": 5
                                  },
                                  "generation": {
                                    "model_id": "meta-llama/llama-3-1-70b-instruct",
                                    "prompt_template_text": "Answer the following questions based on provided context:\\n ...",
                                    "context_template_text": "[Document]\n{document}\n[End]",
                                    "word_to_token_ratio": 2.2
                                  }
                                }
                              },
                              "iteration": 1,
                              "max_combinations": 160
                            }
                          }
                        ],
                        "status": {
                          "state": "running",
                          "step": "vector_store",
                          "message": {
                            "level": "info",
                            "text": "Pipeline 1 of 8 is completed."
                          },
                          "running_at": "2023-08-04T13:22:48.000Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Get an AutoAI RAG run",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request GET \"https://{cluster_url}/ml/v1/autoai/rags/{id}?space_id=12ac4cf1-252f-424b-b52d-5cdd9814987f&version=2024-10-17\"\n",
                      "-H \"Authorization: Bearer eyJhbGciOiJSUzUxM...\"",
                      "-H 'Accept: application/json'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "delete": {
        "operationId": "delete_autoai_rags",
        "x-cli-command": "delete",
        "x-cli-command-group": "autoai-rag",
        "tags": [
          "AutoAI RAG"
        ],
        "summary": "Cancel or delete an AutoAI RAG run",
        "description": "Cancel or delete the specified AutoAI RAG run, once deleted all trace of the run job is gone.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/hard_delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Cancel or delete an AutoAI RAG run",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request DELETE \"https://{cluster_url}/ml/v1/autoai/rags/{id}?space_id=12ac4cf1-252f-424b-b52d-5cdd9814987f&version=2024-10-17\"\n",
                      "-H \"Authorization: Bearer eyJhbGciOiJSUzUxM...\""
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/fine_tunings": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "create_fine_tuning",
        "x-cli-command": "create",
        "x-cli-command-group": "fine-tuning",
        "tags": [
          "Fine Tunings (Beta)"
        ],
        "summary": "Create a fine tuning job",
        "description": "Create a fine tuning job that will fine tune an LLM.\n",
        "requestBody": {
          "required": true,
          "description": "The details of the fine tuning job with the data used to tune the LLM.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FineTuningRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FineTuningResource"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.fine-tuning.create"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "InstructLab Fine Tuning",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/fine_tunings?version=2023-10-25'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "-d '{\n",
                      "  \"name\": \"Instruct Lab Fine Tuning\",\n",
                      "  \"project_id\": \"dc178286-21d1-4262-9000-e543cf4c7742\",\n",
                      "  \"type\": \"ilab\",\n",
                      "  \"training_data_references\": [\n",
                      "    {\n",
                      "      \"type\": \"data_asset\",\n",
                      "      \"location\": {\n",
                      "        \"id\": \"4cc2f990-cd83-4e62-bd61-33b21605cf0e\",\n",
                      "      }\n",
                      "    }\n",
                      "  ],\n",
                      "  \"results_reference\": {\n",
                      "    \"type\": \"container\",\n",
                      "    \"location\": {\n",
                      "      \"path\": \".\"\n",
                      "    }\n",
                      "  }\n",
                      "}'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "get": {
        "operationId": "fine_tuning_list",
        "x-cli-command": "list",
        "x-cli-command-group": "fine-tuning",
        "tags": [
          "Fine Tunings (Beta)"
        ],
        "summary": "Retrieve the list of fine tuning jobs",
        "description": "Retrieve the list of fine tuning jobs for the specified space or project.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "name": "limit",
            "description": "How many resources should be returned.\n",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 200
            }
          },
          {
            "name": "total_count",
            "description": "Compute the total count. May have performance impact.",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "tag.value",
            "description": "Return only the resources with the given tag value.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "description": "Filter based on on the job state: queued, running, completed, failed etc.\n",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "description": "The `type` of Fine Tuning training. The `type` is set to `ilab` for InstructLab training.",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ilab"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FineTuningResources"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.fine-tuning.list"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v1/fine_tunings/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path_id"
        },
        {
          "$ref": "#/components/parameters/version"
        },
        {
          "$ref": "#/components/parameters/SpaceId"
        },
        {
          "$ref": "#/components/parameters/ProjectId"
        }
      ],
      "get": {
        "operationId": "get_fine_tuning",
        "x-cli-command": "get",
        "x-cli-command-group": "fine-tuning",
        "tags": [
          "Fine Tunings (Beta)"
        ],
        "summary": "Get a fine tuning job",
        "description": "Get the results of a fine tuning job, or details if the job failed.\n",
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FineTuningResource"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.fine-tuning.get"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "delete_fine_tuning",
        "x-cli-command": "delete",
        "x-cli-command-group": "fine-tuning",
        "tags": [
          "Fine Tunings (Beta)"
        ],
        "summary": "Cancel or delete a fine tuning job",
        "description": "Delete a fine tuning job if it exists, once deleted all trace of the job is gone.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/hard_delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.fine-tuning.delete"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v1/text/extractions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "text_extraction",
        "x-cli-command": "create",
        "x-cli-command-group": "text-extraction",
        "tags": [
          "Text Extraction"
        ],
        "summary": "Start a text extraction request",
        "description": "Start a request to extract text and metadata from documents.\n\nSee the [documentation](https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/fm-api-text-extraction.html?context=wx&audience=wdp) for a description of text extraction.\n",
        "requestBody": {
          "required": true,
          "description": "The input for the text extraction request.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextExtractionRequest"
              },
              "examples": {
                "simple request": {
                  "summary": "simple_request",
                  "description": "A simple request.\n",
                  "value": {
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "document_reference": {
                      "type": "connection_asset",
                      "connection": {
                        "id": "6f5688fd-f3bf-42c2-a18b-49c0d8a1920d"
                      },
                      "location": {
                        "file_name": "files/document.pdf"
                      }
                    },
                    "results_reference": {
                      "type": "connection_asset",
                      "connection": {
                        "id": "2a7c11bc-2913-48d0-9581-a8d9f40fa159"
                      },
                      "location": {
                        "file_name": "results"
                      }
                    },
                    "steps": {
                      "tables_processing": {
                        "enabled": true
                      }
                    }
                  }
                },
                "ocr request": {
                  "summary": "ocr_request",
                  "description": "An OCR request.\n",
                  "value": {
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "document_reference": {
                      "type": "connection_asset",
                      "connection": {
                        "id": "6f5688fd-f3bf-42c2-a18b-49c0d8a1920d"
                      },
                      "location": {
                        "file_name": "files/document.pdf"
                      }
                    },
                    "results_reference": {
                      "type": "connection_asset",
                      "connection": {
                        "id": "2a7c11bc-2913-48d0-9581-a8d9f40fa159"
                      },
                      "location": {
                        "file_name": "results"
                      }
                    },
                    "steps": {
                      "ocr": {
                        "languages_list": [
                          "en",
                          "fr"
                        ]
                      },
                      "tables_processing": {
                        "enabled": false
                      }
                    }
                  }
                },
                "multiple outputs": {
                  "summary": "Multiple outputs",
                  "description": "A request for multiple outputs.\n",
                  "value": {
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "document_reference": {
                      "type": "connection_asset",
                      "connection": {
                        "id": "6f5688fd-f3bf-42c2-a18b-49c0d8a1920d"
                      },
                      "location": {
                        "file_name": "files/document.pdf"
                      }
                    },
                    "results_reference": {
                      "type": "connection_asset",
                      "connection": {
                        "id": "2a7c11bc-2913-48d0-9581-a8d9f40fa159"
                      },
                      "location": {
                        "file_name": "results"
                      }
                    },
                    "parameters": {
                      "requested_outputs": [
                        "assembly",
                        "md"
                      ],
                      "mode": "high_quality",
                      "ocr_mode": "enabled"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created. The `Content-Location` header will contain the URI reference to the created resource.",
            "headers": {
              "Content-Location": {
                "description": "The location of the newly created resource.\n",
                "schema": {
                  "type": "string",
                  "description": "The location of the newly created resource.\n"
                }
              },
              "Location": {
                "description": "The location of the newly created resource.\n",
                "schema": {
                  "type": "string",
                  "description": "The location of the newly created resource.\n"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextExtractionResponse"
                },
                "examples": {
                  "simple response": {
                    "summary": "A simple response.",
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "created_at": "2023-05-02T16:27:51Z",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "name": "extract"
                      },
                      "entity": {
                        "document_reference": {
                          "type": "connection_asset",
                          "connection": {
                            "id": "6f5688fd-f3bf-42c2-a18b-49c0d8a1920d"
                          },
                          "location": {
                            "file_name": "files/document.pdf"
                          }
                        },
                        "results_reference": {
                          "type": "connection_asset",
                          "connection": {
                            "id": "2a7c11bc-2913-48d0-9581-a8d9f40fa159"
                          },
                          "location": {
                            "file_name": "results"
                          }
                        },
                        "steps": {
                          "tables_processing": {
                            "enabled": true
                          }
                        },
                        "results": {
                          "status": "submitted",
                          "number_pages_processed": 0
                        }
                      }
                    }
                  },
                  "ocr response": {
                    "summary": "An OCR response.",
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "created_at": "2023-05-02T16:27:51Z",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "name": "extract"
                      },
                      "entity": {
                        "document_reference": {
                          "type": "connection_asset",
                          "connection": {
                            "id": "6f5688fd-f3bf-42c2-a18b-49c0d8a1920d"
                          },
                          "location": {
                            "file_name": "files/document.pdf"
                          }
                        },
                        "results_reference": {
                          "type": "connection_asset",
                          "connection": {
                            "id": "2a7c11bc-2913-48d0-9581-a8d9f40fa159"
                          },
                          "location": {
                            "file_name": "results"
                          }
                        },
                        "steps": {
                          "ocr": {
                            "languages_list": [
                              "en",
                              "fr"
                            ]
                          },
                          "tables_processing": {
                            "enabled": false
                          }
                        },
                        "results": {
                          "status": "submitted",
                          "number_pages_processed": 0
                        }
                      }
                    }
                  },
                  "multiple outputs": {
                    "summary": "Multiple outputs.",
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "created_at": "2023-05-02T16:27:51Z",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "name": "extract"
                      },
                      "entity": {
                        "document_reference": {
                          "type": "connection_asset",
                          "connection": {
                            "id": "6f5688fd-f3bf-42c2-a18b-49c0d8a1920d"
                          },
                          "location": {
                            "file_name": "files/document.pdf"
                          }
                        },
                        "results_reference": {
                          "type": "connection_asset",
                          "connection": {
                            "id": "2a7c11bc-2913-48d0-9581-a8d9f40fa159"
                          },
                          "location": {
                            "file_name": "results"
                          }
                        },
                        "parameters": {
                          "requested_outputs": [
                            "assembly",
                            "md"
                          ],
                          "mode": "high_quality",
                          "ocr_mode": "enabled"
                        },
                        "results": {
                          "status": "submitted",
                          "number_pages_processed": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.text-extraction.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "simple request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/text/extractions?version=2023-10-25'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "-d ",
                      "'{\n",
                      "  \"project_id\": \"12ac4cf1-252f-424b-b52d-5cdd9814987f\",\n",
                      "  \"document_reference\": {\n",
                      "    \"type\": \"connection_asset\",\n",
                      "    \"connection\": {\n",
                      "      \"id\": \"6f5688fd-f3bf-42c2-a18b-49c0d8a1920d\"\n",
                      "    },\n",
                      "    \"location\": {\n",
                      "      \"file_name\": \"files/document.pdf\"\n",
                      "    }\n",
                      "  },\n",
                      "  \"results_reference\": {\n",
                      "    \"type\": \"connection_asset\",\n",
                      "    \"connection\": {\n",
                      "      \"id\": \"2a7c11bc-2913-48d0-9581-a8d9f40fa159\"\n",
                      "    },\n",
                      "    \"location\": {\n",
                      "      \"file_name\": \"results\"\n",
                      "    }\n",
                      "  },\n",
                      "  \"steps\": {\n",
                      "    \"tables_processing\": {\n",
                      "      \"enabled\": true\n",
                      "    }\n",
                      "  }\n",
                      "}'\n"
                    ]
                  }
                ]
              },
              {
                "name": "ocr request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/text/extractions?version=2023-10-25'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "-d ",
                      "'{\n",
                      "  \"project_id\": \"12ac4cf1-252f-424b-b52d-5cdd9814987f\",\n",
                      "  \"document_reference\": {\n",
                      "    \"type\": \"connection_asset\",\n",
                      "    \"connection\": {\n",
                      "      \"id\": \"6f5688fd-f3bf-42c2-a18b-49c0d8a1920d\"\n",
                      "    },\n",
                      "    \"location\": {\n",
                      "      \"file_name\": \"files/document.pdf\"\n",
                      "    }\n",
                      "  },\n",
                      "  \"results_reference\": {\n",
                      "    \"type\": \"connection_asset\",\n",
                      "    \"connection\": {\n",
                      "      \"id\": \"2a7c11bc-2913-48d0-9581-a8d9f40fa159\"\n",
                      "    },\n",
                      "    \"location\": {\n",
                      "      \"file_name\": \"results\"\n",
                      "    }\n",
                      "  },\n",
                      "  \"steps\": {\n",
                      "    \"ocr\": {\n",
                      "      \"languages_list\": [\n",
                      "        \"en\"\n",
                      "      ]\n",
                      "    },\n",
                      "    \"tables_processing\": {\n",
                      "      \"enabled\": false\n",
                      "    }\n",
                      "  }\n",
                      "}'\n"
                    ]
                  }
                ]
              },
              {
                "name": "multiple outputs",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/text/extractions?version=2023-10-25'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "-d ",
                      "'{\n",
                      "  \"project_id\": \"12ac4cf1-252f-424b-b52d-5cdd9814987f\",\n",
                      "  \"document_reference\": {\n",
                      "    \"type\": \"connection_asset\",\n",
                      "    \"connection\": {\n",
                      "      \"id\": \"6f5688fd-f3bf-42c2-a18b-49c0d8a1920d\"\n",
                      "    },\n",
                      "    \"location\": {\n",
                      "      \"file_name\": \"files/document.pdf\"\n",
                      "    }\n",
                      "  },\n",
                      "  \"results_reference\": {\n",
                      "    \"type\": \"connection_asset\",\n",
                      "    \"connection\": {\n",
                      "      \"id\": \"2a7c11bc-2913-48d0-9581-a8d9f40fa159\"\n",
                      "    },\n",
                      "    \"location\": {\n",
                      "      \"file_name\": \"results\"\n",
                      "    }\n",
                      "  },\n",
                      "  \"parameters\": {\n",
                      "    \"requested_outputs\": [\n",
                      "      \"assembly\",\n",
                      "      \"md\"\n",
                      "    ],\n",
                      "    \"mode\": \"high_quality\",\n",
                      "    \"ocr_mode\": \"enabled\"\n",
                      "  }\n",
                      "}'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "get": {
        "operationId": "list_text_extractions",
        "x-cli-command": "list",
        "x-cli-command-group": "text-extraction",
        "tags": [
          "Text Extraction"
        ],
        "summary": "Retrieve the text extraction requests",
        "description": "Retrieve the list of text extraction requests for the specified space or project.\n\nThis operation does not save the history, any requests that were deleted or purged\nwill not appear in this list.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextExtractionResources"
                },
                "examples": {
                  "get_all_resources": {
                    "summary": "Get all text extraction requests.",
                    "value": {
                      "limit": 10,
                      "first": {
                        "href": "https://us-south.ml.cloud.ibm.com/ml/v1/text_extractions"
                      },
                      "resources": [
                        {
                          "metadata": {
                            "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                            "created_at": "2023-05-02T16:27:51Z",
                            "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                            "name": "extract"
                          },
                          "entity": {
                            "document_reference": {
                              "type": "connection_asset",
                              "connection": {
                                "id": "6f5688fd-f3bf-42c2-a18b-49c0d8a1920d"
                              },
                              "location": {
                                "file_name": "files/document.pdf"
                              }
                            },
                            "results_reference": {
                              "type": "connection_asset",
                              "connection": {
                                "id": "2a7c11bc-2913-48d0-9581-a8d9f40fa159"
                              },
                              "location": {
                                "file_name": "results"
                              }
                            },
                            "results": {
                              "status": "completed",
                              "number_pages_processed": 3,
                              "running_at": "2023-05-02T16:28:03Z",
                              "completed_at": "2023-05-02T16:29:31Z"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.text-extraction.list"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v1/text/extractions/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The identifier of the extraction request.",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "$ref": "#/components/parameters/version"
        },
        {
          "$ref": "#/components/parameters/SpaceId"
        },
        {
          "$ref": "#/components/parameters/ProjectId"
        }
      ],
      "get": {
        "operationId": "text_extraction_get",
        "x-cli-command": "get",
        "x-cli-command-group": "text-extraction",
        "tags": [
          "Text Extraction"
        ],
        "summary": "Get the results of the request",
        "description": "Retrieve the text extraction request with the specified identifier.\n\nNote that there is a retention period of 2 days. If this retention\nperiod is exceeded then the request will be deleted and the results\nno longer available. In this case this operation will return `404`.\n",
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextExtractionResponse"
                },
                "examples": {
                  "response": {
                    "summary": "A sample response.",
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "created_at": "2023-05-02T16:27:51Z",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "name": "extract"
                      },
                      "entity": {
                        "document_reference": {
                          "type": "connection_asset",
                          "connection": {
                            "id": "6f5688fd-f3bf-42c2-a18b-49c0d8a1920d"
                          },
                          "location": {
                            "file_name": "files/document.pdf"
                          }
                        },
                        "results_reference": {
                          "type": "connection_asset",
                          "connection": {
                            "id": "2a7c11bc-2913-48d0-9581-a8d9f40fa159"
                          },
                          "location": {
                            "file_name": "results"
                          }
                        },
                        "steps": {
                          "tables_processing": {
                            "enabled": true
                          }
                        },
                        "results": {
                          "status": "running",
                          "number_pages_processed": 2,
                          "running_at": "2023-05-02T16:28:03Z"
                        }
                      }
                    }
                  },
                  "ocr response": {
                    "summary": "An ocr response.",
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "created_at": "2023-05-02T16:27:51Z",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "name": "extract"
                      },
                      "entity": {
                        "document_reference": {
                          "type": "connection_asset",
                          "connection": {
                            "id": "6f5688fd-f3bf-42c2-a18b-49c0d8a1920d"
                          },
                          "location": {
                            "file_name": "files/document.pdf"
                          }
                        },
                        "results_reference": {
                          "type": "connection_asset",
                          "connection": {
                            "id": "2a7c11bc-2913-48d0-9581-a8d9f40fa159"
                          },
                          "location": {
                            "file_name": "results"
                          }
                        },
                        "steps": {
                          "ocr": {
                            "languages_list": [
                              "en",
                              "fr"
                            ]
                          },
                          "tables_processing": {
                            "enabled": false
                          }
                        },
                        "results": {
                          "status": "submitted",
                          "number_pages_processed": 0
                        }
                      }
                    }
                  },
                  "multiple outputs": {
                    "summary": "Multiple outputs.",
                    "value": {
                      "metadata": {
                        "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
                        "created_at": "2023-05-02T16:27:51Z",
                        "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "name": "extract"
                      },
                      "entity": {
                        "document_reference": {
                          "type": "connection_asset",
                          "connection": {
                            "id": "6f5688fd-f3bf-42c2-a18b-49c0d8a1920d"
                          },
                          "location": {
                            "file_name": "files/document.pdf"
                          }
                        },
                        "results_reference": {
                          "type": "connection_asset",
                          "connection": {
                            "id": "2a7c11bc-2913-48d0-9581-a8d9f40fa159"
                          },
                          "location": {
                            "file_name": "results"
                          }
                        },
                        "parameters": {
                          "requested_outputs": [
                            "assembly",
                            "md"
                          ],
                          "mode": "high_quality",
                          "ocr_mode": "enabled"
                        },
                        "results": {
                          "status": "running",
                          "number_pages_processed": 2,
                          "running_at": "2023-05-02T16:28:03Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.text-extraction.get"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "get results",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request GET 'https://{cluster_url}/ml/v1/text/extractions/{id}?version=2023-10-25&project_id=12ac4cf1-252f-424b-b52d-5cdd9814987f'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Accept: application/json'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "delete": {
        "operationId": "text_extraction_delete",
        "x-cli-command": "delete",
        "x-cli-command-group": "text-extraction",
        "parameters": [
          {
            "$ref": "#/components/parameters/hard_delete"
          }
        ],
        "tags": [
          "Text Extraction"
        ],
        "summary": "Delete the request",
        "description": "Cancel the specified text extraction request and delete any associated results.\n",
        "responses": {
          "204": {
            "description": "Request deleted."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.text-extraction.delete"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "delete results",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request DELETE 'https://{cluster_url}/ml/v1/text/extractions/{id}?version=2023-10-25&project_id=12ac4cf1-252f-424b-b52d-5cdd9814987f'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/text/chat": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "text_chat",
        "x-cli-command": "chat",
        "x-cli-command-group": "text",
        "tags": [
          "Text Chat"
        ],
        "summary": "Infer text",
        "description": "Infer the next tokens for a given deployed model with a set of parameters.\n",
        "requestBody": {
          "required": true,
          "description": "From a given prompt, infer the next tokens.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextChatRequest"
              },
              "examples": {
                "text chat": {
                  "summary": "text_chat",
                  "description": "A text chat example.\n",
                  "value": {
                    "model_id": "meta-llama/llama-3-8b-instruct",
                    "project_id": "63dc4cf1-252f-424b-b52d-5cdd9814987f",
                    "messages": [
                      {
                        "role": "system",
                        "content": "You are a helpful assistant."
                      },
                      {
                        "role": "user",
                        "content": "Who won the world series in 2020?"
                      },
                      {
                        "role": "assistant",
                        "content": "The Los Angeles Dodgers won the World Series in 2020."
                      },
                      {
                        "role": "user",
                        "content": {
                          "type": "text",
                          "text": "Where was it played?"
                        }
                      }
                    ],
                    "max_tokens": 100,
                    "temperature": 0,
                    "time_limit": 1000
                  }
                },
                "tool call": {
                  "summary": "tool_call",
                  "description": "A tool calling example.\n",
                  "value": {
                    "model_id": "meta-llama/llama-3-8b-instruct",
                    "project_id": "63dc4cf1-252f-424b-b52d-5cdd9814987f",
                    "messages": [
                      {
                        "role": "user",
                        "content": {
                          "type": "text",
                          "text": "What is the weather like in Boston today?"
                        }
                      }
                    ],
                    "tools": [
                      {
                        "type": "function",
                        "function": {
                          "name": "get_current_weather",
                          "description": "Get the current weather in a given location",
                          "parameters": {
                            "type": "object",
                            "properties": {
                              "location": {
                                "description": "The city, e.g. San Francisco, CA",
                                "type": "string"
                              },
                              "unit": {
                                "enum": [
                                  "celsius",
                                  "fahrenheit"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "location"
                            ]
                          }
                        }
                      }
                    ],
                    "tool_choice": {
                      "type": "function",
                      "function": {
                        "name": "get_current_weather",
                        "description": "Get the current weather for a location.\nCall this whenever you need to know the weather,\nor for example when a customer asks 'What is the weather like in New York'\n"
                      }
                    }
                  }
                },
                "json mode": {
                  "summary": "json_mode",
                  "description": "A text chat example with json output.\n",
                  "value": {
                    "model_id": "meta-llama/llama-3-8b-instruct",
                    "project_id": "63dc4cf1-252f-424b-b52d-5cdd9814987f",
                    "response_format": {
                      "type": "json_object"
                    },
                    "messages": [
                      {
                        "role": "system",
                        "content": "You are a helpful assistant designed to output JSON."
                      },
                      {
                        "role": "user",
                        "content": {
                          "type": "text",
                          "text": "Who won the world series in 2020?"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextChatResponse"
                },
                "examples": {
                  "text chat": {
                    "summary": "text_chat",
                    "description": "A text chat example.\n",
                    "value": {
                      "id": "cmpl-15475d0dea9b4429a55843c77997f8a9",
                      "model_id": "meta-llama/llama-3-8b-instruct",
                      "created": 1689958352,
                      "created_at": "2023-07-21T16:52:32.190Z",
                      "choices": [
                        {
                          "index": 0,
                          "message": {
                            "role": "assistant",
                            "content": "The 2020 World Series was played at Globe Life Field in Arlington, Texas,\nwhich is the home stadium of the Texas Rangers.\nHowever, the series was played with no fans in attendance due to the COVID-19 pandemic.\n"
                          },
                          "finish_reason": "stop"
                        }
                      ],
                      "usage": {
                        "completion_tokens": 47,
                        "prompt_tokens": 59,
                        "total_tokens": 106
                      }
                    }
                  },
                  "tool call": {
                    "summary": "tool_call",
                    "description": "A tool calling example.\n",
                    "value": {
                      "id": "cmpl-15475d0dea9b4429a55843c77997f8a9",
                      "model_id": "meta-llama/llama-3-8b-instruct",
                      "created": 1689958352,
                      "created_at": "2023-07-21T16:52:32.190Z",
                      "choices": [
                        {
                          "index": 0,
                          "message": {
                            "role": "assistant",
                            "tool_calls": [
                              {
                                "id": "chatcmpl-tool-ef093f0cbbff4c6a973aa0873f73fc99",
                                "type": "function",
                                "function": {
                                  "name": "get_current_weather",
                                  "arguments": "{\n  \"location\": \"Boston, MA\",\n  \"unit\": \"fahrenheit\"\n}\n"
                                }
                              }
                            ]
                          },
                          "finish_reason": "stop"
                        }
                      ],
                      "usage": {
                        "completion_tokens": 18,
                        "prompt_tokens": 19,
                        "total_tokens": 37
                      }
                    }
                  },
                  "json mode": {
                    "summary": "json_mode",
                    "description": "A text chat example with json output.\n",
                    "value": {
                      "id": "cmpl-09945b25c805491fb49e15439b8e5d84",
                      "model_id": "meta-llama/llama-3-8b-instruct",
                      "created": 1689958352,
                      "created_at": "2023-07-21T16:52:32.190Z",
                      "choices": [
                        {
                          "index": 0,
                          "message": {
                            "role": "assistant",
                            "content": "[\"The Los Angeles Dodgers won the World Series in 2020. They defeated the Tampa Bay Rays in six games.\"]"
                          },
                          "finish_reason": "stop"
                        }
                      ],
                      "usage": {
                        "completion_tokens": 35,
                        "prompt_tokens": 20,
                        "total_tokens": 55
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.text-chat.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "text chat",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/text/chat?version=2023-10-25'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "-d ",
                      "'{\n",
                      "  \"model_id\": \"meta-llama/llama-3-8b-instruct\",\n",
                      "  \"project_id\": \"63dc4cf1-252f-424b-b52d-5cdd9814987f\",\n",
                      "  \"messages\": [\n",
                      "    {\n",
                      "      \"role\": \"system\",\n",
                      "      \"content\": \"You are a helpful assistant.\"\n",
                      "    },\n",
                      "    {\n",
                      "      \"role\": \"user\",\n",
                      "      \"content\": [\n",
                      "        {\n",
                      "          \"type\": \"text\",\n",
                      "          \"text\": \"Who won the world series in 2020?\"\n",
                      "        }\n",
                      "      ]\n",
                      "    },\n",
                      "    {\n",
                      "      \"role\": \"assistant\",\n",
                      "      \"content\": \"The Los Angeles Dodgers won the World Series in 2020.\"\n",
                      "    },\n",
                      "    {\n",
                      "      \"role\": \"user\",\n",
                      "      \"content\": [\n",
                      "        {\n",
                      "          \"type\": \"text\",\n",
                      "          \"text\": \"Where was it played?\"\n",
                      "        }\n",
                      "      ]\n",
                      "    }\n",
                      "  ],\n",
                      "  \"max_tokens\": 100,\n",
                      "  \"temperature\": 0,\n",
                      "  \"time_limit\": 1000\n",
                      "}'\n"
                    ]
                  }
                ]
              },
              {
                "name": "tool call",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/text/chat?version=2023-10-25'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "-d ",
                      "'{\n",
                      "  \"model_id\": \"meta-llama/llama-3-8b-instruct\",\n",
                      "  \"project_id\": \"63dc4cf1-252f-424b-b52d-5cdd9814987f\",\n",
                      "  \"messages\": [\n",
                      "    {\n",
                      "      \"role\": \"user\",\n",
                      "      \"content\": [\n",
                      "        {\n",
                      "          \"type\": \"text\",\n",
                      "          \"text\": \"What is the weather like in Boston today?\"\n",
                      "        }\n",
                      "      ]\n",
                      "    }\n",
                      "  ],\n",
                      "  \"tools\": [\n",
                      "    {\n",
                      "      \"type\": \"function\",\n",
                      "      \"function\": {\n",
                      "        \"name\": \"get_current_weather\",\n",
                      "        \"description\": \"Get the current weather in a given location\",\n",
                      "        \"parameters\": {\n",
                      "          \"type\": \"object\",\n",
                      "          \"properties\": {\n",
                      "            \"location\": {\n",
                      "              \"description\": \"The city, e.g. San Francisco, CA\",\n",
                      "              \"type\": \"string\"\n",
                      "            },\n",
                      "            \"unit\": {\n",
                      "              \"enum\": [\n",
                      "                \"celsius\",\n",
                      "                \"fahrenheit\"\n",
                      "              ],\n",
                      "              \"type\": \"string\"\n",
                      "            }\n",
                      "          },\n",
                      "          \"required\": [\n",
                      "            \"location\"\n",
                      "          ]\n",
                      "        }\n",
                      "      }\n",
                      "    }\n",
                      "  ],\n",
                      "  \"tool_choice\": {\n",
                      "    \"type\": \"function\",\n",
                      "    \"function\": {\n",
                      "      \"name\": \"get_current_weather\",\n",
                      "    }\n",
                      "  }\n",
                      "}'\n"
                    ]
                  }
                ]
              },
              {
                "name": "json mode",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/text/chat?version=2023-10-25'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "-d ",
                      "'{\n",
                      "  \"model_id\": \"meta-llama/llama-3-8b-instruct\",\n",
                      "  \"project_id\": \"63dc4cf1-252f-424b-b52d-5cdd9814987f\",\n",
                      "  \"response_format\": {\n",
                      "    \"type\": \"json_object\"\n",
                      "  },\n",
                      "  \"messages\": [\n",
                      "    {\n",
                      "      \"role\": \"system\",\n",
                      "      \"content\": \"You are a helpful assistant designed to output JSON.\"\n",
                      "    },\n",
                      "    {\n",
                      "      \"role\": \"user\",\n",
                      "      \"content\": [\n",
                      "        {\n",
                      "          \"type\": \"user\",\n",
                      "          \"text\": \"Who won the world series in 2020?\"\n",
                      "        }\n",
                      "      ]\n",
                      "    }\n",
                      "  ]\n",
                      "}'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/text/chat_stream": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "text_chat_stream",
        "x-cli-command": "chat-stream",
        "x-cli-command-group": "text",
        "tags": [
          "Text Chat"
        ],
        "summary": "Infer text event stream",
        "description": "Infer the next tokens for a given deployed model with a set of parameters.\nThis operation will return the output tokens as a stream of events.\n",
        "requestBody": {
          "required": true,
          "description": "From a given prompt, infer the next tokens in a server-sent events (SSE) stream.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextChatRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation (`Content-Type: text/event-stream`).",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TextChatStreamResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.text-chat.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v4/ai_services": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "ai_services_create",
        "tags": [
          "AI Services"
        ],
        "summary": "Create a new AI service",
        "description": "Create a new AI service with the given payload. A AI service is some code that can be deployed as a deployment.\n",
        "requestBody": {
          "description": "Payload for creating the AI service. Either `space_id` or `project_id` has to be provided and is mandatory.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIServiceRequest"
              },
              "examples": {
                "request": {
                  "summary": "A sample request.",
                  "value": {
                    "name": "ai-app-1",
                    "software_spec": {
                      "id": "45f12dfe-aa78-5b8d-9f38-0ee223c47309"
                    },
                    "space_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "documentation": {
                      "request": {
                        "application/json": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "properties": {
                            "query": {
                              "type": "string"
                            },
                            "parameters": {
                              "properties": {
                                "max_new_tokens": {
                                  "type": "integer"
                                },
                                "top_p": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "max_new_tokens",
                                "top_p"
                              ]
                            }
                          },
                          "required": [
                            "query"
                          ]
                        },
                        "application/png": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "properties": {
                            "image": {
                              "type": "string",
                              "format": "binary"
                            }
                          },
                          "required": [
                            "image"
                          ]
                        }
                      },
                      "response": {
                        "application/json": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "properties": {
                            "query": {
                              "type": "string"
                            },
                            "result": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "query",
                            "result"
                          ]
                        },
                        "application/png": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "string",
                          "format": "binary"
                        }
                      }
                    },
                    "tooling": {
                      "reference_format": true
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "AI service created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIServiceResource"
                },
                "examples": {
                  "response": {
                    "summary": "The AI service response.",
                    "description": "The response with the result.\n",
                    "value": {
                      "metadata": {
                        "id": "b53c5118-b1ca-43ef-a597-ef839ff7129f",
                        "name": "ai-app-1",
                        "space_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                        "created_at": "2023-05-02T16:27:51Z"
                      },
                      "entity": {
                        "software_spec": {
                          "id": "45f12dfe-aa78-5b8d-9f38-0ee223c47309"
                        },
                        "documentation": {
                          "request": {
                            "application/json": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "type": "object",
                              "properties": {
                                "query": {
                                  "type": "string"
                                },
                                "parameters": {
                                  "properties": {
                                    "max_new_tokens": {
                                      "type": "integer"
                                    },
                                    "top_p": {
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "max_new_tokens",
                                    "top_p"
                                  ]
                                }
                              },
                              "required": [
                                "query"
                              ]
                            },
                            "application/png": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "type": "object",
                              "properties": {
                                "image": {
                                  "type": "string",
                                  "format": "binary"
                                }
                              },
                              "required": [
                                "image"
                              ]
                            }
                          },
                          "response": {
                            "application/json": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "type": "object",
                              "properties": {
                                "query": {
                                  "type": "string"
                                },
                                "result": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "query",
                                "result"
                              ]
                            },
                            "application/png": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "type": "string",
                              "format": "binary"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "description": "The location of the new AI service artifact, e.g. `/ml/v1/ai_services/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
                "schema": {
                  "type": "string",
                  "description": "The location of the new AI service artifact.\n"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.ai_service.create"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Create request AI Service",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v4/ai_services?version=2024-10-17'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "-d ",
                      "'{\n",
                      "  \"name\": \"ai-service-1\",\n",
                      "  \"space_id\": \"12ac4cf1-252f-424b-b52d-5cdd9814987f\",\n",
                      "  \"software_spec\": {\n",
                      "    \"id\": \"45f12dfe-aa78-5b8d-9f38-0ee223c47309\"\n",
                      "  },\n",
                      "  \"documentation\": {\n",
                      "    \"request\": {\n",
                      "      \"application/json\": {\n",
                      "        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n",
                      "        \"type\": \"object\",\n",
                      "        \"properties\": {\n",
                      "          \"query\": {\n",
                      "            \"type\": \"string\"\n",
                      "          },\n",
                      "          \"parameters\": {\n",
                      "            \"properties\": {\n",
                      "              \"max_new_tokens\": {\n",
                      "                \"type\": \"integer\"\n",
                      "              },\n",
                      "              \"top_p\": {\n",
                      "                \"type\": \"number\"\n",
                      "              }\n",
                      "            },\n",
                      "            \"required\": [\n",
                      "              \"max_new_tokens\",\n",
                      "              \"top_p\"\n",
                      "            ]\n",
                      "          }\n",
                      "        },\n",
                      "        \"required\": [\n",
                      "          \"query\"\n",
                      "        ]\n",
                      "      },\n",
                      "      \"application/png\": {\n",
                      "        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n",
                      "        \"type\": \"object\",\n",
                      "        \"properties\": {\n",
                      "          \"image\": {\n",
                      "            \"type\": \"string\",\n",
                      "            \"format\": \"binary\"\n",
                      "          }\n",
                      "        },\n",
                      "        \"required\": [\n",
                      "          \"image\"\n",
                      "        ]\n",
                      "      }\n",
                      "    },\n",
                      "    \"response\": {\n",
                      "      \"application/json\": {\n",
                      "        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n",
                      "        \"type\": \"object\",\n",
                      "        \"properties\": {\n",
                      "          \"query\": {\n",
                      "            \"type\": \"string\"\n",
                      "          },\n",
                      "          \"result\": {\n",
                      "            \"type\": \"string\"\n",
                      "          }\n",
                      "        },\n",
                      "        \"required\": [\n",
                      "          \"query\",\n",
                      "          \"result\"\n",
                      "        ]\n",
                      "      },\n",
                      "      \"application/png\": {\n",
                      "        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n",
                      "        \"type\": \"string\",\n",
                      "        \"format\": \"binary\"\n",
                      "      }\n",
                      "    }\n",
                      "  }\n",
                      "}'"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "get": {
        "operationId": "ai_services_list",
        "tags": [
          "AI Services"
        ],
        "summary": "Retrieve the AI services",
        "description": "Retrieve the AI services for the specified space or project.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/tag.value"
          },
          {
            "$ref": "#/components/parameters/search"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIServiceResources"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.ai_service.list"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Retrieve all AI services",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request GET 'https://{cluster_url}/ml/v4/ai_services?space_id=12ac4cf1-252f-424b-b52d-5cdd9814987f&limit=100&version=2024-10-17'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v4/ai_services/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path_ai_service_id"
        },
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "get": {
        "operationId": "ai_services_get",
        "tags": [
          "AI Services"
        ],
        "summary": "Retrieve the AI service",
        "description": "Retrieve the AI service with the specified identifier. If `rev` query parameter is provided,\n`rev=latest` will fetch the latest revision. A call with `rev={revision_number}` will fetch the given revision_number record. Either `space_id` or `project_id` has to be provided and is mandatory.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          },
          {
            "$ref": "#/components/parameters/rev"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIServiceResource"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.ai_service.read"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Retrieve a AI service",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request GET \"https://{cluster_url}/ml/v4/ai_services/{id}?space_id=12ac4cf1-252f-424b-b52d-5cdd9814987f&version=2024-10-17\"\n",
                      "-H \"Authorization: Bearer eyJhbGciOiJSUzUxM...\""
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "patch": {
        "operationId": "ai_services_update",
        "tags": [
          "AI Services"
        ],
        "summary": "Update the AI service",
        "description": "Update the AI service with the provided patch data.\nThe following fields can be patched:\n- `/tags`\n- `/name`\n- `/description`\n- `/custom`\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          }
        ],
        "requestBody": {
          "description": "Input For Patch. This is the patch body which corresponds to the JavaScript Object Notation (JSON) Patch standard (RFC 6902).\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatch"
              }
            }
          },
          "required": true
        },
        "x-json-patch-helper-model": "common_patch_request_helper",
        "responses": {
          "200": {
            "description": "AI service has been patched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIServiceResource"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-codegen-request-body-name": "json-patch",
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.ai_service.update"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Update AI Services",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request PATCH \"https://{cluster_url}/ml/v4/ai_services/{id}?space_id=12ac4cf1-252f-424b-b52d-5cdd9814987f&version=2024-10-17\"\n",
                      "-H \"Authorization: Bearer eyJhbGciOiJSUzUxM...\"\n",
                      "-H \"Content-Type: application/json\"\n",
                      "-H \"Accept: application/json\"\n",
                      "-d \n",
                      "[\n",
                      "  {\n",
                      "    \"op\": \"replace\",\n",
                      "    \"path\": \"/description\",\n",
                      "    \"value\": \"New Description\"\n",
                      "  }\n",
                      "]"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "delete": {
        "operationId": "ai_services_delete",
        "tags": [
          "AI Services"
        ],
        "summary": "Delete the AI service",
        "description": "Delete the AI service with the specified identifier. This will delete all revisions of this flow as well. For each revision all attachments will also be deleted.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          }
        ],
        "responses": {
          "204": {
            "description": "AI service deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.ai_service.delete"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Delete the AI service",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request DELETE \"https://{cluster_url}/ml/v4/ai_services/{id}?space_id=12ac4cf1-252f-424b-b52d-5cdd9814987f&version=2024-10-17\"\n",
                      "-H \"Authorization: Bearer eyJhbGciOiJSUzUxM...\""
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v4/ai_services/{id}/code": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path_ai_service_id"
        },
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "put": {
        "operationId": "ai_services_upload_code",
        "tags": [
          "AI Services"
        ],
        "summary": "Upload the AI service code",
        "description": "Upload the flow code. AI services expect a zip file that contains the code files that make up the flow.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AIServiceBody"
        },
        "responses": {
          "201": {
            "description": "AI service code uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIServiceContentMetadata"
                }
              }
            },
            "headers": {
              "Location": {
                "description": "The location of the new AI service attachment,\ne.g. `/ml/v1/ai_services/459afef1-252f-424b-b52d-5cdd98128fa3/code?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
                "schema": {
                  "type": "string",
                  "description": "The location of the new AI service attachment.\n"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-codegen-request-body-name": "upload-code",
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.ai_service.add"
            }
          ]
        },
        "x-cli-generate-adapter-method": true,
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Upload the flow code",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request PUT \"https://{cluster_url}/ml/v4/ai_services/{id}/code?space_id=12ac4cf1-252f-424b-b52d-5cdd9814987f&version=2024-10-17\"\n",
                      "-H \"Authorization: Bearer eyJhbGciOiJSUzUxM...\"\n",
                      "-H \"Content-Type: application/gzip\"\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "get": {
        "operationId": "ai_services_download_code",
        "tags": [
          "AI Services"
        ],
        "summary": "Download the AI service code",
        "description": "Download the AI service code.\nIt is possible to download the `code` for a given revision of the `flow`.\nAI services expect a zip file that contains the code files that make up the flow.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          },
          {
            "$ref": "#/components/parameters/rev"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApplicationZip"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.ai_service.read"
            }
          ]
        },
        "x-cli-generate-adapter-method": true,
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Download the AI service code",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request GET \"https://{cluster_url}/ml/v4/ai_services/{id}/code?space_id=12ac4cf1-252f-424b-b52d-5cdd9814987f&rev=1&version=2024-10-17\"\n",
                      "-H \"Authorization: Bearer eyJhbGciOiJSUzUxM...\""
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v4/ai_services/{id}/revisions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/path_ai_service_id"
        },
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "ai_services_create_revision",
        "tags": [
          "AI Services"
        ],
        "summary": "Create a new AI service revision",
        "description": "Create a new AI service revision.\nThe current metadata and content for\n`id` will be taken and a new revision created.\nEither `space_id` or `project_id` has to be provided and is mandatory.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevisionEntitySpaceProjectRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "AI service revision created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIServiceResource"
                }
              }
            },
            "headers": {
              "Location": {
                "description": "The location of the new created AI service, e.g. `/ml/v1/ai_services/53dc4cf1-252f-424b-b52d-5cdd9814987f?space_id=fab7ac25-2f97-41e1-8f77-203c3423e5f4`.\n",
                "schema": {
                  "type": "string",
                  "description": "The location of the new created AI service.\n"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.ai_service.create"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Create new AI service revision",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST \"https://{cluster_url}/ml/v4/ai_services/{id}/revisions?space_id=12ac4cf1-252f-424b-b52d-5cdd9814987f&version=2024-10-17\"\n",
                      "-H \"Authorization: Bearer eyJhbGciOiJSUzUxM...\"\n",
                      "-H \"Content-Type: application/json\"\n",
                      "-H \"Accept: application/json\"\n",
                      "-d \n",
                      "{\n",
                      "  \"space_id\": \"12ac4cf1-252f-424b-b52d-5cdd9814987f\",\n",
                      "  \"commit_message\": \"New Code\"\n",
                      "}\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "get": {
        "operationId": "ai_services_list_revisions",
        "tags": [
          "AI Services"
        ],
        "summary": "Retrieve the AI service revisions",
        "description": "Retrieve the AI service revisions.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "AI service revisions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIServiceResources"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.ai_service.list"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Retrieve AI service revisions",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request GET \"https://{cluster_url}/ml/v4/ai_services/{id}/revisions?space_id=12ac4cf1-252f-424b-b52d-5cdd9814987f&limit=100&version=2024-10-17\"\n",
                      "-H \"Authorization: Bearer eyJhbGciOiJSUzUxM...\""
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/time_series/forecast": {
      "parameters": [
        {
          "$ref": "#/components/parameters/version"
        }
      ],
      "post": {
        "operationId": "time_series_forecast",
        "x-cli-command": "forecast",
        "x-cli-command-group": "time-series",
        "tags": [
          "Time Series"
        ],
        "summary": "Time series forecast",
        "description": "Generate forecasts, or predictions for future time points, given historical time series data.\n",
        "requestBody": {
          "required": true,
          "description": "The forecast request.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TSForecastRequest"
              },
              "examples": {
                "request": {
                  "summary": "A sample request.",
                  "value": {
                    "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
                    "model_id": "ibm/ttm-1024-96-r2",
                    "schema": {
                      "timestamp_column": "date",
                      "id_columns": [
                        "ID1"
                      ]
                    },
                    "data": {
                      "date": [
                        "2020-01-01T00:00:00",
                        "2020-01-01T01:00:00",
                        "2020-01-05T01:00:00"
                      ],
                      "ID1": [
                        "D1",
                        "D1",
                        "D1"
                      ],
                      "TARGET1": [
                        1.46,
                        2.34,
                        4.55
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TSForecastResponse"
                },
                "examples": {
                  "response": {
                    "summary": "A sample response.",
                    "value": {
                      "model_id": "ibm/ttm-1024-96-r2",
                      "created_at": "2020-05-02T16:27:51Z",
                      "results": [
                        {
                          "date": [
                            "2020-01-05T02:00:00",
                            "2020-01-05T03:00:00",
                            "2020-01-06T00:00:00"
                          ],
                          "ID1": [
                            "D1",
                            "D1",
                            "D1"
                          ],
                          "TARGET1": [
                            1.86,
                            3.24,
                            6.78
                          ]
                        }
                      ],
                      "input_data_points": 512,
                      "output_data_points": 1024
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "x-ibm-events": {
          "events": [
            {
              "name": "pm-20.time-series-forecast.send"
            }
          ]
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "sample request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/time_series/forecast?version=2023-10-25'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Accept: application/json'\n",
                      "-d ",
                      "'{\n",
                      "  \"project_id\": \"12ac4cf1-252f-424b-b52d-5cdd9814987f\",\n",
                      "  \"model_id\": \"ibm/ttm-1024-96-r2\",\n",
                      "  \"schema\": {\n",
                      "    \"timestamp_column\": \"date\",\n",
                      "    \"id_columns\": [\n",
                      "      \"ID1\"\n",
                      "    ]\n",
                      "  },\n",
                      "  \"data\": {\n",
                      "    \"date\": [\n",
                      "      \"2020-01-01T00:00:00\",\n",
                      "      \"2020-01-01T01:00:00\",\n",
                      "      \"2020-01-05T01:00:00\"\n",
                      "    ],\n",
                      "    \"ID1\": [\n",
                      "      \"D1\",\n",
                      "      \"D1\",\n",
                      "      \"D1\"\n",
                      "    ],\n",
                      "    \"TARGET1\": [\n",
                      "      1.46,\n",
                      "      2.34,\n",
                      "      4.55\n",
                      "    ]\n",
                      "  }\n",
                      "}'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/ml/v1/tuning/documents": {
      "post": {
        "operationId": "create_document_extraction",
        "x-cli-command": "create",
        "x-cli-command-group": "document-extraction",
        "summary": "Create a document extraction",
        "description": "Create a document extraction.\n",
        "tags": [
          "Document Extraction (Beta)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/version"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentExtractionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The document extraction job has been created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentExtractionResource"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "operationId": "list_document_extractions",
        "x-cli-command": "list",
        "x-cli-command-group": "document-extraction",
        "summary": "Get document extractions",
        "description": "Get document extractions.\n",
        "tags": [
          "Document Extraction (Beta)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          },
          {
            "$ref": "#/components/parameters/SpaceId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentExtractionResources"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v1/tuning/documents/{id}": {
      "get": {
        "operationId": "get_document_extraction",
        "x-cli-command": "get",
        "x-cli-command-group": "document-extraction",
        "summary": "Get document extraction",
        "description": "Get document extraction.\n",
        "tags": [
          "Document Extraction (Beta)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/path_id"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          },
          {
            "$ref": "#/components/parameters/SpaceId"
          }
        ],
        "responses": {
          "200": {
            "description": "The document extraction job has been created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentExtractionResource"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "cancel_document_extractions",
        "x-cli-command": "delete",
        "x-cli-command-group": "document-extraction",
        "summary": "Cancel the document extraction",
        "description": "Cancel the specified document extraction and remove it.\n",
        "tags": [
          "Document Extraction (Beta)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/path_id"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          },
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "name": "hard_delete",
            "description": "Set to true in order to also delete the job metadata information.",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Document extraction cancelled."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v1/tuning/synthetic_data": {
      "post": {
        "operationId": "create_synthetic_data_generation",
        "x-cli-command": "create",
        "x-cli-command-group": "synthetic-data-generation",
        "summary": "Create a synthetic data generation job",
        "description": "Create a synthetic data generation job.\n",
        "tags": [
          "Synthetic Data Generation (Beta)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/version"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyntheticDataGenerationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The synthetic data generation job has been created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticDataGenerationResource"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "operationId": "list_synthetic_data_generations",
        "x-cli-command": "list",
        "x-cli-command-group": "synthetic-data-generation",
        "summary": "Get synthetic data generation jobs",
        "tags": [
          "Synthetic Data Generation (Beta)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          },
          {
            "$ref": "#/components/parameters/SpaceId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticDataGenerationResources"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v1/tuning/synthetic_data/{id}": {
      "get": {
        "operationId": "get_synthetic_data_generation",
        "x-cli-command": "get",
        "x-cli-command-group": "synthetic-data-generation",
        "summary": "Get synthetic data generation job",
        "tags": [
          "Synthetic Data Generation (Beta)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/path_id"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          },
          {
            "$ref": "#/components/parameters/SpaceId"
          }
        ],
        "responses": {
          "200": {
            "description": "The synthetic data generation job has been created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyntheticDataGenerationResource"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "cancel_synthetic_data_generation",
        "x-cli-command": "delete",
        "x-cli-command-group": "synthetic-data-generation",
        "summary": "Cancel the synthetic data generation",
        "description": "Cancel the synthetic data generation and remove it.\n",
        "tags": [
          "Synthetic Data Generation (Beta)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/path_id"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          },
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "name": "hard_delete",
            "description": "Set to true in order to also delete the job metadata information.",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Synthetic data generation cancelled."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v1/tuning/taxonomies_imports": {
      "post": {
        "operationId": "create_taxonomy",
        "x-cli-command": "create",
        "x-cli-command-group": "taxonomy",
        "summary": "Create a taxonomy job",
        "description": "Create a taxonomy job.\n",
        "tags": [
          "Taxonomy (Beta)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/version"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxonomyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The taxonomy job has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxonomyResource"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "InstructLab Taxonomy",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/ml/v1/tuning/taxonomies_imports?version=2023-10-25'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw ",
                      "'{\n",
                      "  \"name\": \"taxonomyName\",\n",
                      "  \"description\": \"Taxonomy\",\n",
                      "  \"project_id\": \"bfdae754-f0ef-45c6-a982-50b222f82015\",\n",
                      "  \"data_reference\": {\n",
                      "    \"type\": \"github\",\n",
                      "    \"location\": {\n",
                      "      \"secret_manager_url\": \"https://5db94803-9c37-498b-b4bd-d601ac4a0518.eu-gb.secrets-manager.test.appdomain.cloud/api/v2/secrets\",\n",
                      "      \"secret_id\": \"539f678e-3436-5d70-5c62-e98250bf0427\",\n",
                      "      \"path\": \".\"\n",
                      "    }\n",
                      "  }\n",
                      "}'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "get": {
        "operationId": "list_taxonomies",
        "x-cli-command": "list",
        "x-cli-command-group": "taxonomy",
        "summary": "Get taxonomy jobs",
        "tags": [
          "Taxonomy (Beta)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          },
          {
            "$ref": "#/components/parameters/SpaceId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxonomyResources"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/v1/tuning/taxonomies_imports/{id}": {
      "get": {
        "operationId": "get_taxonomy",
        "x-cli-command": "get",
        "x-cli-command-group": "taxonomy",
        "summary": "Get taxonomy job",
        "tags": [
          "Taxonomy (Beta)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/path_id"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          },
          {
            "$ref": "#/components/parameters/SpaceId"
          }
        ],
        "responses": {
          "200": {
            "description": "The taxonomy job has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxonomyResource"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "delete_taxonomy",
        "x-cli-command": "delete",
        "x-cli-command-group": "taxonomy",
        "summary": "Cancel or delete the taxonomy job",
        "description": "Cancel or delete the taxonomy job.\n",
        "tags": [
          "Taxonomy (Beta)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/version"
          },
          {
            "$ref": "#/components/parameters/ProjectId"
          },
          {
            "$ref": "#/components/parameters/SpaceId"
          },
          {
            "$ref": "#/components/parameters/path_id"
          },
          {
            "name": "hard_delete",
            "description": "Set to `true` in order to also delete the job metadata information.",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Taxonomy cancelled."
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/synthetic_data/generation/unstructured": {
      "post": {
        "operationId": "create_synthetic_data_generation_unstructured",
        "x-cli-command": "create",
        "x-cli-command-group": "synthetic-data-generation-unstructured",
        "summary": "Create a synthetic unstructured data generation job",
        "description": "Create a synthetic unstructured data generation job.\n",
        "tags": [
          "Synthetic Data (Beta)"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SDGUnstructuredGenerationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The synthetic data generation job has been created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SDGUnstructuredGenerationResource"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/chat/completions": {
      "post": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Create Chat Completions",
        "description": "Generate a chat completion based on the provided messages and parameters using the provided model.",
        "operationId": "create_chat_completions",
        "requestBody": {
          "description": "Chat Completion Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatsResponse"
                },
                "examples": {
                  "CreateChatCompletion": {
                    "value": {
                      "object": "chat.completion",
                      "id": "chatcmpl-B9MHDbslfkBeAs8l4bebGdFOJ6PeG",
                      "created": 1741570283,
                      "model": "gpt-4o-2024-08-06",
                      "choices": [
                        {
                          "index": 0,
                          "message": {
                            "role": "assistant",
                            "content": "The capital of France is Paris.",
                            "tool_calls": []
                          },
                          "content_filter_results": {
                            "jailbreak": {
                              "detected": true,
                              "filtered": true
                            }
                          },
                          "logprobs": {
                            "content": [
                              {
                                "bytes": [
                                  123,
                                  67,
                                  80,
                                  102,
                                  23,
                                  68
                                ],
                                "logprob": 0.6773386835778668,
                                "token": "The ",
                                "top_logprobs": [
                                  {
                                    "bytes": [
                                      123,
                                      67,
                                      80
                                    ],
                                    "logprob": 0.6773386835778668,
                                    "token": "capital "
                                  },
                                  {
                                    "bytes": [
                                      123,
                                      67,
                                      80
                                    ],
                                    "logprob": 0.00022722178296200756,
                                    "token": "country "
                                  }
                                ]
                              }
                            ],
                            "refusal": []
                          },
                          "finish_reason": "stop"
                        }
                      ],
                      "prompt_filter_results": [
                        {
                          "index": 0,
                          "content_filter_results": {
                            "profanity": {
                              "detected": true,
                              "filtered": true
                            }
                          }
                        }
                      ],
                      "service_tier": "auto",
                      "system_fingerprint": "fp_fc9f1d7035",
                      "usage": {
                        "completion_tokens": 281,
                        "completion_tokens_details": {
                          "accepted_prediction_tokens": 91,
                          "audio_tokens": 0,
                          "reasoning_tokens": 74,
                          "rejected_prediction_tokens": 0
                        },
                        "prompt_tokens": 66,
                        "prompt_tokens_details": {
                          "audio_tokens": 0,
                          "cached_tokens": 13
                        },
                        "total_tokens": 347
                      },
                      "cached": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/completions": {
      "post": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Create Text Completions",
        "description": "Generate a text completion based on the provided prompt and parameters using the provided model.",
        "operationId": "create_completions",
        "requestBody": {
          "description": "Completion Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompletionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletionsResponse"
                },
                "examples": {
                  "CreateCompletion": {
                    "value": {
                      "object": "text_completion",
                      "id": "cmpl-uqkvlQyYK7bGYrRHQ0eXlWi7",
                      "created": 1589478378,
                      "model": "gpt-4-turbo",
                      "choices": [
                        {
                          "index": 0,
                          "text": "The capital of France is Paris.",
                          "logprobs": {
                            "text_offset": [
                              0,
                              4,
                              12,
                              15,
                              22,
                              27
                            ],
                            "token_logprobs": [
                              0.6773386835778668,
                              0.3199521581969428,
                              0.0019025046958103897,
                              0.00022722178296200756,
                              0.0001769605025016923,
                              0.0001769605025016923
                            ],
                            "tokens": [
                              "The ",
                              "capital ",
                              "of ",
                              "France ",
                              "is ",
                              "Paris."
                            ],
                            "top_logprobs": []
                          },
                          "finish_reason": "stop"
                        },
                        {
                          "index": 1,
                          "text": "France's capital city is Paris.",
                          "logprobs": {
                            "text_offset": [
                              6,
                              9,
                              16,
                              22,
                              25
                            ],
                            "token_logprobs": [
                              0.3199521581969428,
                              0.0019025046958103897,
                              0.00022722178296200756,
                              0.0001769605025016923,
                              0.0001769605025016923
                            ],
                            "tokens": [
                              "France",
                              "'s capital",
                              " city ",
                              "is ",
                              "Paris."
                            ],
                            "top_logprobs": []
                          },
                          "finish_reason": "stop"
                        }
                      ],
                      "system_fingerprint": "fp_fc9f1d7035",
                      "usage": {
                        "completion_tokens": 281,
                        "completion_tokens_details": {
                          "accepted_prediction_tokens": 91,
                          "audio_tokens": 0,
                          "reasoning_tokens": 74,
                          "rejected_prediction_tokens": 0
                        },
                        "prompt_tokens": 66,
                        "prompt_tokens_details": {
                          "audio_tokens": 0,
                          "cached_tokens": 13
                        },
                        "total_tokens": 347
                      },
                      "cached": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/embeddings": {
      "post": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Create Embeddings",
        "description": "Generate embeddings based on the provided input using the provided model.",
        "operationId": "create_embeddings",
        "requestBody": {
          "description": "Embedding Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbeddingsEmbeddingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbeddingsEmbeddingResponse"
                },
                "examples": {
                  "CreateEmbeddings": {
                    "value": {
                      "object": "list",
                      "model": "gpt-4o",
                      "data": [
                        {
                          "object": "embedding",
                          "index": 0,
                          "embedding": [
                            0.0023064255,
                            -0.009327292,
                            -0.0028842222
                          ]
                        }
                      ],
                      "usage": {
                        "completion_tokens": 281,
                        "completion_tokens_details": {
                          "accepted_prediction_tokens": 91,
                          "audio_tokens": 0,
                          "reasoning_tokens": 74,
                          "rejected_prediction_tokens": 0
                        },
                        "prompt_tokens": 66,
                        "prompt_tokens_details": {
                          "audio_tokens": 0,
                          "cached_tokens": 13
                        },
                        "total_tokens": 347
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/models": {
      "get": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "List All Models",
        "description": "Lists all configured model details aggregated across all configured providers.",
        "operationId": "list_all_models",
        "responses": {
          "200": {
            "description": "List of all configured models.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelCollection"
                },
                "examples": {
                  "ListAllModels": {
                    "value": {
                      "object": "list",
                      "data": [
                        {
                          "object": "model",
                          "id": "gpt-3.5-turbo-456723",
                          "alias": "gpt-3.5-turbo",
                          "created": 1677649963,
                          "metadata": {
                            "cost": 0.02,
                            "model_family": "gpt-3.5",
                            "region": "us-east-1"
                          },
                          "owned_by": "azureOpenai:my-azure-provider",
                          "uuid": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        {
                          "object": "model",
                          "id": "gpt-4o-mini-2024-07-18",
                          "alias": "gpt-4o-mini",
                          "created": 1677193491,
                          "metadata": {
                            "cost": 0.02,
                            "model_family": "gpt-4o",
                            "region": "us-east-1"
                          },
                          "owned_by": "openai",
                          "uuid": "123e0987-d89c-45d6-a789-426614174000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/models/{model_uuid}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/model_uuid"
        }
      ],
      "get": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Get a Model",
        "description": "Retrieves a specific model configuration by model UUID.",
        "operationId": "get_model",
        "responses": {
          "200": {
            "description": "Model configuration details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                },
                "examples": {
                  "GetGptModelDetails": {
                    "value": {
                      "object": "model",
                      "id": "gpt-3.5-turbo-456723",
                      "alias": "gpt-3.5-turbo",
                      "created": 1677649963,
                      "metadata": {
                        "cost": 0.02,
                        "model_family": "gpt-3.5",
                        "region": "us-east-1"
                      },
                      "owned_by": "openai:vllm4",
                      "uuid": "123e4567-e89b-12d3-a456-426614174000"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Delete Model",
        "description": "Removes a specific model configuration from the tenant by UUID.",
        "operationId": "delete_model",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/tenant": {
      "get": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Get Current Tenant",
        "description": "Retrieves details of the currently authenticated tenant.",
        "operationId": "get_current_tenant",
        "responses": {
          "200": {
            "description": "Tenant Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                },
                "examples": {
                  "GetTenantDetails": {
                    "value": {
                      "id": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "my-tenant",
                      "remote_credential_store": {
                        "ibm_cloud_secret_manager": {
                          "base_url": "https://xxxx.xxxx.secrets-manager.appdomain.cloud",
                          "group": "AccessGroupId-56c5e703-80d4-4f06-a7e6-844618ec39b3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Create Tenant",
        "description": "Creates a new tenant.",
        "operationId": "create_tenant",
        "requestBody": {
          "description": "Create Tenant Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantCreateTenantRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created Tenant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                },
                "examples": {
                  "CreateTenant": {
                    "value": {
                      "id": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "my-tenant",
                      "remote_credential_store": {
                        "ibm_cloud_secret_manager": {
                          "base_url": "https://xxxx.xxxx.secrets-manager.appdomain.cloud",
                          "group": "AccessGroupId-56c5e703-80d4-4f06-a7e6-844618ec39b3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MGErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MGErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MGErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Replace Current Tenant Information",
        "description": "Replaces details of the currently authenticated tenant's information.",
        "operationId": "replace_current_tenant",
        "requestBody": {
          "description": "Replacement tenant information details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceTenantRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Replaced tenant information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                },
                "examples": {
                  "ReplacedTenantDetails": {
                    "value": {
                      "id": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "my-tenant"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Update Current Tenant Information",
        "description": "Updates details of the currently authenticated tenant's information.",
        "operationId": "update_current_tenant",
        "requestBody": {
          "description": "Updated tenant information details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated tenant information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                },
                "examples": {
                  "UpdateTenantDetails": {
                    "value": {
                      "id": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "my-tenant"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Delete Tenant",
        "description": "Deletes an existing tenant.",
        "operationId": "delete_tenant",
        "responses": {
          "204": {
            "description": "Tenant Deleted Successfully"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ForbiddenError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/policies": {
      "get": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "List Tenant Policies",
        "description": "Lists all tenant policies.",
        "operationId": "list_policy",
        "responses": {
          "200": {
            "description": "List of Policies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantPolicyCollection"
                },
                "examples": {
                  "ListTenantPolicies": {
                    "value": {
                      "object": "list",
                      "data": [
                        {
                          "action": "write",
                          "effect": "allow",
                          "resource": "model:62a04a11-07bf-5309-a78e-95323dbbc333",
                          "subject": "AccessGroupId-56c5e703-80d4-4f06-a7e6-844618ec39b3"
                        },
                        {
                          "action": "read",
                          "effect": "deny",
                          "resource": "model:6d9234a11-07bf-q309-a38e-95323dbbc333",
                          "subject": "AccessGroupId-203dad03-123d4-f4e206-a7e6-844618e5321"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Creates a new policy",
        "description": "Creates a new policy.",
        "operationId": "create_policy",
        "requestBody": {
          "description": "Policy configuration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantPolicy"
              },
              "examples": {
                "CreateTenantPolicy": {
                  "value": {
                    "action": "write",
                    "effect": "allow",
                    "resource": "model:62a04a11-07bf-5309-a78e-95323dbbc333",
                    "subject": "AccessGroupId-56c5e703-80d4-4f06-a7e6-844618ec39b3"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Delete Policy",
        "description": "Deletes the specified policy.",
        "operationId": "delete_policy",
        "requestBody": {
          "description": "Policy configuration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantPolicy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers": {
      "get": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "List Providers",
        "description": "Lists all providers.",
        "operationId": "list_providers",
        "responses": {
          "200": {
            "description": "List of Providers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderCollection"
                },
                "examples": {
                  "ListProviders": {
                    "value": {
                      "object": "list",
                      "data": [
                        {
                          "uuid": "56c5e703-80d4-4f06-a7e6-844618ec39b3",
                          "name": "my-openai-provider",
                          "type": "openai",
                          "data": {
                            "base_url": "https://api.openai.com/v1",
                            "apikey": "AIzaSyDaGmWKa4JsXZ-HjGw7ISLn_3namBGewQe"
                          },
                          "models": [
                            {
                              "object": "model",
                              "id": "gpt-3.5-turbo-456723",
                              "alias": "gpt-3.5-turbo",
                              "created": 1677649963,
                              "metadata": {
                                "cost": 0.02,
                                "model_family": "gpt-3.5",
                                "region": "us-east-1"
                              },
                              "owned_by": "openai:vllm4",
                              "uuid": "123e4567-e89b-12d3-a456-426614174000"
                            },
                            {
                              "object": "model",
                              "id": "gpt-4o-mini-2024-07-18",
                              "alias": "gpt-4o-mini",
                              "created": 1677193491,
                              "metadata": {
                                "cost": 0.02,
                                "model_family": "gpt-4o",
                                "region": "us-east-1"
                              },
                              "owned_by": "openai:vllm4",
                              "uuid": "123e0987-d89c-45d6-a789-426614174000"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/anthropic": {
      "post": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Create Anthropic Provider Configuration",
        "description": "Creates a new Anthropic provider configuration with the supplied details.",
        "operationId": "create_anthropic_provider",
        "requestBody": {
          "description": "Anthropic provider configuration details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderRequestAnthropicConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created Anthropic provider configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderResponse"
                },
                "examples": {
                  "NewAnthropicProvider": {
                    "value": {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "my-anthropic-provider",
                      "type": "anthropic"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/azure_openai": {
      "post": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Create Azure OpenAI Provider Configuration",
        "description": "Creates a new Azure OpenAI provider configuration with the supplied details.",
        "operationId": "create_azure_openai_provider",
        "requestBody": {
          "description": "Azure OpenAI provider configuration details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderRequestAzureOpenaiConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created Azure OpenAI provider configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderResponse"
                },
                "examples": {
                  "NewAzureOpenAiProvider": {
                    "value": {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "my-azure-openai-provider",
                      "type": "azureOpenai"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/bedrock": {
      "post": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Create AWS Bedrock Provider Configuration",
        "description": "Creates a new AWS Bedrock provider configuration with the supplied details.",
        "operationId": "create_bedrock_provider",
        "requestBody": {
          "description": "AWS Bedrock provider configuration details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderRequestAwsBedrockConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created AWS Bedrock provider configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderResponse"
                },
                "examples": {
                  "NewAwsBedrockProvider": {
                    "value": {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "my-aws-bedrock-provider",
                      "type": "bedrock"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/cerebras": {
      "post": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Create Cerebras Provider Configuration",
        "description": "Creates a new Cerebras provider configuration with the supplied details.",
        "operationId": "create_cerebras_provider",
        "requestBody": {
          "description": "Cerebras provider configuration details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderRequestCerebrasConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created Cerebras provider configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderResponse"
                },
                "examples": {
                  "NewCerebrasProvider": {
                    "value": {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "my-cerebras-provider",
                      "type": "cerebras"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/nim": {
      "post": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Create Nvidia NIM Provider Configuration",
        "description": "Creates a new Nvidia NIM provider configuration with the supplied details.",
        "operationId": "create_nim_provider",
        "requestBody": {
          "description": "Nvidia NIM provider configuration details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderRequestNvidiaNimConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created Nvidia NIM provider configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderResponse"
                },
                "examples": {
                  "NewNvidiaNimProvider": {
                    "value": {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "my-nvidia-nim-provider",
                      "type": "nvidiaNim"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/openai": {
      "post": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Create OpenAI Provider Configuration",
        "description": "Creates a new OpenAI provider configuration with the supplied details.",
        "operationId": "create_openai_provider",
        "requestBody": {
          "description": "OpenAI provider configuration details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderRequestOpenaiConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created OpenAI provider configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderResponse"
                },
                "examples": {
                  "NewOpenAiProvider": {
                    "value": {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "my-openai-provider",
                      "type": "openai"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/search": {
      "get": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Find Providers by Name",
        "description": "Searches for providers by name.",
        "operationId": "find_providers",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Provider name to search for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of matching Providers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderCollection"
                },
                "examples": {
                  "ListMatchingProviders": {
                    "value": {
                      "object": "list",
                      "data": [
                        {
                          "uuid": "56c5e703-80d4-4f06-a7e6-844618ec39b3",
                          "name": "my-openai-provider",
                          "type": "openai",
                          "data": {
                            "base_url": "https://api.openai.com/v1",
                            "apikey": "sk-proj-2_IN3221...IWZkA"
                          },
                          "models": [
                            {
                              "object": "model",
                              "id": "gpt-3.5-turbo-456723",
                              "alias": "gpt-3.5-turbo",
                              "created": 1677649963,
                              "metadata": {
                                "cost": 0.02,
                                "model_family": "gpt-3.5",
                                "region": "us-east-1"
                              },
                              "owned_by": "openai:vllm4",
                              "uuid": "123e4567-e89b-12d3-a456-426614174000"
                            },
                            {
                              "object": "model",
                              "id": "gpt-4o-mini-2024-07-18",
                              "alias": "gpt-4o-mini",
                              "created": 1677193491,
                              "metadata": {
                                "cost": 0.02,
                                "model_family": "gpt-4o",
                                "region": "us-east-1"
                              },
                              "owned_by": "openai:vllm4",
                              "uuid": "123e0987-d89c-45d6-a789-426614174000"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/watsonxai": {
      "post": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Create IBM WatsonX.ai Provider Configuration",
        "description": "Creates a new IBM WatsonX.ai provider configuration with the supplied details.",
        "operationId": "create_watsonxai_provider",
        "requestBody": {
          "description": "IBM WatsonX.ai provider configuration details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderRequestWatsonxaiConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created IBM Watsonx.ai provider configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderResponse"
                },
                "examples": {
                  "NewWatsonxaiProvider": {
                    "value": {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "my-watsonxai-provider",
                      "type": "watsonxai"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/{provider_uuid}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/provider_uuid"
        }
      ],
      "get": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Get Provider by UUID",
        "description": "Retrieves the details of a specific provider.",
        "operationId": "get_provider",
        "responses": {
          "200": {
            "description": "Provider Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                },
                "examples": {
                  "GetProviderById": {
                    "value": {
                      "uuid": "56c5e703-80d4-4f06-a7e6-844618ec39b3",
                      "name": "vllm4",
                      "type": "openai",
                      "data": {
                        "base_url": "https://api.openai.com/v1",
                        "apikey": "AIzaSyDaGmWKa4JsXZ-HjGw7ISLn_3namBGewQe"
                      },
                      "models": [
                        {
                          "object": "model",
                          "id": "gpt-3.5-turbo-456723",
                          "alias": "gpt-3.5-turbo",
                          "created": 1677649963,
                          "metadata": {
                            "cost": 0.02,
                            "model_family": "gpt-3.5",
                            "region": "us-east-1"
                          },
                          "owned_by": "openai:vllm4",
                          "uuid": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        {
                          "object": "model",
                          "id": "gpt-4o-mini-2024-07-18",
                          "alias": "gpt-4o-mini",
                          "created": 1677193491,
                          "metadata": {
                            "cost": 0.02,
                            "model_family": "gpt-4o",
                            "region": "us-east-1"
                          },
                          "owned_by": "openai:vllm4",
                          "uuid": "123e0987-d89c-45d6-a789-426614174000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Delete Provider",
        "description": "Deletes the specified provider.",
        "operationId": "delete_provider",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/{provider_uuid}/anthropic": {
      "parameters": [
        {
          "$ref": "#/components/parameters/provider_uuid"
        }
      ],
      "put": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Replace Anthropic Provider Configuration",
        "description": "Replaces an existing Anthropic provider configuration with new details.",
        "operationId": "replace_anthropic_provider",
        "requestBody": {
          "description": "Replacement Anthropic provider configuration details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderRequestAnthropicConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Replaced Anthropic provider configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderResponse"
                },
                "examples": {
                  "ReplacedAnthropicProvider": {
                    "value": {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "anthropic-prod2",
                      "type": "anthropic"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/{provider_uuid}/azure_openai": {
      "parameters": [
        {
          "$ref": "#/components/parameters/provider_uuid"
        }
      ],
      "put": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Replace AzureOpenAI Provider Configuration",
        "description": "Replaces an existing Azure OpenAI provider configuration with new details.",
        "operationId": "replace_azure_openai_provider",
        "requestBody": {
          "description": "Replacement Azure OpenAI provider configuration details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderRequestAzureOpenaiConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Replaced Azure OpenAI provider configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderResponse"
                },
                "examples": {
                  "ReplacedAzureOpenAiProvider": {
                    "value": {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "azure-provider",
                      "type": "azureOpenai"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/{provider_uuid}/bedrock": {
      "parameters": [
        {
          "$ref": "#/components/parameters/provider_uuid"
        }
      ],
      "put": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Replace AWS Bedrock Provider Configuration",
        "description": "Replaces an existing AWS Bedrock provider configuration with new details.",
        "operationId": "replace_bedrock_provider",
        "requestBody": {
          "description": "Replacement AWS Bedrock provider configuration details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderRequestAwsBedrockConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Replaced AWS Bedrock provider configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderResponse"
                },
                "examples": {
                  "ReplacedAwsBedrockProvider": {
                    "value": {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "bedrock-provider",
                      "type": "bedrock"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/{provider_uuid}/cerebras": {
      "parameters": [
        {
          "$ref": "#/components/parameters/provider_uuid"
        }
      ],
      "put": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Replace Cerebras Provider Configuration",
        "description": "Replaces an existing Cerebras provider configuration with new details.",
        "operationId": "replace_cerebras_provider",
        "requestBody": {
          "description": "Replacement Cerebras provider configuration details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderRequestCerebrasConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Replaced Cerebras provider configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderResponse"
                },
                "examples": {
                  "ReplacedCerebrasProvider": {
                    "value": {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "cerebrasProvider2",
                      "type": "cerebras"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/{provider_uuid}/models": {
      "parameters": [
        {
          "$ref": "#/components/parameters/provider_uuid"
        }
      ],
      "get": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "List Configured Models",
        "description": "Lists all model configurations for the specified provider.",
        "operationId": "list_provider_models",
        "responses": {
          "200": {
            "description": "List of Models",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelCollection"
                },
                "examples": {
                  "ListModels": {
                    "value": {
                      "object": "list",
                      "data": [
                        {
                          "object": "model",
                          "id": "gpt-3.5-turbo-456723",
                          "alias": "gpt-3.5-turbo",
                          "created": 1677649963,
                          "metadata": {
                            "cost": 0.02,
                            "model_family": "gpt-3.5",
                            "region": "us-east-1"
                          },
                          "owned_by": "openai:vllm4",
                          "uuid": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        {
                          "object": "model",
                          "id": "gpt-4o-mini-2024-07-18",
                          "alias": "gpt-4o-mini",
                          "created": 1677193491,
                          "metadata": {
                            "cost": 0.02,
                            "model_family": "gpt-4o",
                            "region": "us-east-1"
                          },
                          "owned_by": "openai:vllm4",
                          "uuid": "123e0987-d89c-45d6-a789-426614174000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Add Model",
        "description": "Adds a new model configuration for the specified provider.",
        "operationId": "create_provider_model",
        "requestBody": {
          "description": "Model configuration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Model Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                },
                "examples": {
                  "CreateModel": {
                    "value": {
                      "object": "model",
                      "id": "gpt-3.5-turbo-456723",
                      "alias": "gpt-3.5-turbo",
                      "created": 1677649963,
                      "metadata": {
                        "cost": 0.02,
                        "model_family": "gpt-3.5",
                        "region": "us-east-1"
                      },
                      "owned_by": "openai:vllm4",
                      "uuid": "123e4567-e89b-12d3-a456-426614174000"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/{provider_uuid}/models/{model_uuid}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/provider_uuid"
        },
        {
          "$ref": "#/components/parameters/model_uuid"
        }
      ],
      "put": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Replace a Model",
        "description": "Replaces a specific model configuration by model UUID.",
        "operationId": "replace_model",
        "requestBody": {
          "description": "Replacement model configuration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceModelRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Replaced model configuration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                },
                "examples": {
                  "GetGptModelDetails": {
                    "value": {
                      "object": "model",
                      "id": "gpt-3.5-turbo-456723",
                      "alias": "gpt-3.5-turbo",
                      "created": 1677649963,
                      "metadata": {
                        "cost": 0.02,
                        "model_family": "gpt-3.5",
                        "region": "us-east-1"
                      },
                      "owned_by": "openai:vllm4",
                      "uuid": "123e4567-e89b-12d3-a456-426614174000"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Update a Model",
        "description": "Updates a specific model configuration by model UUID.",
        "operationId": "update_model",
        "requestBody": {
          "description": "Updated model configuration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateModelRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Updated model configuration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                },
                "examples": {
                  "GetGptModelDetails": {
                    "value": {
                      "object": "model",
                      "id": "gpt-3.5-turbo-456723",
                      "alias": "gpt-3.5-turbo",
                      "created": 1677649963,
                      "metadata": {
                        "cost": 0.02,
                        "model_family": "gpt-3.5",
                        "region": "us-east-1"
                      },
                      "owned_by": "openai:vllm4",
                      "uuid": "123e4567-e89b-12d3-a456-426614174000"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Delete Model",
        "description": "Deletes the specified model configuration for the specified provider.",
        "operationId": "delete_provider_model",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/{provider_uuid}/models_available": {
      "parameters": [
        {
          "$ref": "#/components/parameters/provider_uuid"
        }
      ],
      "get": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "List Available Models",
        "description": "Lists all models available for the specified provider.",
        "operationId": "list_provider_available_models",
        "responses": {
          "200": {
            "description": "List of Models",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAIModelResponseCollection"
                },
                "examples": {
                  "ListAllModelsAvailable": {
                    "value": {
                      "object": "list",
                      "data": [
                        {
                          "object": "model",
                          "id": "gpt-3.5-turbo-456723",
                          "created": 1677649963,
                          "owned_by": "openai:vllm4"
                        },
                        {
                          "object": "model",
                          "id": "gpt-4o",
                          "created": 1677295812,
                          "owned_by": "openai:vllm4"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/{provider_uuid}/nim": {
      "parameters": [
        {
          "$ref": "#/components/parameters/provider_uuid"
        }
      ],
      "put": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Replace Nvidia NIM Provider Configuration",
        "description": "Replaces an existing Nvidia NIM provider configuration with new details.",
        "operationId": "replace_nim_provider",
        "requestBody": {
          "description": "Replacement Nvidia NIM provider configuration details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderRequestNvidiaNimConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Replaced Nvidia NIM provider configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderResponse"
                },
                "examples": {
                  "ReplacedNvidiaNimProvider": {
                    "value": {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "my-nim-provider",
                      "type": "nvidiaNim"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/{provider_uuid}/openai": {
      "parameters": [
        {
          "$ref": "#/components/parameters/provider_uuid"
        }
      ],
      "put": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Replace OpenAI Provider Configuration",
        "description": "Replaces an existing OpenAI provider configuration with new details.",
        "operationId": "replace_openai_provider",
        "requestBody": {
          "description": "Replacement OpenAI provider configuration details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderRequestOpenaiConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Replaced OpenAI provider configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderResponse"
                },
                "examples": {
                  "ReplacedOpenAiProvider": {
                    "value": {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "new-openai-provider",
                      "type": "openai"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/ml/gateway/v1/providers/{provider_uuid}/watsonxai": {
      "parameters": [
        {
          "$ref": "#/components/parameters/provider_uuid"
        }
      ],
      "put": {
        "tags": [
          "Model Gateway (Preview)"
        ],
        "summary": "Replace IBM WatsonX.ai Provider Configuration",
        "description": "Replaces an existing IBM WatsonX.ai provider configuration with new details.",
        "operationId": "replace_watsonxai_provider",
        "requestBody": {
          "description": "Replacement IBM Watsonx.ai provider configuration details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProviderRequestWatsonxaiConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Replaced IBM WatsonX.ai provider configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderResponse"
                },
                "examples": {
                  "ReplacedWatsonxaiProvider": {
                    "value": {
                      "uuid": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "my-watsonxai-provider2",
                      "type": "watsonxai"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/prompt_sessions": {
      "post": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Create a new prompt session",
        "description": "This creates a new prompt session.",
        "operationId": "post_prompt_session",
        "x-cli-command": "create",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/wxPromptSession"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created - Returned when created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompt_sessions/{session_id}": {
      "get": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Get a prompt session",
        "description": "This retrieves a prompt session with the given id.",
        "operationId": "get_prompt_session",
        "x-cli-command": "get",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "name": "prefetch",
            "in": "query",
            "description": "Include the most recent entry",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returned from GET when it succeeds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptSession"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "patch": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Update a prompt session",
        "description": "This updates a prompt session with the given id.",
        "operationId": "patch_prompt_session",
        "x-cli-command": "update",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "pattern": "^.{0,100}$",
                    "example": "Session 1"
                  },
                  "description": {
                    "type": "string",
                    "pattern": "^[\\s\\S]{0,250}",
                    "description": "An optional description for the prompt.",
                    "example": "My First Prompt Session"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK - Returned from GET when it succeeds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptSession"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "delete": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Delete a prompt session",
        "description": "This deletes a prompt session with the given id.",
        "operationId": "delete_prompt_session",
        "x-cli-command": "delete",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - Returned on success"
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompt_sessions/{session_id}/entries": {
      "post": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Add a new prompt to a prompt session",
        "description": "This creates a new prompt associated with the given session.",
        "operationId": "post_prompt_session_entry",
        "x-cli-command": "add-entry",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/wxPromptSessionEntry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created - Returned when created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptSessionEntry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "get": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Get entries for a prompt session",
        "description": "List entries from a given session.",
        "operationId": "get_prompt_session_entries",
        "x-cli-command": "list-entries",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "name": "bookmark",
            "in": "query",
            "description": "Bookmark from a previously limited get request",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit for results to retrieve, default 20",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - Returned when search completes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptSessionEntryList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompt_sessions/{session_id}/entries/{entry_id}/chat_items": {
      "post": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Add a new chat item to a prompt session entry",
        "description": "This adds new chat items to the given entry.",
        "operationId": "post_prompt_session_entry_chat_item",
        "x-cli-command": "add-chat-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/entry_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "An array containing a question chat item and an answer chat item.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/chatItem"
                },
                "minItems": 2,
                "maxItems": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created - Returned when created"
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompt_sessions/{session_id}/lock": {
      "put": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Prompt session lock modifications",
        "description": "Modifies the current locked state of a prompt session.",
        "operationId": "put_prompt_session_lock",
        "x-cli-command": "update-lock",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Override a lock if it is currently taken.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/promptLock"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok - Returned when lock change is successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promptLock"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "get": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Get current prompt session lock status",
        "description": "Retrieves the current locked state of a prompt session.",
        "operationId": "get_prompt_session_lock",
        "x-cli-command": "get-lock",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - Returned on success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promptLock"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompt_sessions/{session_id}/entries/{entry_id}": {
      "get": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Get a prompt session entry",
        "description": "This retrieves a prompt session entry with the given id.",
        "operationId": "get_prompt_session_entry",
        "x-cli-command": "get-entry",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "$ref": "#/components/parameters/entry_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returned from GET when it succeeds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "delete": {
        "tags": [
          "Prompt Sessions"
        ],
        "summary": "Delete a prompt session entry",
        "description": "This deletes a prompt session entry with the given id.",
        "operationId": "delete_prompt_session_entry",
        "x-cli-command": "delete-entry",
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "$ref": "#/components/parameters/entry_id"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - Returned on success"
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompts": {
      "post": {
        "tags": [
          "Prompts"
        ],
        "summary": "Create a new prompt / prompt template",
        "description": "This creates a new prompt with the provided parameters.",
        "operationId": "post_prompt",
        "x-cli-command": "create",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/wxPromptPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created - Returned when created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompts/{prompt_id}": {
      "get": {
        "tags": [
          "Prompts"
        ],
        "summary": "Get a prompt",
        "description": "This retrieves a prompt / prompt template with the given id.",
        "operationId": "get_prompt",
        "x-cli-command": "get",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/prompt_id"
          },
          {
            "$ref": "#/components/parameters/restrict_model_parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returned from GET when it succeeds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "patch": {
        "tags": [
          "Prompts"
        ],
        "summary": "Update a prompt",
        "description": "This updates a prompt / prompt template with the given id.",
        "operationId": "patch_prompt",
        "x-cli-command": "update",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/prompt_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/wxPromptPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK - Returned on success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxPromptResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "delete": {
        "tags": [
          "Prompts"
        ],
        "summary": "Delete a prompt",
        "description": "This deletes a prompt / prompt template with the given id.",
        "operationId": "delete_prompt",
        "x-cli-command": "delete",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/prompt_id"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - Returned on success"
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompts/{prompt_id}/lock": {
      "put": {
        "tags": [
          "Prompts"
        ],
        "summary": "Prompt lock modifications",
        "description": "Modifies the current locked state of a prompt.",
        "operationId": "put_prompt_lock",
        "x-cli-command": "update-lock",
        "parameters": [
          {
            "$ref": "#/components/parameters/prompt_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Override a lock if it is currently taken.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/promptLock"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok - Returned when lock change is successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promptLock"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "get": {
        "tags": [
          "Prompts"
        ],
        "summary": "Get current prompt lock status",
        "description": "Retrieves the current locked state of a prompt.",
        "operationId": "get_prompt_lock",
        "x-cli-command": "get-lock",
        "parameters": [
          {
            "$ref": "#/components/parameters/prompt_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - Returned on success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/promptLock"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompts/{prompt_id}/input": {
      "post": {
        "tags": [
          "Prompts"
        ],
        "summary": "Get the inference input string for a given prompt",
        "description": "Computes the inference input string based on state of a prompt. Optionally replaces template params",
        "operationId": "get_prompt_input",
        "x-cli-command": "get-input",
        "parameters": [
          {
            "$ref": "#/components/parameters/prompt_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/wxPromptInputRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Ok - Returned on success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "input": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9-]*",
                      "description": "The prompt's input string used for inferences."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/prompts/{prompt_id}/chat_items": {
      "post": {
        "tags": [
          "Prompts"
        ],
        "summary": "Add a new chat item to a prompt",
        "description": "This adds new chat items to the given prompt.",
        "operationId": "post_prompt_chat_item",
        "x-cli-command": "add-chat-item",
        "parameters": [
          {
            "$ref": "#/components/parameters/prompt_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "An array containing a question chat item and an answer chat item.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/chatItem"
                },
                "minItems": 2,
                "maxItems": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok - Returned on success"
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1/vector_indexes": {
      "post": {
        "tags": [
          "Vector Indexes"
        ],
        "summary": "Create a vector index.",
        "description": "This creates a new vector index with the provided parameters.",
        "operationId": "post_vector_index",
        "x-cli-command": "create-vector-index",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/wxVectorIndexPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created - Returned when created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vectorIndexResponse"
                },
                "examples": {
                  "get_vector_indexes": {
                    "summary": "create_vector_index",
                    "description": "Create a vector index.",
                    "value": {
                      "id": "43499a2a-7656-43d6-8ce0-374d34449d4f",
                      "name": "Milvus-VI-New",
                      "description": "",
                      "created_at": 1739888788777,
                      "created_by": "IBMid-6910003SE8",
                      "last_updated_at": 1739888804362,
                      "last_updated_by": "IBMid-6910003SE8",
                      "data_assets": [
                        "9624a20d-ecd0-450e-b7d2-9941ce7d1c57"
                      ],
                      "store": {
                        "type": "watsonx.data",
                        "connection_id": "9bdb5dbe-d896-4539-b969-5bf17fcc1f0a",
                        "index": "wx_test_collection_japanese",
                        "new_index": true,
                        "database": "default"
                      },
                      "settings": {
                        "chunk_size": 2000,
                        "chunk_overlap": 200,
                        "split_pdf_pages": true,
                        "top_k": 3,
                        "rerank": false,
                        "embedding_model_id": "sentence-transformers/all-minilm-l6-v2",
                        "schema_fields": {
                          "document_name": "document_name",
                          "text": "text",
                          "page_number": "page"
                        }
                      },
                      "build": {
                        "notebook_id": "53a61d7d-7d09-4392-9d5d-eb90e46aee1c",
                        "job_id": "843e36f9-3550-4b0c-8755-4976e41bce35"
                      },
                      "status": "ready"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      }
    },
    "/v1/vector_indexes/{index_id}": {
      "get": {
        "tags": [
          "Vector Indexes"
        ],
        "summary": "Get a vector index",
        "description": "This retrieves a vector index with the given id.",
        "operationId": "get_vector_index",
        "x-cli-command": "get-vector-index",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "$ref": "#/components/parameters/index_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returned from GET when it succeeds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vectorIndexResponse"
                },
                "examples": {
                  "get_vector_indexes": {
                    "summary": "get_vector_indexes",
                    "description": "Get vector index.",
                    "value": {
                      "id": "43499a2a-7656-43d6-8ce0-374d34449d4f",
                      "name": "Milvus-VI-New",
                      "description": "",
                      "created_at": 1739888788777,
                      "created_by": "IBMid-6910003SE8",
                      "last_updated_at": 1739888804362,
                      "last_updated_by": "IBMid-6910003SE8",
                      "data_assets": [
                        "9624a20d-ecd0-450e-b7d2-9941ce7d1c57"
                      ],
                      "store": {
                        "type": "watsonx.data",
                        "connection_id": "9bdb5dbe-d896-4539-b969-5bf17fcc1f0a",
                        "index": "wx_test_collection_japanese",
                        "new_index": true,
                        "database": "default"
                      },
                      "settings": {
                        "chunk_size": 2000,
                        "chunk_overlap": 200,
                        "split_pdf_pages": true,
                        "top_k": 3,
                        "rerank": false,
                        "embedding_model_id": "sentence-transformers/all-minilm-l6-v2",
                        "schema_fields": {
                          "document_name": "document_name",
                          "text": "text",
                          "page_number": "page"
                        }
                      },
                      "build": {
                        "notebook_id": "53a61d7d-7d09-4392-9d5d-eb90e46aee1c",
                        "job_id": "843e36f9-3550-4b0c-8755-4976e41bce35"
                      },
                      "status": "ready"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "patch": {
        "tags": [
          "Vector Indexes"
        ],
        "summary": "Update a vector index",
        "description": "This updates a vector index with the given id.",
        "operationId": "patch_vector_index",
        "x-cli-command": "update-vector-index",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "$ref": "#/components/parameters/index_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/wxVectorIndexPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK - Returned from GET when it succeeds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vectorIndexResponse"
                },
                "examples": {
                  "get_vector_indexes": {
                    "summary": "patch_vector_indexes",
                    "description": "Response with updated vector index.",
                    "value": {
                      "id": "43499a2a-7656-43d6-8ce0-374d34449d4f",
                      "name": "Milvus-VI-Patched",
                      "description": "",
                      "created_at": 1739888788777,
                      "created_by": "IBMid-6910003SE8",
                      "last_updated_at": 1739888804362,
                      "last_updated_by": "IBMid-6910003SE8",
                      "data_assets": [
                        "9624a20d-ecd0-450e-b7d2-9941ce7d1c57"
                      ],
                      "store": {
                        "type": "watsonx.data",
                        "connection_id": "9bdb5dbe-d896-4539-b969-5bf17fcc1f0a",
                        "index": "wx_test_collection_japanese",
                        "new_index": true,
                        "database": "default"
                      },
                      "settings": {
                        "chunk_size": 2000,
                        "chunk_overlap": 200,
                        "split_pdf_pages": true,
                        "top_k": 3,
                        "rerank": false,
                        "embedding_model_id": "sentence-transformers/all-minilm-l6-v2",
                        "schema_fields": {
                          "document_name": "document_name",
                          "text": "text",
                          "page_number": "page"
                        }
                      },
                      "build": {
                        "notebook_id": "53a61d7d-7d09-4392-9d5d-eb90e46aee1c",
                        "job_id": "843e36f9-3550-4b0c-8755-4976e41bce35"
                      },
                      "status": "ready"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      },
      "delete": {
        "tags": [
          "Vector Indexes"
        ],
        "summary": "Delete a vector index",
        "description": "This deletes a vector index with the given id.",
        "operationId": "delete_vector_index",
        "x-cli-command": "delete-vector-index",
        "parameters": [
          {
            "$ref": "#/components/parameters/project_id"
          },
          {
            "$ref": "#/components/parameters/index_id"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content - Returned on success"
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      }
    },
    "/v1/vector_indexes/{index_id}/attachment": {
      "put": {
        "tags": [
          "Vector Indexes"
        ],
        "summary": "Vector Index attachments modifications",
        "description": "TO BE USED ONLY WITH IN-MEMORY VECTOR STORE. This is to update the attachments/objects associated with the vector index.",
        "operationId": "put_vector_indexes",
        "x-cli-command": "update-attachments",
        "parameters": [
          {
            "$ref": "#/components/parameters/index_id"
          },
          {
            "$ref": "#/components/parameters/project_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/wxVectorIndexPut"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok - Returned when the attachment is successfull.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vectorIndexResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        }
      }
    },
    "/v2/notebooks": {
      "post": {
        "summary": "Create a new notebook.",
        "tags": [
          "Notebooks"
        ],
        "operationId": "notebooks_create",
        "description": "Create a new notebook\n- either from scratch\n- or by copying another notebook.\n\nTo create a notebook from scratch, you need to first upload the notebook content(`ipynb` format) to the project Cloud Object Storage (COS)\nand then reference it with the attribute `file_reference`.\nThe other required attributes are `name`, `project` and `runtime`. \nThe attribute `runtime` is used to specify the environment on which the notebook runs.\n\nTo copy a notebook, you only need to provide `name` and `source_guid` in the request body.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/NotebookCreateBodyInProject"
                  },
                  {
                    "$ref": "#/components/schemas/NotebookCopyBody"
                  }
                ]
              },
              "examples": {
                "createNewNotebook": {
                  "$ref": "#/components/examples/NotebookCreateBodyInProject"
                },
                "copyNotebook": {
                  "$ref": "#/components/examples/NotebookCopyBody"
                }
              }
            }
          },
          "description": "Specification of the notebook to be created.",
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/NotebookCreateResponse"
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          },
          "429": {
            "$ref": "#/components/responses/HTTP429Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v2/notebooks/list": {
      "post": {
        "description": "Retrieve the details of a large number of notebooks inside a project.",
        "tags": [
          "Notebooks"
        ],
        "operationId": "notebooks_list",
        "summary": "Retrieve the details of a large number of notebooks inside a project.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotebookListBody"
              },
              "examples": {
                "listNotebooks": {
                  "$ref": "#/components/examples/NotebooksListBody"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "project_id",
            "required": true,
            "in": "query",
            "description": "The guid of the project.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "required": true,
            "in": "query",
            "description": "Additional info that will be included into the notebook details.\nPossible values are:\n- runtime\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/NotebooksListResponse"
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v2/notebooks/{notebook_guid}": {
      "delete": {
        "summary": "Delete a particular notebook, including the notebook asset.\n",
        "tags": [
          "Notebooks"
        ],
        "operationId": "notebooks_delete",
        "description": "Delete a particular notebook, including the notebook asset.",
        "parameters": [
          {
            "name": "notebook_guid",
            "in": "path",
            "required": true,
            "description": "The guid of the notebook.",
            "schema": {
              "type": "string"
            },
            "x-cli-flag-name": "notebook-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful request. Notebook is deleted."
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "summary": "Revert the main notebook to a version.\n",
        "tags": [
          "Notebooks"
        ],
        "operationId": "notebooks_revert",
        "description": "Revert the main notebook to a version.",
        "parameters": [
          {
            "name": "notebook_guid",
            "in": "path",
            "required": true,
            "description": "The guid of the main notebook.",
            "schema": {
              "type": "string"
            },
            "x-cli-flag-name": "notebook-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotebookRevertBody"
              },
              "examples": {
                "revertNotebooks": {
                  "$ref": "#/components/examples/NotebookRevertBody"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/NotebookRevertResponse"
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "summary": "Update a particular notebook.\n",
        "tags": [
          "Notebooks"
        ],
        "operationId": "notebooks_update",
        "description": "Update a particular notebook.",
        "parameters": [
          {
            "name": "notebook_guid",
            "in": "path",
            "required": true,
            "description": "The guid of the notebook.",
            "schema": {
              "type": "string"
            },
            "x-cli-flag-name": "notebook-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotebookUpdateBody"
              },
              "examples": {
                "updateNotebook": {
                  "$ref": "#/components/examples/NotebookUpdateBody"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/NotebookUpdateResponse"
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v2/notebooks/{notebook_guid}/versions": {
      "parameters": [
        {
          "name": "notebook_guid",
          "in": "path",
          "required": true,
          "description": "The guid of the notebook.",
          "schema": {
            "type": "string"
          },
          "x-cli-flag-name": "notebook-id"
        }
      ],
      "post": {
        "summary": "Create a new version.",
        "tags": [
          "Notebook Versions"
        ],
        "operationId": "versions_create",
        "description": "Create a version of a given notebook.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/NotebookVersionCreateResponse"
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "summary": "List the versions of a notebook.",
        "tags": [
          "Notebook Versions"
        ],
        "operationId": "versions_list",
        "description": "List all versions of a particular notebook.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/NotebookVersionsListResponse"
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v2/notebooks/{notebook_guid}/versions/{version_guid}": {
      "parameters": [
        {
          "name": "notebook_guid",
          "in": "path",
          "required": true,
          "description": "The guid of the notebook.",
          "schema": {
            "type": "string"
          },
          "x-cli-flag-name": "notebook-id"
        },
        {
          "name": "version_guid",
          "in": "path",
          "required": true,
          "description": "The guid of the version.",
          "schema": {
            "type": "string"
          },
          "x-cli-flag-name": "version-id"
        }
      ],
      "get": {
        "summary": "Retrieve a notebook version.",
        "tags": [
          "Notebook Versions"
        ],
        "operationId": "versions_get",
        "description": "Retrieve a particular version of a notebook.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/NotebookVersionRetrieveResponse"
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a notebook version.",
        "tags": [
          "Notebook Versions"
        ],
        "operationId": "versions_delete",
        "description": "Delete a particular version of a given notebook.\n",
        "responses": {
          "204": {
            "description": "Success. The version is deleted."
          },
          "400": {
            "$ref": "#/components/responses/HTTP400Response"
          },
          "401": {
            "$ref": "#/components/responses/HTTP401Response"
          },
          "403": {
            "$ref": "#/components/responses/HTTP403Response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "servers": [
        {
          "url": "https://{region}.dataplatform.cloud.ibm.com/wx",
          "variables": {
            "region": {
              "default": "api",
              "enum": [
                "api",
                "api.eu-de",
                "api.eu-gb",
                "api.jp-tok"
              ]
            }
          }
        }
      ]
    },
    "/v1-beta/utility_agent_tools": {
      "get": {
        "tags": [
          "Utility Agent Tools (Beta)"
        ],
        "summary": "Get utility agent tools",
        "description": "This retrieves the complete list of supported utility agent tools and contains information required for running each tool.",
        "operationId": "get_utility_agent_tools",
        "x-cli-command": "list",
        "x-cli-command-group": "utility-agent-tools",
        "responses": {
          "200": {
            "description": "OK - Returned from GET when it succeeds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxUtilityAgentToolsResponse"
                },
                "examples": {
                  "get_tool": {
                    "summary": "get_tools",
                    "description": "Get all utility agent tools.",
                    "value": {
                      "resources": [
                        {
                          "name": "GoogleSearch",
                          "description": "Search for online trends, news, current events, real-time information, or research topics.",
                          "agent_description": "Search for online trends, news, current events, real-time information, or research topics.",
                          "config_schema": {
                            "title": "config schema for GoogleSearch tool",
                            "type": "object",
                            "properties": {
                              "maxResults": {
                                "title": "Max number of results to return",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 20,
                                "wx_ui_name": "Max results",
                                "wx_ui_field_type": "numberInput",
                                "wx_ui_default": 10
                              }
                            }
                          }
                        },
                        {
                          "name": "WebCrawler",
                          "description": "Useful for when you need to summarize a webpage. Do not use for Web search.",
                          "agent_description": "Useful for when you need to summarize a webpage. Do not use for Web search.",
                          "input_schema": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "title": "url",
                                "description": "URL for the webpage to be scraped",
                                "type": "string",
                                "pattern": "^(https?://)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([/\\w \\.-]*)*/?$"
                              }
                            },
                            "required": [
                              "url"
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Get tools",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request GET 'https://{cluster_url}/v1-beta/utility_agent_tools'\n",
                      "-H 'Accept: application/json'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1-beta/utility_agent_tools/{tool_id}": {
      "get": {
        "tags": [
          "Utility Agent Tools (Beta)"
        ],
        "summary": "Get utility agent tool",
        "description": "This retrieves the details of an utility agent tool and contains information required for running the tool. Providing authentication and configuration params may return additional details.",
        "operationId": "get_utility_agent_tool",
        "x-cli-command": "get",
        "x-cli-command-group": "utility-agent-tools",
        "parameters": [
          {
            "$ref": "#/components/parameters/tool_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returned from GET when it succeeds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/utilityAgentTool"
                },
                "examples": {
                  "get_rag_query": {
                    "summary": "get_rag_query",
                    "description": "Get RAGQuery agent tool with dynamic agent_description.",
                    "value": {
                      "name": "RAGQuery",
                      "description": "Search the documents in a vector index.",
                      "agent_description": "Search information in documents to provide context to a user query. Useful when asked to ground the answer in specific knowledge about watsonx documentation.",
                      "config_schema": {
                        "title": "config schema for RAGQuery tool",
                        "type": "object",
                        "properties": {
                          "vectorIndexId": {
                            "title": "Vector index identifier",
                            "type": "string"
                          },
                          "projectId": {
                            "title": "Project identifier",
                            "type": "string"
                          },
                          "spaceId": {
                            "title": "Space identifier",
                            "type": "string"
                          }
                        },
                        "required": [
                          "vectorIndexId"
                        ],
                        "oneOf": [
                          {
                            "required": [
                              "projectId"
                            ]
                          },
                          {
                            "required": [
                              "spaceId"
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "RAG query",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request GET 'https://{cluster_url}/v1-beta/utility_agent_tools/RAGQuery'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1-beta/utility_agent_tools/run": {
      "post": {
        "tags": [
          "Utility Agent Tools (Beta)"
        ],
        "summary": "Run a utility agent tool",
        "description": "This runs a utility agent tool given an input and optional configuration parameters.\n\nSome tools can choose to tailor the response based on the access token identity.",
        "operationId": "post_utility_agent_tools_run",
        "x-cli-command": "run",
        "x-cli-command-group": "utility-agent-tools",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/wxUtilityAgentToolsRunRequest"
              },
              "examples": {
                "run_google_tool": {
                  "summary": "run_google_tool",
                  "description": "Run the GoogleSearch tool.",
                  "value": {
                    "tool_name": "GoogleSearch",
                    "input": "What was the weather in Toronto on January 13th 2025?",
                    "config": {
                      "maxResults": 3
                    }
                  }
                },
                "run_web_crawler_tool": {
                  "summary": "run_web_crawler_tool",
                  "description": "Run the WebCrawler tool.",
                  "value": {
                    "tool_name": "WebCrawler",
                    "input": {
                      "url": "https://www.ibm.com/us-en"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK - Returned when tool ran succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxUtilityAgentToolsRunResponse"
                },
                "examples": {
                  "run_google_tool_results": {
                    "summary": "run_google_tool_results",
                    "description": "Results of the GoogleSearch tool.",
                    "value": {
                      "output": "[{\"title\":\"Toronto, Ontario, Canada Monthly Weather | AccuWeather\",\"description\":\"January. January February March April May June July August September October November December. 2025 ... 13°. 29. 37°. 18°. 30. 34°. 16°. 31. 36°. 18°. 1. 18°. 11 ...\",\"url\":\"https://www.accuweather.com/en/ca/toronto/m5h/january-weather/55488\"},{\"title\":\"Anthony Slater on X: \\\"Draymond Green missed the Warriors ...\",\"description\":\"Draymond Green missed the Warriors shootaround in Toronto this morning. Under the weather. He is questionable tonight with an illness. 4:45 PM · Jan 13, ...\",\"url\":\"https://x.com/anthonyVslater/status/1878845945854730255\"},{\"title\":\"Canada weather forecast for Tuesday, 13 January 2026\",\"description\":\"Weather in Canada during the last few years on January 13 ; 2025 - January 13, 32 ° / 26 °, 0 in ; 2024 - January 13, 39 ° / 26 °, 0.46 in ; 2023 - January 13, 32 ...\",\"url\":\"https://www.weather25.com/north-america/canada?page=date&date=13-1\"}]"
                    }
                  },
                  "run_web_crawler_tool_results": {
                    "summary": "run_web_crawler_tool_results",
                    "description": "Results of the WebCrawler tool.",
                    "value": {
                      "output": "\"{\\\"url\\\":\\\"https://www.ibm.com/us-en\\\",\\\"contentType\\\":\\\"text/html;charset=utf-8\\\",\\\"content\\\":\\\"IBM - United States\\\\n\\\\nBoost developer productivity with AI\\\\n\\\\nAchieve 59% average time savings on code documentation¹ and reduce development costs by 30%²\\\\n\\\\nOvercome developer challenges\\\\n\\\\nExplore watsonx Code Assistant\\\\n\\\\nLatest news\\\\n\\\\nArvind Krishna Celebrates the Work of a Pioneer at the TIME100 AI Impact Awards\\\\n\\\\nIBM and Lenovo Expand Strategic Technology Partnership in the Kingdom of Saudi Arabia\\\\n\\\\nIBM Study: Gen AI Will Elevate Financial Performance of Banks in 2025\\\\n\\\\nTelefónica Tech and IBM Sign a Collaboration Agreement for Quantum-Safe Technology\\\\n\\\\nIBM RELEASES FOURTH-QUARTER RESULTS\\\\n\\\\nIBM BOARD APPROVES REGULAR QUARTERLY CASH DIVIDEND\\\\n\\\\nIBM and Palo Alto Networks Find Platformization is Key to Reduce Cybersecurity Complexity\\\\n\\\\ne& Collaborates with IBM to Launch Pioneering End-to-End AI Governance Platform\\\\n\\\\nRecommended for you\\\\n\\\\nRead why tailor-made AI delivers precision power\\\\n\\\\nLearn AI skills you’ll need for 2025\\\\n\\\\nListen to the episode: DeepSeek facts vs hype and more\\\\n\\\\nMeet Meta Llama 3.2 models on watsonx\\\\n\\\\nAI insights and tools\\\\n\\\\nFor developers\\\\n\\\\nGrow your skills and create something new with our AI tools and foundation models. Then connect, collaborate and innovate with your peers.\\\\n\\\\nStart building with IBM Granite models\\\\n\\\\nExplore AI courses, APIs, data sets and more\\\\n\\\\nAccelerate software development with watsonx Code Assistant\\\\n\\\\nCheck out the watsonx.ai Developer Toolkit\\\\n\\\\nFor business leaders\\\\n\\\\nTransform business and drive growth with AI tools, technology and insights that help you stay competitive—and responsibly map your organization's future.\\\\n\\\\nRead the CEO's guide to generative AI\\\\n\\\\nGet the AI in Action report\\\\n\\\\nExplore IBM's approach to AI ethics\\\\n\\\\nSubscribe to the Think newsletter\\\\n\\\\nThink 2025\\\\n\\\\nJoin 5,000+ senior business and technology leaders at Think 2025 on 5–8 May 2025 in Boston, Massachusetts\\\\n\\\\nRegister today\\\\n\\\\nTechnology & Consulting\\\\n\\\\nFrom next-generation AI to cutting edge hybrid cloud solutions to the deep expertise of IBM Consulting, IBM has what it takes to help you reinvent how your business works in the age of AI.\\\\n\\\\nGet the latest product offers and discounts\\\\n\\\\nAI solutions\\\\n\\\\nGo from AI pilots to production with AI technologies built for business\\\\n\\\\nAI models\\\\n\\\\nGet started with cost-efficient AI models, tailored for business and optimized for scale\\\\n\\\\nConsulting\\\\n\\\\nEngage with IBM Consulting to design, build and operate high-performing businesses\\\\n\\\\nAnalytics\\\\n\\\\nSupport data-driven decisions for your business\\\\n\\\\nIT automation\\\\n\\\\nDiscover how automation solutions increase productivity while managing costs\\\\n\\\\nCompute & servers\\\\n\\\\nHandle mission-critical workloads while maintaining security, reliability and control of your entire IT infrastructure\\\\n\\\\nDatabases\\\\n\\\\nRun your applications, analytics and generative AI with databases on any cloud\\\\n\\\\nSecurity & identity\\\\n\\\\nSecure hybrid cloud and AI with data and identity-centric cybersecurity solutions\\\\n\\\\nInside IBM\\\\n\\\\nOur company\\\\n\\\\nExplore IBM history and culture of putting technology to work in the real world\\\\n\\\\nAbout IBM\\\\n\\\\nOur history\\\\n\\\\nOur impact\\\\n\\\\nLearn about IBM's commitment to environmental, equitable and ethical pillars\\\\n\\\\nCorporate social responsibility\\\\n\\\\nDiversity and inclusion\\\\n\\\\nOur innovations\\\\n\\\\nVisit the IBM lab, and see what's in store for the future of computing\\\\n\\\\nIBM Research\\\\n\\\\nQuantum computing\\\\n\\\\nTake the next step\\\\n\\\\nSolving the world’s problems through technology wouldn’t be possible without people with the right skills. See what it takes to become an IBMer, or build your skills with our educational courses.\\\\n\\\\nBecome an IBMer\\\\n\\\\nExplore jobs\\\\n\\\\nExplore learning opportunities\\\\n\\\\nStart learning\\\\n\\\\nFootnotes\\\\n\\\\n¹ Keep the data flowing. Keep the water flowing. IBM case study on Water Corporation, January 2024.\\\\n2 Accelerating software development with gen AI, IBM, 2024.\\\"}\""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "run google",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/v1-beta/utility_agent_tools/run'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw ",
                      "'{\n",
                      "  \"tool_name\": \"GoogleSearch\",\n",
                      "  \"input\": \"What was the weather in Toronto on January 13th 2025?\",\n",
                      "  \"config\": {\n",
                      "    \"maxResults\": 3\n",
                      "  }\n",
                      "}'\n"
                    ]
                  }
                ]
              },
              {
                "name": "run python interpreter",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/v1-beta/utility_agent_tools/run'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw ",
                      "'{\n",
                      "  \"tool_name\": \"PythonInterpreter\",\n",
                      "  \"input\": \"print(4*5)\"\n",
                      "}'\n"
                    ]
                  }
                ]
              },
              {
                "name": "run web crawler",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/v1-beta/utility_agent_tools/run'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "-H 'Accept: application/json'\n",
                      "--data-raw ",
                      "'{\n",
                      "  \"tool_name\": \"WebCrawler\",\n",
                      "  \"input\": {\n",
                      "    \"url\": \"https://www.ibm.com/us-en\"\n",
                      "  }\n",
                      "}'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1-beta/utility_agent_tools/run/{tool_id}": {
      "post": {
        "tags": [
          "Utility Agent Tools (Beta)"
        ],
        "summary": "Run a utility agent tool",
        "description": "This runs a utility agent tool given an input and optional configuration parameters.\n\nSome tools can choose to tailor the response based on the access token identity.",
        "operationId": "post_utility_agent_tools_run_by_name",
        "x-cli-command": "run-by-name",
        "x-cli-command-group": "utility-agent-tools",
        "parameters": [
          {
            "$ref": "#/components/parameters/tool_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/wxUtilityAgentToolsRunRequest"
              },
              "examples": {
                "run_rag_query_tool": {
                  "summary": "run_rag_query",
                  "description": "Run the RAGQuery tool on a vector index.",
                  "value": {
                    "input": "What is a project?",
                    "config": {
                      "projectId": "d514c8ef-423f-429c-8947-fa900dee338a",
                      "vectorIndexId": "dda284ec-22e9-4091-89d5-19b8e526ea0d"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK - Returned when tool ran succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wxUtilityAgentToolsRunResponse"
                },
                "examples": {
                  "run_rag_query_tool": {
                    "summary": "run_rag_query_tool",
                    "description": "Results of the RAGQuery tool.",
                    "value": {
                      "output": "Working in projects  A project is a collaborative workspace where you work with data and other assets to accomplish a particular goal.  By default, your sandbox project is created automatically when you sign up for watsonx.ai.  Your project can include these types of resources:   Collaborators are the people who you work with in your project.  Data assets are what you work with. Data assets often consist of raw data that you work with to refine.  Tools and their associated assets are how you work with\n\ndeployment spaces.  Projects and tools  Projects are where your data science and model builder teams work with data to create assets, such as, saved prompts, notebooks, models, or pipelines. Your first project, which is known as your sandbox project, is created automatically when you\n\nTask 2 . If you don't see any projects, then follow these steps to create a project. 1. Click Create a sandbox project . When the project is created, you will see the sandbox project in the Projects section. For more information or to watch a video, see Creating a project {: new_window}.\n\nTask 2 . If you don't see any projects, then follow these steps to create a project. 1. Click Create a sandbox project . When the project is created, you will see the sandbox project in the Projects section. For more information or to watch a video, see Creating a project {: new_window}.\n\ncharacters plus a unique identifier.  Watch this video to see how to create both an empty project, imported project, and a project from a sample.  This video provides a visual method to learn the concepts and tasks in this documentation.         Next steps   Add collaborators  Add data   Learn more   Object storage  Importing a project  Troubleshooting Cloud Object Storage for projects   Parent topic:  Projects\n\nis saved in the project. Many tasks include samples that you can use. You can find sample prompts, notebooks, data sets, and other assets in the Samples from the home page. You can share your work by adding collaborators to your project. If you need to work with data, you can add data assets to your project.  If your sandbox project is your only project, then any task that you select occurs in the context of your sandbox project. When you have multiple projects, you can change the default project\n\na project, you can add a short description to document the purpose or goal of the project. You can edit the description later, on the project's Settings page.  You can mark the project as sensitive. When users open a project that is marked as sensitive, a notification is displayed stating that no data assets can be downloaded or exported from the project.  The Overview page of a project contains a readme file where you can document the status or results of the project. The readme file uses standard\n\nproject.  Asset storage is where project information and files are stored.  Integrations are how you incorporate external tools.   You can customize projects to suit your goals. You can change the contents of your project and almost all of its properties at any time. However, you must make these choices when you create the project because you can't change them later:   The instance of IBM Cloud Object Storage to use for project storage.   You can view projects that you create and collaborate in by"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Returned when the request parameters are invalid"
          },
          "401": {
            "description": "Unauthorized - Returned when caller does not have a valid authorization token, or it is missing"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "RAG query",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST 'https://{cluster_url}/v1-beta/utility_agent_tools/run/RAGQuery'\n",
                      "-H 'Authorization: Bearer eyJhbGciOiJSUzUxM...'\n",
                      "-H 'Content-Type: application/json'\n",
                      "--data-raw ",
                      "'{\n",
                      "  \"input\": \"What is a project?\",\n",
                      "  \"config\": {\n",
                      "    \"projectId\": \"d514c8ef-423f-429c-8947-fa900dee338a\",\n",
                      "    \"vectorIndexId\": \"30964b43-f090-44a6-a379-4ab4c00498ca\"\n",
                      "  }\n",
                      "}'\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "You can authorize using an access token obtained from the authentication endpoint, the access token needs to be prepended with `Bearer` in the `Authorization` header.\n"
      }
    },
    "schemas": {
      "DeploymentResourcePatch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonPatchRequestHelper"
          },
          {
            "type": "object",
            "properties": {
              "asset": {
                "$ref": "#/components/schemas/Rel"
              }
            }
          }
        ]
      },
      "TextGenCommon": {
        "type": "object",
        "description": "A prompt to be used to infer the next tokens. Each request expects a `project_id` or a `space_id`, and the `project` or `space` must have an associated WML instance that will be used for limits and billing (if a paid plan).\n",
        "required": [
          "input"
        ],
        "properties": {
          "input": {
            "type": "string",
            "description": "The prompt to generate completions.\nNote: The method tokenizes the input internally.\nIt is recommended not to leave any trailing spaces.\n"
          }
        }
      },
      "SpaceId": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-]*$",
        "minLength": 36,
        "maxLength": 36,
        "description": "The space that contains the resource.\nEither `space_id` or `project_id` has to be given.\n",
        "example": "3fc54cf1-252f-424b-b52d-5cdd9814987f"
      },
      "ProjectId": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-]*$",
        "minLength": 36,
        "maxLength": 36,
        "description": "The project that contains the resource.\nEither `space_id` or `project_id` has to be given.\n",
        "example": "12ac4cf1-252f-424b-b52d-5cdd9814987f"
      },
      "TextGenLengthPenalty": {
        "type": "object",
        "description": "It can be used to exponentially increase the likelihood of the text generation terminating once a specified number of tokens have been generated.\n\nIn future implementations, this parameter will be ignored.\n",
        "properties": {
          "decay_factor": {
            "type": "number",
            "description": "Represents the factor of exponential decay.\nLarger values correspond to more aggressive decay.\n",
            "minimum": 1,
            "exclusiveMinimum": true,
            "example": 2.5
          },
          "start_index": {
            "type": "integer",
            "description": "A number of generated tokens after which this should take effect.\n\n\nIn newer implementations of the service, this parameter will be ignored.\n",
            "minimum": 0,
            "example": 5
          }
        }
      },
      "ParameterTruncateInputTokensFromStart": {
        "type": "integer",
        "description": "Represents the maximum number of input tokens accepted.\nThis can be used to avoid requests failing due to input being longer than configured limits. If the text is truncated, then it truncates the start of the input (on the left), so the end of the input will remain the same.\nIf this value exceeds the `maximum sequence length` (refer to the documentation to find this value for the model) then the call will fail if the total number of tokens exceeds the `maximum sequence length`.\n",
        "minimum": 1
      },
      "ReturnOptionProperties": {
        "type": "object",
        "description": "Properties that control what is returned.\n",
        "properties": {
          "input_text": {
            "type": "boolean",
            "description": "Include input text in the `generated_text` field.\n",
            "example": true,
            "default": false
          },
          "generated_tokens": {
            "type": "boolean",
            "description": "Include the list of individual generated tokens.\nExtra token information is included based on the other flags below.\n",
            "example": true,
            "default": false
          },
          "input_tokens": {
            "type": "boolean",
            "description": "Include the list of input tokens. Extra token information is included based\non the other flags here, but only for decoder-only models.\n",
            "example": true,
            "default": false
          },
          "token_logprobs": {
            "type": "boolean",
            "description": "Include logprob (natural log of probability) for each returned token.\nApplicable only if generated_tokens == true and/or input_tokens == true.\n",
            "example": true,
            "default": false
          },
          "token_ranks": {
            "type": "boolean",
            "description": "Include rank of each returned token.\nApplicable only if generated_tokens == true and/or input_tokens == true.\n\n\nIn future implementations, this parameter will be ignored and token rank\nwill not be included in the response.\n",
            "example": true,
            "default": false
          },
          "top_n_tokens": {
            "type": "integer",
            "description": "Include top n candidate tokens at the position of each returned token.\nThe maximum value permitted is 5, but more may be returned if there is a tie for nth place.\nApplicable only if generated_tokens == true and/or input_tokens == true.\n",
            "example": 2,
            "minimum": 0
          }
        }
      },
      "TextGenParameters": {
        "type": "object",
        "description": "Properties that control the model and response.\n",
        "example": {
          "temperature": 0.8,
          "top_p": 0.5,
          "top_k": 50,
          "random_seed": 111,
          "repetition_penalty": 2,
          "min_new_tokens": 30,
          "max_new_tokens": 50
        },
        "properties": {
          "decoding_method": {
            "type": "string",
            "description": "Represents the strategy used for picking the tokens during generation of the output text.\n\nDuring text generation when parameter value is set to greedy, each successive token corresponds\nto the highest probability token given the text that has already been generated.\nThis strategy can lead to repetitive results especially for longer output sequences.\nThe alternative sample strategy generates text by picking subsequent tokens based on the\nprobability distribution of possible next tokens defined by (i.e., conditioned on) the\nalready-generated text and the top_k and top_p parameters described below.\nSee this [url](https://huggingface.co/blog/how-to-generate) for an informative article about text generation.\n\nIn future implementations, this parameter will be automatically set depending on the `temperature` parameter so this parameter will be ignored.\n",
            "enum": [
              "sample",
              "greedy"
            ],
            "default": "sample",
            "example": "greedy"
          },
          "length_penalty": {
            "$ref": "#/components/schemas/TextGenLengthPenalty"
          },
          "max_new_tokens": {
            "type": "integer",
            "description": "The maximum number of new tokens to be generated.\nThe maximum supported value for this field depends on the model being used.\n\nHow the \"token\" is defined depends on the tokenizer and vocabulary size,\nwhich in turn depends on the model. Often the tokens are a mix of full words and sub-words.\nTo learn more about tokenization, [see here](https://huggingface.co/course/chapter2/4).\n\nDepending on the users plan, and on the model being used, there may be an enforced maximum number of new tokens.\n",
            "minimum": 0,
            "default": 20,
            "example": 30
          },
          "min_new_tokens": {
            "type": "integer",
            "description": "If stop sequences are given, they are ignored until minimum tokens are generated.\n",
            "minimum": 0,
            "default": 0,
            "example": 5
          },
          "random_seed": {
            "type": "integer",
            "description": "Random number generator seed to use in sampling mode for experimental repeatability.\n",
            "minimum": 1,
            "example": 1
          },
          "stop_sequences": {
            "type": "array",
            "minItems": 0,
            "maxItems": 6,
            "uniqueItems": true,
            "description": "Stop sequences are one or more strings which will cause the text generation to stop if/when they are produced as part of the output.\nStop sequences encountered prior to the minimum number of tokens being generated will be ignored.\n",
            "example": [
              "fail"
            ],
            "items": {
              "type": "string"
            }
          },
          "temperature": {
            "type": "number",
            "description": "A value used to modify the next-token probabilities in sampling mode.\nValues less than 1.0 sharpen the probability distribution, resulting in \"less random\" output.\nValues greater than 1.0 flatten the probability distribution, resulting in \"more random\" output.\nA value of 1.0 has no effect.\n",
            "minimum": 0.05,
            "maximum": 2,
            "default": 1,
            "example": 1.5
          },
          "time_limit": {
            "type": "integer",
            "description": "Time limit in milliseconds - if not completed within this time, generation will stop.\nThe text generated so far will be returned along with the TIME_LIMIT stop reason.\n\nDepending on the users plan, and on the model being used, there may be an enforced maximum time limit.\n",
            "minimum": 0,
            "exclusiveMinimum": true,
            "example": 600000
          },
          "top_k": {
            "type": "integer",
            "description": "The number of highest probability vocabulary tokens to keep for top-k-filtering.\nOnly applies for sampling mode. When decoding_strategy is set to sample,\nonly the top_k most likely tokens are considered as candidates for the next generated token.\n",
            "minimum": 1,
            "maximum": 100,
            "example": 50
          },
          "top_p": {
            "type": "number",
            "description": "Similar to top_k except the candidates to generate the next token are the most likely tokens\nwith probabilities that add up to at least top_p. Also known as nucleus sampling.\nA value of 1.0 is equivalent to disabled.\n",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "example": 0.5,
            "default": 1
          },
          "repetition_penalty": {
            "type": "number",
            "description": "Represents the penalty for penalizing tokens that have already been generated or\nbelong to the context. The value 1.0 means that there is no penalty.\n",
            "minimum": 1,
            "maximum": 2,
            "default": 1,
            "example": 1.5
          },
          "truncate_input_tokens": {
            "$ref": "#/components/schemas/ParameterTruncateInputTokensFromStart"
          },
          "return_options": {
            "$ref": "#/components/schemas/ReturnOptionProperties"
          },
          "include_stop_sequence": {
            "type": "boolean",
            "description": "Pass `false` to omit matched stop sequences from the end of the output text.\nThe default is `true`, meaning that the output will end with the stop sequence text when matched.\n",
            "default": true
          }
        }
      },
      "TextModeration": {
        "type": "object",
        "description": "Properties that control the moderation on the text.\n",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Should this moderation be enabled on the text.\n\n\nThe default value is `true` which means that if the parent object exists\nbut the `enabled` field does not exist then this is considered to be enabled.\n",
            "default": true
          },
          "threshold": {
            "type": "number",
            "description": "The threshold probability that this is a real match.\n",
            "format": "float",
            "minimum": 0,
            "maximum": 1
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "ModerationProperties": {
        "type": "object",
        "description": "The properties for the moderation. Each type of moderation\nmay have additional properties that are specific to that moderation.\n",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/TextModeration"
          },
          "output": {
            "$ref": "#/components/schemas/TextModeration"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "MaskProperties": {
        "type": "object",
        "description": "The properties specific to masking. If this object exists,\neven if it is empty, then masking will be applied.\n",
        "properties": {
          "remove_entity_value": {
            "type": "boolean",
            "description": "If this field is `true` then the entity value, that contains the text that was masked,\nwill also be removed from the output.\n",
            "default": false
          }
        }
      },
      "HapProperties": {
        "type": "object",
        "description": "The properties specific to HAP.\n",
        "properties": {
          "mask": {
            "$ref": "#/components/schemas/MaskProperties"
          }
        }
      },
      "ModerationHapProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModerationProperties"
          },
          {
            "$ref": "#/components/schemas/HapProperties"
          }
        ]
      },
      "TextModerationWithoutThreshold": {
        "type": "object",
        "description": "Properties that control the moderation on the text.\n",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Should this moderation be enabled on the text.\n\n\nThe default value is `true` which means that if the parent object exists\nbut the `enabled` field does not exist then this is considered to be enabled.\n",
            "default": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "ModerationPropertiesWithoutThreshold": {
        "type": "object",
        "description": "The properties for the moderation. Each type of moderation\nmay have additional properties that are specific to that moderation.\n",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/TextModerationWithoutThreshold"
          },
          "output": {
            "$ref": "#/components/schemas/TextModerationWithoutThreshold"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "PiiProperties": {
        "type": "object",
        "description": "The properties specific to PII.\n",
        "properties": {
          "mask": {
            "$ref": "#/components/schemas/MaskProperties"
          }
        }
      },
      "ModerationPiiProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModerationPropertiesWithoutThreshold"
          },
          {
            "$ref": "#/components/schemas/PiiProperties"
          }
        ]
      },
      "GraniteGuardianProperties": {
        "type": "object",
        "description": "The properties specific to Granite Guardian. This detector is in beta and may change.\n",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/TextModeration"
          },
          "mask": {
            "$ref": "#/components/schemas/MaskProperties"
          }
        }
      },
      "ModerationGraniteGuardianProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GraniteGuardianProperties"
          }
        ]
      },
      "ModerationTextRange": {
        "type": "object",
        "description": "A range of text.\n",
        "properties": {
          "start": {
            "type": "integer",
            "description": "The start index of the range.\n",
            "minimum": 0
          },
          "end": {
            "type": "integer",
            "description": "The end index of the range. The end index is exclusive meaning that the character at this index will not be included in the range.\n",
            "minimum": 0
          }
        },
        "required": [
          "start",
          "end"
        ]
      },
      "Moderations": {
        "type": "object",
        "description": "Properties that control the moderations, for usages such as `Hate and profanity` (HAP) and `Personal identifiable information` (PII) filtering. This list can be extended with new types of moderations.\n",
        "properties": {
          "hap": {
            "$ref": "#/components/schemas/ModerationHapProperties"
          },
          "pii": {
            "$ref": "#/components/schemas/ModerationPiiProperties"
          },
          "granite_guardian": {
            "$ref": "#/components/schemas/ModerationGraniteGuardianProperties"
          },
          "input_ranges": {
            "type": "array",
            "description": "If set, then only these ranges will be applied to the moderations. This is useful in the case that certain parts of the input text have already been checked.\n",
            "items": {
              "$ref": "#/components/schemas/ModerationTextRange"
            }
          }
        },
        "additionalProperties": {
          "$ref": "#/components/schemas/ModerationProperties"
        },
        "example": {
          "hap": {
            "output": {
              "enabled": true,
              "threshold": 0.5
            }
          },
          "pii": {
            "output": {
              "enabled": true
            },
            "mask": {
              "remove_entity_value": true
            }
          }
        }
      },
      "TextGenRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TextGenCommon"
          },
          {
            "type": "object",
            "properties": {
              "model_id": {
                "type": "string",
                "description": "The `id` of the model to be used for this request.\nPlease refer to the [list of models](https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/fm-models.html?context=wx).\n",
                "example": "google/flan-ul2"
              },
              "space_id": {
                "$ref": "#/components/schemas/SpaceId"
              },
              "project_id": {
                "$ref": "#/components/schemas/ProjectId"
              },
              "parameters": {
                "$ref": "#/components/schemas/TextGenParameters"
              },
              "moderations": {
                "$ref": "#/components/schemas/Moderations"
              }
            },
            "required": [
              "model_id"
            ]
          }
        ],
        "example": {
          "model_id": "google/flan-ul2",
          "input": "Generate a marketing email advertising a new sale with the following characteristics:\n\nCompany: Swimwear Unlimited\n\nOffer Keywords: {Select customers only, mid-summer fun, swimwear sale}\n\nOffer End Date: July 15\n\nAdvertisement Tone: Exciting!\n\nInclude no URLs.\n\nInclude no telephone numbers.\n",
          "parameters": {
            "temperature": 0.8,
            "max_new_tokens": 30
          },
          "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
          "moderations": {
            "hap": {
              "output": {
                "enabled": true,
                "threshold": 0.5
              }
            },
            "pii": {
              "output": {
                "enabled": true
              },
              "mask": {
                "remove_entity_value": true
              }
            }
          }
        }
      },
      "ModelVersion": {
        "type": "string",
        "description": "The model version (using semantic versioning) if set.\n",
        "pattern": "^\\d+.\\d+.\\d+$",
        "minLength": 5,
        "maxLength": 20
      },
      "CreatedAt": {
        "type": "string",
        "format": "date-time",
        "example": "2020-05-02T16:27:51Z",
        "description": "The time when the response was created in ISO 8601 format.\n"
      },
      "TextGenStopReason": {
        "type": "string",
        "description": "The reason why the call stopped, can be one of:\n- not_finished - Possibly more tokens to be streamed.\n- max_tokens - Maximum requested tokens reached.\n- eos_token - End of sequence token encountered.\n- cancelled - Request canceled by the client.\n- time_limit - Time limit reached.\n- stop_sequence - Stop sequence encountered.\n- token_limit - Token limit reached.\n- error - Error encountered.\n\nNote that these values will be lower-cased so test for values case insensitive.\n",
        "enum": [
          "not_finished",
          "max_tokens",
          "eos_token",
          "cancelled",
          "time_limit",
          "stop_sequence",
          "token_limit",
          "error"
        ],
        "example": "token_limit"
      },
      "TextGenResult": {
        "type": "object",
        "properties": {
          "generated_text": {
            "type": "string",
            "description": "The text that was generated by the model.\n",
            "example": "Swimwear Unlimited- Mid-Summer Sale! ..."
          },
          "stop_reason": {
            "$ref": "#/components/schemas/TextGenStopReason"
          }
        },
        "required": [
          "generated_text",
          "stop_reason"
        ]
      },
      "TextGenTopTokenInfo": {
        "type": "object",
        "description": "The top tokens.\n",
        "properties": {
          "text": {
            "type": "string",
            "description": "The token text.\n"
          },
          "logprob": {
            "type": "number",
            "description": "The natural log of probability for the token.\n"
          }
        }
      },
      "TextGenTokenInfo": {
        "type": "object",
        "description": "The generated token.\n",
        "properties": {
          "text": {
            "type": "string",
            "description": "The token text.\n"
          },
          "logprob": {
            "type": "number",
            "description": "The natural log of probability for the token.\n"
          },
          "rank": {
            "type": "integer",
            "description": "The rank of the token relative to the other tokens.\n"
          },
          "top_tokens": {
            "type": "array",
            "description": "The top tokens.\n",
            "items": {
              "$ref": "#/components/schemas/TextGenTopTokenInfo"
            },
            "minItems": 0
          }
        }
      },
      "ModerationResult": {
        "type": "object",
        "description": "A specific moderation result.\n",
        "properties": {
          "score": {
            "type": "number",
            "description": "the probability that this is a real match.\n",
            "format": "float",
            "minimum": 0,
            "maximum": 1
          },
          "input": {
            "type": "boolean",
            "description": "This defines if this was found in the input (`true`) or the output (`false`).\n"
          },
          "position": {
            "$ref": "#/components/schemas/ModerationTextRange"
          },
          "entity": {
            "type": "string",
            "description": "The entity that was identified by the moderation.\n",
            "example": "EmailAddress"
          },
          "word": {
            "type": "string",
            "description": "The text that was identified for this entity.\n\nThis field may be removed if requested in the moderation request body.\n"
          }
        },
        "required": [
          "score",
          "input",
          "position",
          "entity"
        ]
      },
      "ModerationResults": {
        "type": "object",
        "description": "The result of any detected moderations.\n",
        "properties": {
          "hap": {
            "type": "array",
            "description": "The HAP results.\n",
            "items": {
              "$ref": "#/components/schemas/ModerationResult"
            }
          },
          "pii": {
            "type": "array",
            "description": "The PII results.\n",
            "items": {
              "$ref": "#/components/schemas/ModerationResult"
            }
          }
        },
        "additionalProperties": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/ModerationResult"
          }
        }
      },
      "TextGenResultFields": {
        "type": "object",
        "properties": {
          "generated_token_count": {
            "type": "integer",
            "description": "The number of generated tokens.\n",
            "example": 3
          },
          "input_token_count": {
            "type": "integer",
            "description": "The number of input tokens consumed.\n",
            "example": 11
          },
          "seed": {
            "type": "integer",
            "description": "The seed used, if it exists.\n",
            "example": 42
          },
          "generated_tokens": {
            "type": "array",
            "description": "The list of individual generated tokens.\nExtra token information is included based on the other flags in the `return_options` of the request.\n",
            "items": {
              "$ref": "#/components/schemas/TextGenTokenInfo"
            },
            "minItems": 1,
            "example": [
              {
                "text": "_",
                "rank": 1,
                "logprob": -2.5,
                "top_tokens": [
                  {
                    "text": "_",
                    "logprob": -2.5
                  },
                  {
                    "text": "_2",
                    "logprob": -3.1777344
                  }
                ]
              },
              {
                "text": "4,000",
                "rank": 1,
                "logprob": -3.0957031,
                "top_tokens": [
                  {
                    "text": "4,000",
                    "logprob": -3.0957031
                  },
                  {
                    "text": "57",
                    "logprob": -3.3691406
                  }
                ]
              }
            ]
          },
          "input_tokens": {
            "type": "array",
            "description": "The list of input tokens.\nExtra token information is included based on the other flags in the `return_options` of the request, but for decoder-only models.\n",
            "items": {
              "$ref": "#/components/schemas/TextGenTokenInfo"
            },
            "minItems": 1,
            "example": [
              {
                "text": "_how"
              },
              {
                "text": "_far"
              },
              {
                "text": "_is"
              },
              {
                "text": "</s>"
              }
            ]
          },
          "moderations": {
            "$ref": "#/components/schemas/ModerationResults"
          }
        }
      },
      "TextGenResponseFields": {
        "type": "object",
        "description": "The tokens that are inferred from the prompt.\n\nNote that the events are different between a request with moderation and\na request without moderations.\nA request with moderation will have events that are on a sentence level\nand a request without moderations will have events that are on a token level.\n",
        "properties": {
          "model_id": {
            "type": "string",
            "description": "The `id` of the model for inference.\n",
            "example": "google/flan-ul2"
          },
          "model_version": {
            "$ref": "#/components/schemas/ModelVersion"
          },
          "created_at": {
            "$ref": "#/components/schemas/CreatedAt"
          },
          "results": {
            "type": "array",
            "description": "The generated tokens.\n",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TextGenResult"
                },
                {
                  "$ref": "#/components/schemas/TextGenResultFields"
                }
              ]
            },
            "minItems": 1
          }
        },
        "required": [
          "model_id",
          "created_at",
          "results"
        ]
      },
      "Warning": {
        "type": "object",
        "description": "A warning message.\n",
        "properties": {
          "message": {
            "type": "string",
            "description": "The message.\n",
            "example": "The framework TF 1.1 is deprecated."
          },
          "id": {
            "type": "string",
            "description": "An `id` associated with the message.\n",
            "example": "2fc54cf1-252f-424b-b52d-5cdd98149871"
          },
          "more_info": {
            "type": "string",
            "description": "A reference to a more detailed explanation when available.\n"
          },
          "additional_properties": {
            "type": "object",
            "description": "Additional key-value pairs that depend on the specific warning.\n"
          }
        },
        "required": [
          "message"
        ]
      },
      "SystemDetails": {
        "type": "object",
        "description": "Optional details coming from the service and related to the API call or the associated resource.\n",
        "properties": {
          "warnings": {
            "type": "array",
            "description": "Any warnings coming from the system.\n",
            "items": {
              "$ref": "#/components/schemas/Warning"
            }
          }
        }
      },
      "System": {
        "type": "object",
        "description": "System details.\n",
        "properties": {
          "system": {
            "$ref": "#/components/schemas/SystemDetails"
          }
        }
      },
      "TextGenResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TextGenResponseFields"
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ]
      },
      "ApiErrorTarget": {
        "type": "object",
        "description": "The target of the error.\n",
        "properties": {
          "type": {
            "description": "The type of the problematic field.\n",
            "type": "string",
            "enum": [
              "field",
              "parameter",
              "header"
            ]
          },
          "name": {
            "description": "The name of the problematic field.\n",
            "type": "string"
          }
        },
        "required": [
          "type",
          "name"
        ]
      },
      "ApiError": {
        "type": "object",
        "description": "An error message.\n",
        "properties": {
          "code": {
            "type": "string",
            "example": "missing_field",
            "description": "A simple code that should convey the general sense of the error.\n"
          },
          "message": {
            "type": "string",
            "example": "The 'name' field is required.",
            "description": "The message that describes the error.\n"
          },
          "more_info": {
            "type": "string",
            "example": "https://cloud.ibm.com/apidocs/machine-learning#models-get",
            "description": "A reference to a more detailed explanation when available.\n"
          },
          "target": {
            "$ref": "#/components/schemas/ApiErrorTarget"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "ApiErrorResponse": {
        "type": "object",
        "description": "The data returned when an error is encountered.\n",
        "properties": {
          "trace": {
            "type": "string",
            "example": "3fd543d2-36e0-4f83-9be3-5c6dd498af4f",
            "description": "An identifier that can be used to trace the request.\n"
          },
          "errors": {
            "type": "array",
            "description": "The list of errors.\n",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        },
        "required": [
          "trace",
          "errors"
        ]
      },
      "TextGenStreamResponse": {
        "description": "A set of server sent events, each event contains a response for one or more tokens. The results will be an array of events of the form `data: {<json event>}` where the schema of the individual `json event` is described below.\n",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TextGenResponse"
        }
      },
      "TextTokenizeParameters": {
        "type": "object",
        "description": "The parameters for text tokenization.\n",
        "properties": {
          "return_tokens": {
            "type": "boolean",
            "description": "If this is `true` then the actual tokens will also be returned in the response.\n",
            "default": false,
            "example": true
          }
        }
      },
      "TextTokenizeRequest": {
        "type": "object",
        "description": "The input string to tokenize along with the associated model id and any parameters.\nOne of `space_id` or `project_id` must be provided.\n",
        "required": [
          "input",
          "model_id"
        ],
        "properties": {
          "space_id": {
            "$ref": "#/components/schemas/SpaceId"
          },
          "project_id": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "model_id": {
            "type": "string",
            "description": "The `id` of the model to be used for this request.\nPlease refer to the [list of models](https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/fm-models.html?context=wx).\n",
            "example": "google/flan-ul2"
          },
          "input": {
            "type": "string",
            "description": "The input string to tokenize.\n",
            "example": "Write a tagline for an alumni association: Together we"
          },
          "parameters": {
            "$ref": "#/components/schemas/TextTokenizeParameters"
          }
        }
      },
      "TextTokenizeResult": {
        "type": "object",
        "description": "The result of tokenizing the input string.\n",
        "properties": {
          "token_count": {
            "type": "integer",
            "description": "The number of tokens in the input string.\n",
            "example": 11
          },
          "tokens": {
            "type": "array",
            "description": "The input string broken up into the tokens, if requested.\n",
            "items": {
              "type": "string"
            },
            "example": [
              "Write",
              "a",
              "tag",
              "line",
              "for",
              "an",
              "alumni",
              "associ",
              "ation:",
              "Together",
              "we"
            ]
          }
        },
        "required": [
          "token_count"
        ]
      },
      "TextTokenizeResponse": {
        "type": "object",
        "description": "The tokenization result.\n",
        "required": [
          "model_id",
          "result"
        ],
        "properties": {
          "model_id": {
            "type": "string",
            "description": "The `id` of the model to be used for this request.\nPlease refer to the [list of models](https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/fm-models.html?context=wx).\n",
            "example": "google/flan-ul2"
          },
          "result": {
            "$ref": "#/components/schemas/TextTokenizeResult"
          }
        }
      },
      "PaginationFirst": {
        "type": "object",
        "description": "The reference to the first item in the current page.\n",
        "properties": {
          "href": {
            "description": "The uri of the first resource returned.\n",
            "type": "string"
          }
        },
        "required": [
          "href"
        ]
      },
      "PaginationNext": {
        "type": "object",
        "description": "A reference to the first item of the next page, if any.\n",
        "properties": {
          "href": {
            "description": "The uri of the next set of resources.\n",
            "type": "string"
          }
        },
        "required": [
          "href"
        ]
      },
      "PaginationBase": {
        "type": "object",
        "properties": {
          "total_count": {
            "description": "Computed explicitly only when `total_count=true` query parameter is present.\nThis is in order to avoid performance penalties.\n",
            "type": "integer"
          },
          "limit": {
            "type": "integer",
            "description": "The number of items to return in each page.\n",
            "example": 10,
            "minimum": 1,
            "maximum": 200
          },
          "first": {
            "$ref": "#/components/schemas/PaginationFirst"
          },
          "next": {
            "$ref": "#/components/schemas/PaginationNext"
          }
        },
        "required": [
          "limit",
          "first"
        ]
      },
      "PaginationTC": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationBase"
          },
          {
            "type": "object",
            "properties": {
              "total_count": {
                "description": "The total number of resources.\n",
                "type": "integer",
                "example": 1
              }
            }
          }
        ],
        "description": "Information for paging when querying resources.\n"
      },
      "ConsumptionsLimit": {
        "type": "object",
        "description": "The limits that may be set per request.\n",
        "properties": {
          "call_time": {
            "type": "string",
            "description": "The hard limit on the call time for a request, if set.\n",
            "example": "3S"
          },
          "max_input_tokens": {
            "type": "integer",
            "description": "The hard limit on the number of input tokens for a request, if set.\nA value of zero will disable this feature.\n",
            "example": 200
          },
          "max_output_tokens": {
            "type": "integer",
            "description": "The hard limit on the number of output tokens for a request, if set.\nA value of zero will disable this feature.\n",
            "example": 1000
          }
        }
      },
      "FoundationModelLimits": {
        "type": "object",
        "description": "Limits per plan that may be set per request.\n",
        "properties": {
          "lite": {
            "$ref": "#/components/schemas/ConsumptionsLimit"
          }
        }
      },
      "TaskRating": {
        "type": "object",
        "description": "The ratings for this task for this model.\n",
        "properties": {
          "cost": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "description": "A metric that indicates the cost expected to be incurred by the model's support of an inference task,\nin terms of resource consumption and processing time,\non a scale of 1 to 5, where 5 is the least cost and 1 is the most cost.\nA missing value means that the cost is not known.\n",
            "example": 2
          },
          "quality": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "description": "A metric that indicates the quality of the model's support of an inference task,\non a scale of 1 to 5, where 5 is the best support and 1 is poor support.\nA missing value means that the quality is not known.\n",
            "example": 3
          }
        }
      },
      "Tags": {
        "type": "array",
        "description": "A list of tags for this resource.\n",
        "items": {
          "type": "string"
        },
        "maxItems": 64,
        "example": [
          "t1",
          "t2"
        ]
      },
      "TaskDescription": {
        "type": "object",
        "description": "The attributes of the task for this model.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The `id` of the task.\n",
            "example": "summarization"
          },
          "ratings": {
            "$ref": "#/components/schemas/TaskRating"
          },
          "tags": {
            "type": "array",
            "description": "The tags for a given task.\n",
            "items": {
              "type": "string",
              "description": "The tag.\n"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "FoundationModelTier": {
        "type": "string",
        "description": "The tier of the model, depending on the `tier` the billing will be different, refer to the plan for the details. Note that input tokens and output tokens may be charged differently.\n",
        "enum": [
          "class_1",
          "class_2",
          "class_3",
          "class_c1"
        ]
      },
      "ModelLimits": {
        "type": "object",
        "description": "The limits that are applied for the model, for all the plans.\n",
        "properties": {
          "max_sequence_length": {
            "type": "integer",
            "description": "This is the maximum allowed value for the number of tokens in the input\nprompt plus the number of tokens in the output generated by the model.\n",
            "example": 4096
          },
          "training_data_max_records": {
            "type": "integer",
            "description": "This is the maximum number of records that can be accepted when training this model.\n",
            "example": 1024
          }
        }
      },
      "LifeCycleState": {
        "type": "object",
        "description": "The lifecycle details.\n",
        "properties": {
          "id": {
            "type": "string",
            "enum": [
              "available",
              "deprecated",
              "constricted",
              "withdrawn"
            ],
            "description": "The possible lifecycle stages, in order, are described below:\n\n- `available`: this means that the model is available for use.\n- `deprecated`: this means that the model is still available but the model will be removed soon, so an alternative model should be used.\n- `constricted`: this means that the model is still available for inferencing but cannot be used for training or in a deployment. The model will be removed soon so an alternative model should be used.\n- `withdrawn`: this means that the model is no longer available, check the `alternative_model_ids` to see what it can be replaced by.\n",
            "example": "available"
          },
          "label": {
            "type": "string",
            "description": "An optional label that may be used in the UI.\n"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "The date (ISO 8601 format YYYY-MM-DD) when this lifecycle stage starts.\n",
            "example": "2023-07-23",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
            "minLength": 10,
            "maxLength": 10
          },
          "alternative_model_ids": {
            "type": "array",
            "description": "Alternative models, or model versions, that can be used instead of this model.\n",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "A link to the documentation specifying details on the lifecycle plan for this model.\n"
          }
        },
        "required": [
          "id"
        ]
      },
      "TrainingInitMethod": {
        "type": "object",
        "description": "Initialization methods for a training.\n",
        "properties": {
          "supported": {
            "type": "array",
            "description": "The supported initialization methods.\n",
            "items": {
              "type": "string",
              "description": "A supported initialization method.\n"
            },
            "example": [
              "random",
              "text"
            ]
          },
          "default": {
            "type": "string",
            "description": "The default value, which will be one of the values from the `supported` field.\n",
            "example": "random"
          }
        }
      },
      "TrainingInitText": {
        "type": "object",
        "description": "Initialization text to be used if init_method is set to `text`, otherwise this will be ignored.\n",
        "properties": {
          "default": {
            "type": "string",
            "description": "Initialization text.\n",
            "example": "text"
          }
        }
      },
      "TrainingNumVirtualTokens": {
        "type": "object",
        "description": "Number of virtual tokens to be used for training.\nIn prompt tuning we are essentially learning the embedded representations for soft prompts,\nwhich are known as virtual tokens, via back propagation for a specific task(s) while keeping\nthe rest of the model fixed. `num_virtual_tokens` is the number of dimensions for these virtual tokens.\n",
        "properties": {
          "supported": {
            "type": "array",
            "description": "The possible values for the number of virtual tokens.\n",
            "items": {
              "type": "integer"
            },
            "example": [
              20,
              50,
              100
            ]
          },
          "default": {
            "type": "integer",
            "description": "The default number of virtual tokens.\n",
            "example": 100
          }
        }
      },
      "TrainingNumEpochs": {
        "type": "object",
        "description": "The number of epochs is the number of complete passes through the training dataset.\nThe quality depends on the number of epochs.\n",
        "properties": {
          "default": {
            "type": "integer",
            "description": "The default value.\n",
            "example": 20
          },
          "min": {
            "type": "integer",
            "description": "The minimum value.\n",
            "example": 1
          },
          "max": {
            "type": "integer",
            "description": "The maximum value.\n",
            "example": 50
          }
        }
      },
      "TrainingVerbalizer": {
        "type": "object",
        "description": "Verbalizer template to be used for formatting data at train and inference time.\nThis template may use brackets to indicate where fields from the data model\nTrainGenerationRecord must be rendered.\n",
        "properties": {
          "default": {
            "type": "string",
            "description": "The default verbalizer.\n",
            "example": "Input: {{input}} Output:"
          }
        }
      },
      "TrainingBatchSize": {
        "type": "object",
        "description": "The batch size is a number of samples processed before the model is updated.\n",
        "properties": {
          "default": {
            "type": "integer",
            "description": "The default value.\n",
            "example": 16
          },
          "min": {
            "type": "integer",
            "description": "The minimum value.\n",
            "example": 1
          },
          "max": {
            "type": "integer",
            "description": "The maximum value.\n",
            "example": 16
          }
        }
      },
      "TrainingMaxInputTokens": {
        "type": "object",
        "description": "Maximum length of input tokens being considered.\n",
        "properties": {
          "default": {
            "type": "integer",
            "description": "The default value.\n",
            "example": 256
          },
          "min": {
            "type": "integer",
            "description": "The minimum value.\n",
            "example": 1
          },
          "max": {
            "type": "integer",
            "description": "The maximum value.\n",
            "example": 1024
          }
        }
      },
      "TrainingMaxOutputTokens": {
        "type": "object",
        "description": "Maximum length of output tokens being predicted.\n",
        "properties": {
          "default": {
            "type": "integer",
            "description": "The default value.\n",
            "example": 128
          },
          "min": {
            "type": "integer",
            "description": "The minimum value.\n",
            "example": 1
          },
          "max": {
            "type": "integer",
            "description": "The maximum value.\n",
            "example": 256
          }
        }
      },
      "TrainingTorchDtype": {
        "type": "object",
        "description": "Datatype to use for training of the underlying text generation model.\nIf no value is provided, we pull from torch_dtype in config.\nIf an in memory resource is provided which does not match the specified data type,\nthe model underpinning the resource will be converted in place to the correct torch dtype.\n",
        "properties": {
          "default": {
            "type": "string",
            "description": "The datatype.\n",
            "example": "bfloat16"
          }
        }
      },
      "TrainingAccumulatedSteps": {
        "type": "object",
        "description": "Number of steps to be used for gradient accumulation.\nGradient accumulation refers to a method of collecting gradient for configured number of steps\ninstead of updating the model variables at every step and then applying the update to model variables.\nThis can be used as a tool to overcome smaller batch size limitation.\nOften also referred in conjunction with \"effective batch size\".\n",
        "properties": {
          "default": {
            "type": "integer",
            "description": "The default value.\n",
            "example": 128
          },
          "min": {
            "type": "integer",
            "description": "The minimum value.\n",
            "example": 1
          },
          "max": {
            "type": "integer",
            "description": "The maximum value.\n",
            "example": 128
          }
        }
      },
      "TrainingLearningRate": {
        "type": "object",
        "description": "Learning rate to be used for training.\n",
        "properties": {
          "default": {
            "type": "number",
            "description": "The default value.\n",
            "example": 0.3
          },
          "min": {
            "type": "number",
            "description": "The minimum value.\n",
            "example": 0.01
          },
          "max": {
            "type": "number",
            "description": "The maximum value.\n",
            "example": 0.5
          }
        }
      },
      "TrainingParameters": {
        "type": "object",
        "description": "Training parameters for a given model.\n",
        "properties": {
          "init_method": {
            "$ref": "#/components/schemas/TrainingInitMethod"
          },
          "init_text": {
            "$ref": "#/components/schemas/TrainingInitText"
          },
          "num_virtual_tokens": {
            "$ref": "#/components/schemas/TrainingNumVirtualTokens"
          },
          "num_epochs": {
            "$ref": "#/components/schemas/TrainingNumEpochs"
          },
          "verbalizer": {
            "$ref": "#/components/schemas/TrainingVerbalizer"
          },
          "batch_size": {
            "$ref": "#/components/schemas/TrainingBatchSize"
          },
          "max_input_tokens": {
            "$ref": "#/components/schemas/TrainingMaxInputTokens"
          },
          "max_output_tokens": {
            "$ref": "#/components/schemas/TrainingMaxOutputTokens"
          },
          "torch_dtype": {
            "$ref": "#/components/schemas/TrainingTorchDtype"
          },
          "accumulate_steps": {
            "$ref": "#/components/schemas/TrainingAccumulatedSteps"
          },
          "learning_rate": {
            "$ref": "#/components/schemas/TrainingLearningRate"
          }
        }
      },
      "FoundationModelVersion": {
        "type": "object",
        "description": "A minor or patch version for the model.\n",
        "properties": {
          "version": {
            "type": "string",
            "pattern": "^\\d+.\\d+.\\d+$",
            "minLength": 5,
            "maxLength": 20,
            "description": "The version of the model. This must follow semantic versioning semantics.\n",
            "example": "1.1.0"
          },
          "available_date": {
            "type": "string",
            "format": "date",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
            "minLength": 10,
            "maxLength": 10,
            "description": "The date (ISO 8601 format YYYY-MM-DD) when this version first became available.\n",
            "example": "2023-08-23"
          }
        }
      },
      "FoundationModel": {
        "type": "object",
        "description": "A supported foundation model.\n",
        "properties": {
          "model_id": {
            "type": "string",
            "description": "The id of the foundation model.\n",
            "example": "google/flan-ul2"
          },
          "label": {
            "type": "string",
            "description": "A short label that will be displayed in the UI.\n",
            "example": "flan-ul2 (20B)"
          },
          "provider": {
            "type": "string",
            "description": "The provider of the model.\n",
            "example": "Hugging Face"
          },
          "tuned_by": {
            "type": "string",
            "description": "The organization or person that tuned this model.\n"
          },
          "short_description": {
            "type": "string",
            "description": "A short description of the model suitable for a title.\n",
            "example": "An encoder decoder model based on the T5 architecture and instruction-tuned using the Fine-tuned LAnguage Net."
          },
          "long_description": {
            "type": "string",
            "description": "A longer description of the model, that may be used if no `description_url` is provided.\n",
            "example": "flan-ul2 (20B) is an encoder decoder model based on the T5 architecture and instruction-tuned using the Fine-tuned LAnguage Net (FLAN)."
          },
          "limits": {
            "$ref": "#/components/schemas/FoundationModelLimits"
          },
          "supported_languages": {
            "type": "array",
            "description": "Languages supported by the model.\n",
            "items": {
              "type": "string",
              "description": "Supported language (ISO 639 2 letter language code).\n"
            },
            "example": [
              "fr",
              "en"
            ]
          },
          "task_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "The `id` of the tasks.\n"
            },
            "description": "Deprecated: please use `tasks` instead.\n",
            "deprecated": true
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDescription"
            },
            "minItems": 1,
            "description": "The tasks that are supported by this model.\n",
            "example": [
              {
                "id": "summarization",
                "ratings": {
                  "cost": 2,
                  "quality": 3
                },
                "benchmarks": [
                  {
                    "type": "academic",
                    "name": "bluebench",
                    "language": "German",
                    "description": "MultiLingual Summarization dataset with 1.5M+ article/summary pairs across five languages.",
                    "dataset": {
                      "name": "mlsum.de"
                    },
                    "prompt": {
                      "number_of_shots": 5
                    },
                    "metrics": [
                      {
                        "name": "rougeL",
                        "value": 0.56
                      }
                    ]
                  }
                ]
              },
              {
                "id": "classification",
                "ratings": {
                  "cost": 4,
                  "quality": 2
                }
              }
            ]
          },
          "input_tier": {
            "$ref": "#/components/schemas/FoundationModelTier"
          },
          "output_tier": {
            "$ref": "#/components/schemas/FoundationModelTier"
          },
          "source": {
            "type": "string",
            "description": "Specifies the provider of this model.\n",
            "example": "Hugging Face"
          },
          "min_shot_size": {
            "type": "integer",
            "description": "The minimum number of examples required for the model.\n",
            "example": 10,
            "minimum": 0
          },
          "number_params": {
            "type": "string",
            "description": "The number of parameters used for the model,\nit will accept `m` for million, `b` for billion and `t` for trillion.\n",
            "example": "20b"
          },
          "model_limits": {
            "$ref": "#/components/schemas/ModelLimits"
          },
          "lifecycle": {
            "type": "array",
            "description": "The information related to the lifecycle of this model.\n",
            "items": {
              "$ref": "#/components/schemas/LifeCycleState"
            },
            "minItems": 0
          },
          "training_parameters": {
            "$ref": "#/components/schemas/TrainingParameters"
          },
          "versions": {
            "type": "array",
            "description": "The information related to the minor versions of this model.\n",
            "items": {
              "$ref": "#/components/schemas/FoundationModelVersion"
            },
            "minItems": 0
          },
          "tech_preview": {
            "type": "boolean",
            "description": "If `true` then this model is only available in the `Tech Preview`.\n",
            "default": false
          }
        },
        "required": [
          "model_id",
          "label",
          "provider",
          "short_description",
          "input_tier",
          "output_tier",
          "source",
          "number_params"
        ]
      },
      "FoundationModelsArray": {
        "description": "The supported foundation models.\n",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FoundationModel"
        }
      },
      "FoundationModels": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationTC"
          },
          {
            "type": "object",
            "description": "A list of the foundation models that are supported in the service.\n",
            "required": [
              "limit",
              "first"
            ],
            "properties": {
              "resources": {
                "$ref": "#/components/schemas/FoundationModelsArray"
              }
            }
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ]
      },
      "FoundationModelTask": {
        "type": "object",
        "description": "A task that is covered by some of the foundation models that are supported in the service.\n",
        "properties": {
          "task_id": {
            "type": "string",
            "description": "The id of the task.\n",
            "example": "summarization"
          },
          "label": {
            "type": "string",
            "description": "The label of the task.\n",
            "example": "Summarization"
          },
          "description": {
            "type": "string",
            "description": "The description of the task.\n",
            "example": "Models that are able to summarize documents based on some criteria."
          },
          "rank": {
            "type": "integer",
            "description": "The rank of the task that is mainly for the UI.\n",
            "example": 1
          }
        },
        "required": [
          "task_id",
          "label",
          "rank"
        ]
      },
      "FoundationModelTasksArray": {
        "type": "array",
        "description": "The supported foundation model tasks.\n",
        "items": {
          "$ref": "#/components/schemas/FoundationModelTask"
        }
      },
      "FoundationModelTasks": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationTC"
          },
          {
            "type": "object",
            "description": "A list of the tasks that are covered by the foundation models that are supported in the service.\n",
            "required": [
              "limit",
              "first"
            ],
            "properties": {
              "resources": {
                "$ref": "#/components/schemas/FoundationModelTasksArray"
              }
            }
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ]
      },
      "Pagination": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationBase"
          },
          {
            "type": "object",
            "properties": {
              "total_count": {
                "description": "The total number of resources.\nComputed explicitly only when `total_count=true` query parameter is present.\nThis is in order to avoid performance penalties.\n",
                "type": "integer",
                "example": 1
              }
            }
          }
        ],
        "description": "Information for paging when querying resources.\n"
      },
      "ResourceMetaSimple": {
        "type": "object",
        "description": "Common metadata for a simple resource.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the resource.\n"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the resource was created.\n"
          }
        },
        "required": [
          "id",
          "created_at"
        ]
      },
      "ResourceCommitInfo": {
        "type": "object",
        "description": "Information related to the revision.\n",
        "properties": {
          "committed_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the revision was committed.\n"
          },
          "commit_message": {
            "type": "string",
            "description": "The message that was provided when the revision was created.\n"
          }
        },
        "required": [
          "committed_at"
        ]
      },
      "ResourceMetaBase": {
        "type": "object",
        "description": "Common metadata for a resource.\n",
        "example": {
          "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
          "rev": "2",
          "owner": "guy",
          "created_at": "2020-05-02T16:27:51Z",
          "modified_at": "2020-05-02T16:30:51Z",
          "parent_id": "dfe1cf1-252f-424b-b52d-5cdd9814600c",
          "name": "my-name",
          "description": "My resource",
          "tags": [
            "t1",
            "t2"
          ],
          "commit_info": {
            "committed_at": "2020-05-02T16:27:51Z",
            "commit_message": "Updated to TF 2.0"
          },
          "space_id": "3fc54cf1-252f-424b-b52d-5cdd9814987f"
        },
        "properties": {
          "rev": {
            "type": "string",
            "description": "The revision of the resource.\n"
          },
          "owner": {
            "description": "The user id which created this resource.\n",
            "type": "string"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the resource was last modified.\n"
          },
          "parent_id": {
            "type": "string",
            "description": "The id of the parent resource where applicable.\n"
          },
          "name": {
            "type": "string",
            "description": "The name of the resource.\n"
          },
          "description": {
            "type": "string",
            "description": "A description of the resource.\n"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "commit_info": {
            "$ref": "#/components/schemas/ResourceCommitInfo"
          }
        }
      },
      "ResourceMeta": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceMetaSimple"
          },
          {
            "$ref": "#/components/schemas/ResourceMetaBase"
          },
          {
            "type": "object",
            "description": "Common metadata for a resource where `project_id` or `space_id` must be present.\n",
            "properties": {
              "space_id": {
                "$ref": "#/components/schemas/SpaceId"
              },
              "project_id": {
                "$ref": "#/components/schemas/ProjectId"
              }
            }
          }
        ]
      },
      "Custom": {
        "description": "User defined properties specified as key-value pairs.\n",
        "type": "object",
        "additionalProperties": true,
        "example": {
          "name": "model",
          "size": 2
        }
      },
      "SimpleRel": {
        "type": "object",
        "description": "A reference to a resource.\n",
        "properties": {
          "id": {
            "description": "The id of the referenced resource.\n",
            "type": "string",
            "example": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
          }
        },
        "required": [
          "id"
        ]
      },
      "OnlineDeploymentParameters": {
        "type": "object",
        "description": "A set of key-value pairs that are used to configure the deployment.\n",
        "properties": {
          "serving_name": {
            "type": "string",
            "pattern": "^[a-z,0-9,_]+$",
            "minLength": 3,
            "maxLength": 36,
            "description": "The `serving_name` can be used in the inference URL in place of the `deployment_id`.\n",
            "example": "churn"
          }
        },
        "additionalProperties": {
          "type": "string"
        }
      },
      "OnlineDeployment": {
        "type": "object",
        "description": "Indicates that this is an online deployment. An object has to be specified but can be empty.\nThe `serving_name` can be provided in the `online.parameters`.\n",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/OnlineDeploymentParameters"
          }
        }
      },
      "HardwareSpec": {
        "description": "A hardware specification.\n",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the hardware specification.\n",
            "type": "string",
            "example": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
          },
          "rev": {
            "description": "The revision of the hardware specification.\n",
            "type": "string",
            "example": "2"
          },
          "name": {
            "description": "The name of the hardware specification.\n",
            "type": "string"
          },
          "num_nodes": {
            "type": "integer",
            "description": "The number of nodes applied to a computation.\n",
            "example": 2
          }
        }
      },
      "HardwareRequest": {
        "type": "object",
        "description": "The requested hardware for deployment.\n",
        "properties": {
          "size": {
            "description": "The size of GPU requested for the deployment.\n",
            "type": "string",
            "enum": [
              "gpu_s",
              "gpu_m",
              "gpu_l"
            ]
          },
          "num_nodes": {
            "description": "The number of nodes for the GPU requested for deployment.\n",
            "type": "number"
          }
        }
      },
      "DeploymentEntityCommon": {
        "description": "The common fields between a request and the response.\n",
        "type": "object",
        "properties": {
          "custom": {
            "$ref": "#/components/schemas/Custom"
          },
          "prompt_template": {
            "$ref": "#/components/schemas/SimpleRel"
          },
          "online": {
            "$ref": "#/components/schemas/OnlineDeployment"
          },
          "hardware_spec": {
            "$ref": "#/components/schemas/HardwareSpec"
          },
          "hardware_request": {
            "$ref": "#/components/schemas/HardwareRequest"
          }
        },
        "required": [
          "online"
        ]
      },
      "ModelRel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SimpleRel"
          },
          {
            "type": "object",
            "properties": {
              "rev": {
                "type": "string",
                "description": "The revision of the referenced resource.\n",
                "example": "2"
              },
              "resource_key": {
                "type": "string",
                "description": "The resource key for this asset if it exists.\n",
                "example": "f52fe20c-a1fe-4e54-9b78-6bf2ff61b455"
              }
            }
          }
        ]
      },
      "ModelAssetRef": {
        "type": "object",
        "description": "The field that identifies the asset.\n",
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/ModelRel"
          }
        }
      },
      "DeploymentResourceEntity": {
        "type": "object",
        "description": "The properties specific to `watsonx.ai` deployments.\n",
        "properties": {
          "base_model_id": {
            "type": "string",
            "description": "The base model that is required for this deployment if this is for a prompt template or a prompt tune for an IBM foundation model.\n",
            "example": "google/flan-t5-xl"
          }
        }
      },
      "Message": {
        "type": "object",
        "description": "Optional messages related to the resource.\n",
        "properties": {
          "level": {
            "description": "The level of the message, normally one of `debug`, `info` or `warning`.\n",
            "type": "string",
            "example": "info"
          },
          "text": {
            "description": "The message.\n",
            "type": "string",
            "example": "The deployment is successful"
          }
        }
      },
      "Inference": {
        "type": "object",
        "description": "The details of an inference API.\n",
        "properties": {
          "url": {
            "type": "string",
            "description": "The inference URL.\n"
          },
          "sse": {
            "type": "boolean",
            "description": "This is `true` if the inference API supports SSE streaming.\n",
            "default": false,
            "example": true
          },
          "uses_serving_name": {
            "type": "boolean",
            "description": "This is `true` if the inference API uses the `serving_name` that was defined in this deployment.\n",
            "default": false,
            "example": true
          }
        },
        "required": [
          "url"
        ]
      },
      "DeploymentStatus": {
        "type": "object",
        "description": "Specifies the current status, additional information about the deployment\nand any failure messages in case of deployment failures.\n",
        "properties": {
          "state": {
            "description": "Specifies the current state of the deployment.\n",
            "type": "string",
            "enum": [
              "initializing",
              "updating",
              "ready",
              "failed"
            ],
            "example": "ready"
          },
          "message": {
            "$ref": "#/components/schemas/Message"
          },
          "failure": {
            "$ref": "#/components/schemas/ApiErrorResponse"
          },
          "inference": {
            "description": "The URLs that can be used to submit inference API requests. These URLs will contain the\n`deployment_id` and the `serving_name`, if the `serving_name` was set.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Inference"
            },
            "example": [
              {
                "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation"
              },
              {
                "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/classification/text/generation",
                "uses_serving_name": true
              },
              {
                "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/2cd0bcda-581d-4f04-8028-ec2bc90cc375/text/generation_stream",
                "sse": true
              },
              {
                "url": "https://us-south.ml.cloud.ibm.com/ml/v1/deployments/classification/text/generation_stream",
                "sse": true,
                "uses_serving_name": true
              }
            ]
          }
        }
      },
      "Tooling": {
        "type": "object",
        "description": "User defined properties specified as key-value pairs, which is propagated to the deployment.\n",
        "additionalProperties": true,
        "example": {
          "name": "reference_format",
          "tag": true
        }
      },
      "DeploymentEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DeploymentEntityCommon"
          },
          {
            "$ref": "#/components/schemas/ModelAssetRef"
          },
          {
            "$ref": "#/components/schemas/DeploymentResourceEntity"
          },
          {
            "type": "object",
            "description": "The definition of the deployment.\n",
            "properties": {
              "deployed_asset_type": {
                "type": "string",
                "description": "The type of the deployed model. The possible values are the following:\n\n1. `prompt_tune` - when a prompt tuned model is deployed.\n\n2. `foundation_model` - when a prompt template is used on a\npre-deployed IBM provided model.\n\n3. `custom_foundation_model` - when a custom foundation model is deployed.\n\n4. `curated_foundation_model` - when a curated foundation model is deployed.\n"
              },
              "verbalizer": {
                "type": "string",
                "description": "The verbalizer that was used to train this model if the deployment\nhas `deployed_asset_type` of `prompt_tune`.\n"
              },
              "status": {
                "$ref": "#/components/schemas/DeploymentStatus"
              },
              "tooling": {
                "$ref": "#/components/schemas/Tooling"
              }
            }
          }
        ]
      },
      "DeploymentResource": {
        "type": "object",
        "description": "A deployment resource.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/ResourceMeta"
          },
          "entity": {
            "$ref": "#/components/schemas/DeploymentEntity"
          }
        }
      },
      "Stats": {
        "type": "object",
        "description": "The stats about deployments for a space.\n",
        "properties": {
          "space_id": {
            "type": "string",
            "description": "An `id` associated with the space.\n",
            "example": "2fc54cf1-252f-424b-b52d-5cdd98149871"
          },
          "total_count": {
            "type": "number",
            "description": "The total number of deployments created in a space including `online` and `batch`.\n"
          },
          "online_count": {
            "type": "number",
            "description": "The number of online deployments created in a space.\n"
          },
          "batch_count": {
            "type": "number",
            "description": "The number of batch deployments created in a space.\n"
          }
        }
      },
      "DeploymentSystemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SystemDetails"
          },
          {
            "type": "object",
            "description": "Optional details provided by the service about statistics of the number of deployments created. The deployments that are counted will depend on the request parameters.\n",
            "properties": {
              "stats": {
                "type": "array",
                "description": "The stats about deployments.\n",
                "items": {
                  "$ref": "#/components/schemas/Stats"
                }
              }
            }
          }
        ]
      },
      "DeploymentSystem": {
        "type": "object",
        "description": "System details including warnings.\n",
        "properties": {
          "system": {
            "$ref": "#/components/schemas/DeploymentSystemDetails"
          }
        }
      },
      "DeploymentResourceCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "type": "object",
            "description": "The deployment resources.\n",
            "properties": {
              "resources": {
                "type": "array",
                "description": "A list of deployment resources.\n",
                "items": {
                  "$ref": "#/components/schemas/DeploymentResource"
                }
              },
              "system": {
                "$ref": "#/components/schemas/DeploymentSystem"
              }
            }
          }
        ]
      },
      "EntityRequestSpaceProjectBody": {
        "type": "object",
        "description": "The properties that are part of a request that supports spaces and projects.\nEither `space_id` or `project_id` has to be provided and is mandatory.\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the resource.\n",
            "example": "my-resource",
            "minLength": 1,
            "maxLength": 250
          },
          "project_id": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "space_id": {
            "$ref": "#/components/schemas/SpaceId"
          },
          "description": {
            "type": "string",
            "description": "A description of the resource.\n",
            "example": "This is my first resource.",
            "maxLength": 1000
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        },
        "required": [
          "name"
        ]
      },
      "Rel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SimpleRel"
          },
          {
            "type": "object",
            "properties": {
              "rev": {
                "description": "The revision of the referenced resource.\n",
                "type": "string",
                "example": "2"
              }
            }
          }
        ]
      },
      "AssetRef": {
        "type": "object",
        "description": "The field that identifies the asset.\n",
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/Rel"
          }
        }
      },
      "DeploymentResourcePrototype": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRequestSpaceProjectBody"
          },
          {
            "$ref": "#/components/schemas/DeploymentEntityCommon"
          },
          {
            "$ref": "#/components/schemas/AssetRef"
          },
          {
            "$ref": "#/components/schemas/DeploymentResourceEntity"
          }
        ],
        "description": "The deployment request entity (this description is not used).\n",
        "example": {
          "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
          "name": "text_classification",
          "description": "Classification prompt tuned model deployment",
          "asset": {
            "id": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
          },
          "online": {
            "parameters": {
              "serving_name": "classification"
            }
          },
          "tags": [
            "classification"
          ]
        }
      },
      "JsonPatchOperation": {
        "type": "object",
        "description": "This model represents an individual patch operation to be performed on an object, as defined by\n[RFC 6902](https://tools.ietf.org/html/rfc6902).\n",
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to be performed.\n",
            "enum": [
              "add",
              "remove",
              "replace"
            ]
          },
          "path": {
            "type": "string",
            "description": "The pointer that identifies the field that is the target of the operation.\n"
          },
          "value": {
            "type": "string",
            "description": "The value to be used within the operation.\n"
          }
        },
        "required": [
          "op",
          "path"
        ]
      },
      "JsonPatch": {
        "description": "See [JSON PATCH RFC 6902](https://tools.ietf.org/html/rfc6902).\n",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/JsonPatchOperation"
        }
      },
      "CaiKitTextGenProperties": {
        "type": "object",
        "description": "Properties that control the model and response that are only supported in caikit.\n",
        "properties": {
          "typical_p": {
            "type": "number",
            "description": "Local typicality measures how similar the conditional probability of predicting a target\ntoken next is to the expected conditional probability of predicting a random token next,\ngiven the partial text already generated. If less than 1, the smallest set of the most\nlocally typical tokens with probabilities that add up to typical_p or higher are kept for generation.\n",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "example": 0.5
          }
        }
      },
      "TextGenParameters2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TextGenParameters"
          },
          {
            "$ref": "#/components/schemas/CaiKitTextGenProperties"
          }
        ],
        "example": {
          "temperature": 0.8,
          "top_p": 0.5,
          "top_k": 50,
          "random_seed": 111,
          "repetition_penalty": 2,
          "min_new_tokens": 30,
          "max_new_tokens": 50,
          "typical_p": 0.5
        }
      },
      "PromptVariables": {
        "type": "object",
        "description": "The prompt variables.\n",
        "additionalProperties": {
          "type": "string"
        },
        "example": {
          "doc_type": "emails",
          "entity_name": "Golden Retail",
          "country_name": "London"
        }
      },
      "PromptTemplateVariables": {
        "type": "object",
        "description": "The template properties if this request refers to a prompt template.\n",
        "properties": {
          "prompt_variables": {
            "$ref": "#/components/schemas/PromptVariables"
          }
        }
      },
      "DeploymentTextGenProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TextGenParameters2"
          },
          {
            "$ref": "#/components/schemas/PromptTemplateVariables"
          }
        ]
      },
      "DeploymentTextGen": {
        "type": "object",
        "properties": {
          "input": {
            "type": "string",
            "description": "The prompt to generate completions.\nNote: The method tokenizes the input internally.\nIt is recommended not to leave any trailing spaces.\n\n\nThis field is ignored if there is a prompt template.\n"
          },
          "parameters": {
            "$ref": "#/components/schemas/DeploymentTextGenProperties"
          },
          "moderations": {
            "$ref": "#/components/schemas/Moderations"
          }
        }
      },
      "DeploymentTextGenRequest": {
        "description": "A prompt to be used to infer the next tokens.\n",
        "allOf": [
          {
            "$ref": "#/components/schemas/DeploymentTextGen"
          }
        ],
        "example": {
          "input": "Generate a marketing email advertising a new sale with the following characteristics:\n\nCompany: Swimwear Unlimited\n\nOffer Keywords: {Select customers only, mid-summer fun, swimwear sale}\n\nOffer End Date: July 15\n\nAdvertisement Tone: Exciting!\n\nInclude no URLs.\n\nInclude no telephone numbers.\n",
          "parameters": {
            "decoding_method": "sample",
            "temperature": 0.8,
            "max_new_tokens": 200
          }
        }
      },
      "TextChatMessage": {
        "type": "object",
        "description": "The base definition of a text chat message.\n",
        "discriminator": {
          "propertyName": "role"
        },
        "properties": {
          "role": {
            "type": "string",
            "description": "The role of the messages author.\n",
            "enum": [
              "assistant",
              "system",
              "tool",
              "user"
            ]
          }
        },
        "required": [
          "role"
        ]
      },
      "TextChatMessageFieldName": {
        "type": "string",
        "description": "An optional name for the participant.\nProvides the model information to differentiate between participants of the same role.\n"
      },
      "TextChatFunctionCall": {
        "type": "object",
        "description": "The function call.\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the function.\n"
          },
          "arguments": {
            "type": "string",
            "description": "The arguments to call the function with,\nas generated by the model in JSON format.\n\nNote that the model does not always generate valid JSON,\nand may hallucinate parameters not defined by your function schema.\nValidate the arguments in your code before calling your function.\n"
          }
        },
        "required": [
          "name",
          "arguments"
        ]
      },
      "TextChatToolCall": {
        "type": "object",
        "description": "The tool call.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the tool call.\n"
          },
          "type": {
            "type": "string",
            "description": "The type of the tool. Currently, only `function` is supported.\n",
            "enum": [
              "function"
            ]
          },
          "function": {
            "$ref": "#/components/schemas/TextChatFunctionCall"
          }
        },
        "required": [
          "id",
          "type",
          "function"
        ]
      },
      "TextChatMessageAssistant": {
        "description": "The definition of an assistant message.\n",
        "allOf": [
          {
            "$ref": "#/components/schemas/TextChatMessage"
          },
          {
            "type": "object",
            "description": "The definition of an assistant message.\n",
            "properties": {
              "content": {
                "type": "string",
                "description": "The contents of the assistant message.\nRequired unless `tool_calls` is specified.\n"
              },
              "name": {
                "$ref": "#/components/schemas/TextChatMessageFieldName"
              },
              "refusal": {
                "type": "string",
                "description": "The refusal message by the assistant.\n",
                "nullable": true
              },
              "tool_calls": {
                "type": "array",
                "description": "The tool calls generated by the model, such as function calls.\n",
                "items": {
                  "$ref": "#/components/schemas/TextChatToolCall"
                },
                "minItems": 1,
                "maxItems": 100
              }
            }
          }
        ]
      },
      "TextChatMessageControl": {
        "description": "The definition of a control message.\n",
        "allOf": [
          {
            "$ref": "#/components/schemas/TextChatMessage"
          },
          {
            "type": "object",
            "description": "The definition of a control message.\n",
            "properties": {
              "content": {
                "type": "string",
                "description": "The contents of the control message. Depending on the model, an example would be \"thinking\" for Granite reasoning models.\n"
              },
              "name": {
                "$ref": "#/components/schemas/TextChatMessageFieldName"
              }
            },
            "required": [
              "content"
            ]
          }
        ]
      },
      "TextChatMessageTool": {
        "description": "The definition of a tool message.\n",
        "allOf": [
          {
            "$ref": "#/components/schemas/TextChatMessage"
          },
          {
            "type": "object",
            "description": "The definition of a tool message.\n",
            "properties": {
              "content": {
                "type": "string",
                "description": "The contents of the tool message.\n"
              },
              "tool_call_id": {
                "type": "string",
                "description": "Tool call that this message is responding to.\n"
              }
            },
            "required": [
              "content",
              "tool_call_id"
            ]
          }
        ]
      },
      "TextChatUserContent": {
        "type": "object",
        "description": "The base definition of a text chat user content.\n",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of the user content. You can get the list of models supporting text, image, audio, video by using\n[Foundation Model Specs](#list-foundation-model-specs) with\n`filters=function_text_chat`, `filters=function_image_chat`, `filters=function_audio_chat`,\n`filters=function_video_chat` respectively.\n",
            "enum": [
              "text",
              "image_url",
              "video_url"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "TextChatUserTextContent": {
        "description": "The definition of a user text content.\n",
        "allOf": [
          {
            "$ref": "#/components/schemas/TextChatUserContent"
          },
          {
            "type": "object",
            "description": "The definition of a user text content.\n",
            "properties": {
              "text": {
                "type": "string",
                "description": "The text content.\n"
              }
            },
            "required": [
              "text"
            ]
          }
        ]
      },
      "TextChatUserImageURL": {
        "type": "object",
        "description": "The definition of a user image content.\n",
        "properties": {
          "url": {
            "type": "string",
            "description": "The url of the image. This must be a base64 encoded image.\n",
            "example": "data:image/jpeg;base64,{base64_image}"
          },
          "detail": {
            "type": "string",
            "description": "This parameter controls how the model processes the image and generates its textual understanding.\nThe `auto` setting which will look at the image input\nsize and decide if it should use the `low` or `high` setting.\n",
            "enum": [
              "low",
              "high",
              "auto"
            ],
            "default": "auto"
          }
        },
        "required": [
          "url"
        ]
      },
      "TextChatUserImageURLContent": {
        "description": "The definition of a user image content.\n",
        "allOf": [
          {
            "$ref": "#/components/schemas/TextChatUserContent"
          },
          {
            "type": "object",
            "description": "The definition of a user image content.\n",
            "properties": {
              "image_url": {
                "$ref": "#/components/schemas/TextChatUserImageURL"
              }
            },
            "required": [
              "image_url"
            ]
          }
        ]
      },
      "TextChatUserVideoURL": {
        "type": "object",
        "description": "The definition of a user video content.\n",
        "properties": {
          "url": {
            "type": "string",
            "description": "This must be a base64 encoded video.\n",
            "example": "data:video/mp4;base64,{base64_video}"
          }
        },
        "required": [
          "url"
        ]
      },
      "TextChatUserVideoURLContent": {
        "description": "The definition of a user video content.\n",
        "allOf": [
          {
            "$ref": "#/components/schemas/TextChatUserContent"
          },
          {
            "type": "object",
            "description": "The definition of a user video content.\n",
            "properties": {
              "video_url": {
                "$ref": "#/components/schemas/TextChatUserVideoURL"
              }
            },
            "required": [
              "video_url"
            ]
          }
        ]
      },
      "TextChatUserContents": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/TextChatUserTextContent"
          },
          {
            "$ref": "#/components/schemas/TextChatUserImageURLContent"
          },
          {
            "$ref": "#/components/schemas/TextChatUserVideoURLContent"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "text": "#/components/schemas/TextChatUserTextContent",
            "image_url": "#/components/schemas/TextChatUserImageURLContent",
            "video_url": "#/components/schemas/TextChatUserVideoURLContent"
          }
        }
      },
      "TextChatMessageUser": {
        "description": "The definition of a user message.\n",
        "allOf": [
          {
            "$ref": "#/components/schemas/TextChatMessage"
          },
          {
            "type": "object",
            "description": "The definition of a user message.\n",
            "properties": {
              "content": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TextChatUserContents"
                },
                "minItems": 1,
                "maxItems": 100
              },
              "name": {
                "$ref": "#/components/schemas/TextChatMessageFieldName"
              }
            },
            "required": [
              "content"
            ]
          }
        ]
      },
      "DeploymentTextChatMessages": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/TextChatMessageAssistant"
          },
          {
            "$ref": "#/components/schemas/TextChatMessageControl"
          },
          {
            "$ref": "#/components/schemas/TextChatMessageTool"
          },
          {
            "$ref": "#/components/schemas/TextChatMessageUser"
          }
        ],
        "discriminator": {
          "propertyName": "role",
          "mapping": {
            "assistant": "#/components/schemas/TextChatMessageAssistant",
            "control": "#/components/schemas/TextChatMessageControl",
            "tool": "#/components/schemas/TextChatMessageTool",
            "user": "#/components/schemas/TextChatMessageUser"
          }
        }
      },
      "TextChatPropertyTool": {
        "type": "string",
        "description": "The tool type.\n",
        "enum": [
          "function"
        ]
      },
      "TextChatParameterFunction": {
        "type": "object",
        "description": "The parameters specific to chat.\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the function.\n",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[a-zA-Z]+[a-zA-Z0-9-_]*$"
          },
          "description": {
            "type": "string",
            "description": "A description of what the function does,\nused by the model to choose when and how to call the function.\n"
          },
          "parameters": {
            "type": "object",
            "description": "The parameters the functions accepts, described as a JSON Schema object.\nSee the [JSON Schema reference](https://json-schema.org/learn/getting-started-step-by-step)\nfor documentation about the format.\n\nOmitting parameters defines a function with an empty parameter list.\n"
          }
        },
        "required": [
          "name"
        ]
      },
      "TextChatParameterTools": {
        "type": "object",
        "description": "The chat tool parameters.\n",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TextChatPropertyTool"
          },
          "function": {
            "$ref": "#/components/schemas/TextChatParameterFunction"
          }
        },
        "required": [
          "type"
        ]
      },
      "TextChatToolChoiceOption": {
        "type": "string",
        "description": "Using `auto` means the model can pick between generating a message or calling one or more tools.\nSpecify either `tool_choice_option` to allow the model to pick or `tool_choice` to force the model to call a tool.\n"
      },
      "TextChatToolFunction": {
        "type": "object",
        "description": "The named function.\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the function.\n"
          }
        },
        "required": [
          "name"
        ]
      },
      "TextChatToolChoiceTool": {
        "type": "object",
        "description": "Specifying a particular tool via `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to call that tool.\nSpecify either `tool_choice_option` to allow the model to pick or `tool_choice` to force the model to call a tool.\n",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TextChatPropertyTool"
          },
          "function": {
            "$ref": "#/components/schemas/TextChatToolFunction"
          }
        },
        "required": [
          "type",
          "function"
        ]
      },
      "DeploymentTextChat": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "description": "The messages for this chat session. You cannot specify `system` `role` in the messages.\nDepending on the model, the `content` of `system` `role` may be from `system_prompt` of\nthe prompt template, and will be automatically inserted into `messages`.\n\nAs an example, depending on the model, if `system_prompt` of a prompt template is \"You are Granite Chat, an AI language model developed by IBM. You are a cautious assistant. You carefully follow instructions.\nYou are helpful and harmless and you follow ethical guidelines and promote positive behavior.\",\na message with `system` `role` having `content` the same as `system_prompt` is inserted.\n",
            "items": {
              "$ref": "#/components/schemas/DeploymentTextChatMessages"
            },
            "minItems": 1,
            "maxItems": 1000
          },
          "tools": {
            "type": "array",
            "description": "Tool functions that can be called with the response.\n",
            "items": {
              "$ref": "#/components/schemas/TextChatParameterTools"
            },
            "minItems": 1,
            "maxItems": 128
          },
          "tool_choice_option": {
            "$ref": "#/components/schemas/TextChatToolChoiceOption"
          },
          "tool_choice": {
            "$ref": "#/components/schemas/TextChatToolChoiceTool"
          },
          "context": {
            "type": "string",
            "description": "If specified, `context` will be inserted into `messages`. Depending on the model, `context` may be inserted into the `content` with `system` `role`; or\ninto the `content` of the last message of `user` `role`.\n\n\nIn the example, `context` \"Today is Wednesday\" is inserted as such\n`content` of `user` becomes \"Today is Wednesday. Who are you and which day is tomorrow?\"\n"
          }
        },
        "required": [
          "messages"
        ]
      },
      "DeploymentTextChatRequest": {
        "description": "A prompt to be used to infer the next tokens.\n",
        "allOf": [
          {
            "$ref": "#/components/schemas/DeploymentTextChat"
          }
        ],
        "example": {
          "input": "Generate a marketing email advertising a new sale with the following characteristics:\n\nCompany: Swimwear Unlimited\n\nOffer Keywords: {Select customers only, mid-summer fun, swimwear sale}\n\nOffer End Date: July 15\n\nAdvertisement Tone: Exciting!\n\nInclude no URLs.\n\nInclude no telephone numbers.\n",
          "parameters": {
            "decoding_method": "sample",
            "temperature": 0.8,
            "max_new_tokens": 200
          }
        }
      },
      "TextChatUsage": {
        "type": "object",
        "description": "Usage statistics for the completion request.\n",
        "properties": {
          "completion_tokens": {
            "type": "integer",
            "description": "Number of tokens in the generated completion.\n"
          },
          "prompt_tokens": {
            "type": "integer",
            "description": "Number of tokens in the prompt.\n"
          },
          "total_tokens": {
            "type": "integer",
            "description": "Total number of tokens used in the request (prompt + completion).\n"
          }
        }
      },
      "TextChatResponseFieldsShared": {
        "type": "object",
        "description": "A chat completion.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the chat completion.\n"
          },
          "model_id": {
            "type": "string",
            "description": "The model used for the chat completion.\n",
            "example": "google/flan-ul2"
          },
          "model_version": {
            "$ref": "#/components/schemas/ModelVersion"
          },
          "created": {
            "type": "integer",
            "description": "The Unix timestamp (in seconds) of when the chat completion was created.\n"
          },
          "created_at": {
            "$ref": "#/components/schemas/CreatedAt"
          },
          "usage": {
            "$ref": "#/components/schemas/TextChatUsage"
          }
        },
        "required": [
          "id",
          "model_id",
          "created"
        ]
      },
      "TextChatResultMessage": {
        "type": "object",
        "description": "A message result.\n",
        "properties": {
          "role": {
            "type": "string",
            "description": "The role of the author of this message.\n"
          },
          "content": {
            "type": "string",
            "description": "The contents of the message.\n",
            "nullable": true
          },
          "refusal": {
            "type": "string",
            "description": "The refusal message generated by the model.\n",
            "nullable": true
          },
          "tool_calls": {
            "type": "array",
            "description": "The tool calls generated by the model, such as function calls.\n",
            "items": {
              "$ref": "#/components/schemas/TextChatToolCall"
            },
            "minItems": 1
          }
        },
        "required": [
          "role"
        ]
      },
      "TextChatFinishReason": {
        "type": "string",
        "nullable": true,
        "description": "The reason why the call stopped, can be one of:\n- `stop` - The model hit a natural stop point or a provided stop sequence.\n- `length` - The maximum number of tokens specified in the request was reached.\n- `tool_calls` - The model called a tool.\n- `time_limit`` - Time limit reached.\n- `cancelled`` - Request canceled by the client.\n- `error`` - Error encountered.\n- `null` - API response still in progress or incomplete.\n",
        "enum": [
          "stop",
          "length",
          "tool_calls",
          "time_limit",
          "cancelled",
          "error"
        ]
      },
      "TextChatResultChoice": {
        "allOf": [
          {
            "type": "object",
            "description": "A tool related result.\n",
            "properties": {
              "index": {
                "type": "integer",
                "description": "The index of this result.\n"
              },
              "message": {
                "$ref": "#/components/schemas/TextChatResultMessage"
              },
              "finish_reason": {
                "$ref": "#/components/schemas/TextChatFinishReason"
              }
            }
          }
        ]
      },
      "TextChatResponseFields": {
        "type": "object",
        "description": "A chat completion choices.\n",
        "properties": {
          "choices": {
            "type": "array",
            "description": "A list of chat completion choices. Can be more than one if `n` is greater than 1.\n",
            "items": {
              "$ref": "#/components/schemas/TextChatResultChoice"
            },
            "minItems": 1
          }
        },
        "required": [
          "choices"
        ]
      },
      "TextChatResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TextChatResponseFieldsShared"
          },
          {
            "$ref": "#/components/schemas/TextChatResponseFields"
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ]
      },
      "TextChatToolCallStream": {
        "type": "object",
        "description": "The tool call.\n",
        "properties": {
          "index": {
            "type": "number",
            "description": "The index of the tool call.\n"
          },
          "id": {
            "type": "string",
            "description": "The ID of the tool call.\n"
          },
          "type": {
            "type": "string",
            "description": "The type of the tool. Currently, only `function` is supported.\n",
            "enum": [
              "function"
            ]
          },
          "function": {
            "$ref": "#/components/schemas/TextChatFunctionCall"
          }
        },
        "required": [
          "index",
          "function"
        ]
      },
      "TextChatResultDelta": {
        "type": "object",
        "description": "A message result.\n",
        "properties": {
          "role": {
            "type": "string",
            "description": "The role of the author of this message.\n"
          },
          "content": {
            "type": "string",
            "description": "The contents of the message.\n",
            "nullable": true
          },
          "refusal": {
            "type": "string",
            "description": "The refusal message generated by the model.\n",
            "nullable": true
          },
          "tool_calls": {
            "type": "array",
            "description": "The tool calls generated by the model, such as function calls.\n",
            "items": {
              "$ref": "#/components/schemas/TextChatToolCallStream"
            },
            "minItems": 1
          }
        },
        "required": [
          "role"
        ]
      },
      "TextChatResultChoiceStream": {
        "allOf": [
          {
            "type": "object",
            "description": "A tool related result.\n",
            "properties": {
              "index": {
                "type": "integer",
                "description": "The index of this result.\n"
              },
              "delta": {
                "$ref": "#/components/schemas/TextChatResultDelta"
              },
              "finish_reason": {
                "$ref": "#/components/schemas/TextChatFinishReason"
              }
            }
          }
        ]
      },
      "TextChatResponseFieldsStream": {
        "type": "object",
        "description": "A chat completion choices.\n",
        "properties": {
          "choices": {
            "type": "array",
            "description": "A list of chat completion choices. Can be more than one if `n` is greater than 1.\n",
            "items": {
              "$ref": "#/components/schemas/TextChatResultChoiceStream"
            },
            "minItems": 1
          }
        },
        "required": [
          "choices"
        ]
      },
      "TextChatStreamItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TextChatResponseFieldsShared"
          },
          {
            "$ref": "#/components/schemas/TextChatResponseFieldsStream"
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ]
      },
      "TextChatStreamResponse": {
        "type": "array",
        "description": "A set of server sent events, each event contains a response for one or more tokens. The results will be an array of events of the form `data: {<json event>}` where the schema of the individual `json event` is described below.\n",
        "items": {
          "$ref": "#/components/schemas/TextChatStreamItem"
        }
      },
      "TSCommonForecastParameters": {
        "type": "object",
        "description": "The parameters for the forecast request.\n",
        "properties": {
          "prediction_length": {
            "type": "integer",
            "nullable": true,
            "description": "The prediction length for the forecast. The service will return this\nmany periods beyond the last timestamp in the inference data\npayload. If specified, `prediction_length` must be an integer >=1\nand no more than the model default prediction length. When omitted\nthe model default prediction_length will be used.\n"
          }
        }
      },
      "DeploymentTSForecastParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TSCommonForecastParameters"
          },
          {
            "type": "object",
            "properties": {
              "inference_batch_size": {
                "type": "integer",
                "nullable": true,
                "description": "The batch size used during inference.\nWhen multiple time series are present, the inference will be\nconducted in batches. If not specified, the model default batch\nsize will be used.\n"
              }
            }
          }
        ]
      },
      "TSForecastInputSchema": {
        "type": "object",
        "description": "Contains metadata about your timeseries data input.\n",
        "properties": {
          "timestamp_column": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^\\S.*\\S$|^\\S$",
            "description": "A valid column in the data that should be treated as the timestamp.\nAlthough not absolutely necessary, if using calendar dates  (simple\ninteger time offsets are also allowed), users should consider using\na format such as ISO 8601 that includes a UTC offset (e.g.,\n'2024-10-18T01:09:21.454746+00:00'). This will avoid potential\nissues such as duplicate dates appearing due to daylight savings\nchange overs. There are many date formats in existence and inferring\nthe correct one can be a challenge so please do consider adhering to\nISO 8601.\n"
          },
          "id_columns": {
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 100,
              "pattern": "^\\S.*\\S$|^\\S$"
            },
            "type": "array",
            "minItems": 0,
            "maxItems": 10,
            "description": "Columns that define a unique key for timeseries. This is similar to\na compound primary key in a database table.\n"
          },
          "freq": {
            "type": "string",
            "minLength": 0,
            "maxLength": 100,
            "pattern": "^\\d*\\.?\\d*(B|D|W|M|Q|Y|h|min|s|ms|us|ns)?$",
            "description": "A frequency indicator for the given timestamp_column.\nSee https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#period-aliases\nfor a description of the allowed values. If not provided, we will attempt to\ninfer it from the data.\n",
            "example": "1h"
          },
          "target_columns": {
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 100,
              "pattern": "^\\S.*\\S$|^\\S$"
            },
            "type": "array",
            "minItems": 0,
            "maxItems": 500,
            "description": "An array of column headings which constitute the target variables in\nthe data. These are the data that will be forecasted.\n"
          }
        },
        "required": [
          "timestamp_column"
        ]
      },
      "DeploymentTSForecastResource": {
        "type": "object",
        "description": "Input necessary for performing inference. These inputs\nidentify things like which model to use, the data payload\nyou are passing to the model, and other parameters which affect\nthe behavior of the inference operation.\n",
        "example": {
          "schema": {
            "timestamp_column": "date",
            "id_columns": [
              "ID1"
            ]
          },
          "data": {
            "date": [
              "2020-01-01T00:00:00",
              "2020-01-01T01:00:00",
              "2020-01-01T02:00:00"
            ],
            "ID1": [
              "D1",
              "D1",
              "D1"
            ],
            "TARGET1": [
              1.46,
              2.34,
              4.55
            ]
          }
        },
        "properties": {
          "data": {
            "type": "object",
            "description": "A payload of data matching `schema`.\nWe assume the following about your data:\n  * All timeseries are of equal length and are uniform in nature (the time difference\nbetween two successive rows is constant). This implies that there are no missing rows of data;\n  * The data meet the minimum model-dependent historical context length which\n  can be any number of rows per timeseries;\n\nNote that the example payloads shown are for illustration purposes only. An actual payload\nwould necessary be much larger to meet minimum model-specific context lengths.\n",
            "additionalProperties": {}
          },
          "parameters": {
            "$ref": "#/components/schemas/DeploymentTSForecastParameters"
          },
          "schema": {
            "$ref": "#/components/schemas/TSForecastInputSchema"
          },
          "future_data": {
            "type": "object",
            "description": "Exogenous or supporting features that extend into the forecasting\nhorizon (e.g., a weather forecast or calendar of special promotions)\nwhich are known in advance. `future_data` would be in the same\nformat as `data` except  that all timestamps would be in the\nforecast horizon and it would not include previously specified\n`target_columns`.\n",
            "additionalProperties": {}
          }
        },
        "required": [
          "data",
          "schema"
        ]
      },
      "TSForecastResults": {
        "type": "object",
        "description": "Prediction results.\n",
        "additionalProperties": {}
      },
      "TSForecastResponse": {
        "type": "object",
        "description": "The time series forecast response.\n",
        "properties": {
          "model_id": {
            "type": "string",
            "description": "The model used to generate the forecast.\n",
            "example": "ibm/ttm-1024-96-r2"
          },
          "created_at": {
            "$ref": "#/components/schemas/CreatedAt"
          },
          "results": {
            "type": "array",
            "description": "The list of prediction results. There will be a forecast for each time series in the input data.\nThe `prediction_length` field in the request specifies the number of predictions in the results.\nThe actual number of rows in the results will be equal to the `prediction length` multiplied by the number of unique ids\nin `id_columns`.\nThe `timestamp_column` field in the request indicates the name of the timestamp column in the results.\n",
            "items": {
              "$ref": "#/components/schemas/TSForecastResults"
            },
            "example": [
              {
                "date": [
                  "2020-01-01T03:00:00",
                  "2020-01-01T04:00:00",
                  "2020-01-01T05:00:00"
                ],
                "ID1": [
                  "D1",
                  "D1",
                  "D1"
                ],
                "TARGET1": [
                  1.86,
                  3.78,
                  6.78
                ]
              }
            ]
          },
          "input_data_points": {
            "type": "integer",
            "description": "The number of input data points (number of rows in `data` * number of input columns in `data`).\n",
            "example": 512
          },
          "output_data_points": {
            "type": "integer",
            "description": "The number of forecasted data points (`prediction_length` * number of `target_columns` * number of unique ids in `id_columns`).\n",
            "example": 1024
          }
        }
      },
      "BaseModel": {
        "type": "object",
        "description": "The model id of the base model for this job.\n",
        "properties": {
          "model_id": {
            "type": "string",
            "description": "The model id of the base model.\n",
            "example": "google/flan-t5-xl"
          }
        }
      },
      "PromptTuning": {
        "type": "object",
        "description": "Properties to control the prompt tuning.\n",
        "example": {
          "base_model": {
            "model_id": "google/flan-t5-xl"
          },
          "task_id": "summarization",
          "tuning_type": "prompt_tuning",
          "num_epochs": 30,
          "learning_rate": 0.4,
          "accumulate_steps": 3,
          "batch_size": 10,
          "max_input_tokens": 100,
          "max_output_tokens": 100
        },
        "required": [
          "task_id"
        ],
        "properties": {
          "base_model": {
            "$ref": "#/components/schemas/BaseModel"
          },
          "task_id": {
            "type": "string",
            "description": "The task that is targeted for this model.\n",
            "example": "summarization"
          },
          "tuning_type": {
            "type": "string",
            "description": "Type of Peft (Parameter-Efficient Fine-Tuning) config to build.\n",
            "example": "prompt_tuning",
            "default": "prompt_tuning",
            "enum": [
              "prompt_tuning"
            ]
          },
          "num_epochs": {
            "type": "integer",
            "description": "Number of epochs to tune the prompt vectors, this affects the quality of the trained model.\n",
            "default": 20,
            "example": 30,
            "minimum": 1,
            "maximum": 50
          },
          "learning_rate": {
            "type": "number",
            "description": "Learning rate to be used while tuning prompt vectors.\n",
            "minimum": 0.01,
            "maximum": 0.5,
            "default": 0.3,
            "example": 0.4
          },
          "accumulate_steps": {
            "type": "integer",
            "description": "Number of steps to be used for gradient accumulation.\nGradient accumulation refers to a method of collecting gradient for configured number of\nsteps instead of updating the model variables at every step and then applying the update\nto model variables. This can be used as a tool to overcome smaller batch size limitation.\nOften also referred in conjunction with \"effective batch size\".\n",
            "minimum": 1,
            "maximum": 128,
            "default": 16,
            "example": 32
          },
          "verbalizer": {
            "type": "string",
            "description": "Verbalizer template to be used for formatting data at train and inference time.\nThis template may use brackets to indicate where fields from the data model\nmust be rendered.\n",
            "default": "Input: {{input}} Output:",
            "example": "rte { 0 : entailment, 1 : not entailment } {{input}}"
          },
          "batch_size": {
            "type": "integer",
            "description": "The batch size is a number of samples processed before the model is updated.\n",
            "minimum": 1,
            "maximum": 16,
            "default": 16,
            "example": 10
          },
          "max_input_tokens": {
            "type": "integer",
            "description": "Maximum length of input tokens being considered.\n",
            "minimum": 1,
            "maximum": 256,
            "default": 256,
            "example": 100
          },
          "max_output_tokens": {
            "type": "integer",
            "description": "Maximum length of output tokens being predicted.\n",
            "minimum": 1,
            "maximum": 128,
            "default": 128,
            "example": 100
          },
          "init_method": {
            "type": "string",
            "description": "The `text` method requires `init_text` to be set.\n",
            "enum": [
              "random",
              "text"
            ],
            "example": "text",
            "default": "random"
          },
          "init_text": {
            "type": "string",
            "description": "Initialization text to be used if `init_method` is\nset to `text` otherwise this will be ignored.\n"
          }
        }
      },
      "DataConnection": {
        "type": "object",
        "description": "Contains a set of fields specific to each connection.\nSee here for [details about specifying connections](#datareferences).\n"
      },
      "DataLocation": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "Contains a set of fields that describe the location of the data with respect to the `connection`.\n"
      },
      "DataSchema": {
        "title": "data_schema",
        "type": "object",
        "description": "The schema of the expected data, see\n[datarecord-metadata-v2-schema](https://raw.githubusercontent.com/elyra-ai/pipeline-schemas/master/common-pipeline/datarecord-metadata/datarecord-metadata-v2-schema.json)\nfor the schema definition.\n",
        "properties": {
          "id": {
            "description": "An id to identify a schema.\n",
            "type": "string",
            "example": "t1"
          },
          "name": {
            "description": "A name for the schema.\n",
            "type": "string",
            "example": "Tasks"
          },
          "fields": {
            "type": "array",
            "description": "The fields that describe the data schema.\n",
            "items": {
              "type": "object",
              "description": "A description of a field in the data schema.\n"
            },
            "example": [
              {
                "name": "duration",
                "type": "number"
              }
            ]
          },
          "type": {
            "description": "The type of the schema, can be ignored or set to `struct` or `DataFrame`.\n",
            "type": "string",
            "example": "struct"
          }
        },
        "required": [
          "id",
          "fields"
        ]
      },
      "DataConnectionReference": {
        "title": "data_connection",
        "type": "object",
        "description": "A reference to data with an optional data schema.\nIf necessary, it is possible to provide a data connection that contains\njust the data schema.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "Optional item identification inside a collection.\n",
            "example": "8d3682dd-2858-43c9-bfd7-12a79abcfb0c"
          },
          "type": {
            "description": "The data source type like `connection_asset` or `data_asset`.\nIf the data connection contains just a schema then this field is not required.\n",
            "type": "string",
            "enum": [
              "connection_asset",
              "data_asset",
              "container",
              "url"
            ],
            "example": "connection_asset"
          },
          "connection": {
            "$ref": "#/components/schemas/DataConnection"
          },
          "location": {
            "$ref": "#/components/schemas/DataLocation"
          },
          "schema": {
            "$ref": "#/components/schemas/DataSchema"
          }
        },
        "required": [
          "type"
        ]
      },
      "TrainingResourceEntityCommon": {
        "type": "object",
        "properties": {
          "prompt_tuning": {
            "$ref": "#/components/schemas/PromptTuning"
          },
          "training_data_references": {
            "type": "array",
            "description": "Training datasets.\n",
            "items": {
              "$ref": "#/components/schemas/DataConnectionReference"
            },
            "example": [
              {
                "id": "tune1_data.json",
                "location": {
                  "path": "tune1_data.json"
                },
                "type": "container"
              }
            ]
          },
          "custom": {
            "$ref": "#/components/schemas/Custom"
          },
          "auto_update_model": {
            "type": "boolean",
            "description": "If set to `true` then the result of the training, if successful, will be\nuploaded to the repository as a model.\n",
            "default": false
          }
        }
      },
      "ObjectLocation": {
        "type": "object",
        "description": "A reference to data.\n",
        "properties": {
          "type": {
            "description": "The data source type.\n\n\nThe possible types will depend\non the API and platform being used.\n",
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/DataLocation"
          },
          "connection": {
            "$ref": "#/components/schemas/DataConnection"
          },
          "id": {
            "type": "string",
            "description": "Item identification inside a collection, if appropriate.\n"
          }
        },
        "required": [
          "type",
          "location"
        ]
      },
      "ResultsReferenceOutput": {
        "type": "object",
        "properties": {
          "results_reference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectLocation"
              }
            ],
            "description": "The training results. Normally this is specified as `type=container` which means that it is stored in the space or project. Note that the training will add some fields that point to the training status, the model request and the assets.\n\nThe `model_request_path` is the request body that should be used when creating the trained model in the API, if this model is to be deployed. If `auto_update_model` was set to `true` then this file is not needed.\n",
            "example": {
              "location": {
                "path": "results",
                "training": "results/360c40f7-ac0c-43ca-a95f-1a5421f93b82",
                "training_status": "results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/training-status.json",
                "assets_path": "results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets",
                "model_request_path": "results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets/c29e7544-dfd0-4427-bc66-20fa6023e2e0/resources/wml_model/request.json"
              },
              "type": "container"
            }
          }
        },
        "required": [
          "results_reference"
        ]
      },
      "TrainingMLMetrics": {
        "type": "object",
        "additionalProperties": {
          "type": "number"
        },
        "description": "The metrics.\n",
        "example": {
          "loss": 4.49988
        }
      },
      "FineTuningTrainingMetrics": {
        "type": "object",
        "description": "The metrics that can be returned by a fine tuning job created with InstructLab.\n",
        "additionalProperties": true
      },
      "PromptTuningMetricsContext": {
        "type": "object",
        "description": "This field will not returned by fine tuning jobs created with InstructLab.\n\nThe context for prompt tuning metrics.\n",
        "properties": {
          "metrics_location": {
            "type": "string",
            "description": "The location where the prompt tuning metrics are stored.\n"
          }
        }
      },
      "MetricsContext": {
        "description": "Provides extra information for this training stage in the context of auto-ml.\n",
        "type": "object",
        "properties": {
          "deployment_id": {
            "type": "string",
            "description": "This field will not returned by fine tuning jobs created with InstructLab.\n\nThe deployment that created the metrics.\n"
          },
          "prompt_tuning": {
            "$ref": "#/components/schemas/PromptTuningMetricsContext"
          },
          "locations": {
            "type": "object",
            "description": "The locations of the fine tuning jobs information when it is created with InstructLab.",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "TrainingMetric": {
        "type": "object",
        "description": "A metric.\n",
        "properties": {
          "timestamp": {
            "type": "string",
            "example": "2023-09-22T02:52:03.324Z",
            "format": "date-time",
            "description": "A timestamp for the metrics.\n"
          },
          "iteration": {
            "type": "integer",
            "example": 0,
            "description": "The iteration number.\n"
          },
          "ml_metrics": {
            "$ref": "#/components/schemas/TrainingMLMetrics"
          },
          "fine_tuning_metrics": {
            "$ref": "#/components/schemas/FineTuningTrainingMetrics"
          },
          "context": {
            "$ref": "#/components/schemas/MetricsContext"
          }
        }
      },
      "TrainingMetrics": {
        "type": "array",
        "description": "Metrics that can be returned by an operation.\n",
        "items": {
          "$ref": "#/components/schemas/TrainingMetric"
        },
        "example": [
          {
            "iteration": 0,
            "ml_metrics": {
              "loss": 4.49988
            },
            "timestamp": "2023-09-22T02:52:03.324Z"
          },
          {
            "iteration": 1,
            "ml_metrics": {
              "loss": 3.86884
            },
            "timestamp": "2023-09-22T02:52:03.689Z"
          },
          {
            "iteration": 2,
            "ml_metrics": {
              "loss": 4.05115
            },
            "timestamp": "2023-09-22T02:52:04.053Z"
          }
        ]
      },
      "TrainingStatus": {
        "type": "object",
        "description": "Status of the training job.\n",
        "properties": {
          "running_at": {
            "type": "string",
            "description": "Date and Time in which current training state has started.",
            "example": "2017-01-30T10:11:12Z",
            "format": "date-time"
          },
          "completed_at": {
            "type": "string",
            "description": "Date and Time in which training had completed.",
            "example": "2017-01-30T10:11:12Z",
            "format": "date-time"
          },
          "state": {
            "type": "string",
            "description": "Current state of training.",
            "enum": [
              "queued",
              "pending",
              "running",
              "storing",
              "completed",
              "failed",
              "canceled"
            ]
          },
          "message": {
            "$ref": "#/components/schemas/Message"
          },
          "metrics": {
            "$ref": "#/components/schemas/TrainingMetrics"
          },
          "failure": {
            "$ref": "#/components/schemas/ApiErrorResponse"
          }
        },
        "required": [
          "state"
        ],
        "example": {
          "state": "completed",
          "running_at": "2023-08-04T13:22:48.000Z",
          "completed_at": "2023-08-04T13:22:55.289Z",
          "message": {
            "level": "info",
            "text": "Training job 360c40f7-ac0c-43ca-a95f-1a5421f93b82 completed"
          }
        }
      },
      "TrainingStatusOutput": {
        "type": "object",
        "description": "Status of the training job.\n",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/TrainingStatus"
          }
        },
        "required": [
          "status"
        ]
      },
      "TrainingResourceModelIdOutput": {
        "type": "object",
        "properties": {
          "model_id": {
            "type": "string",
            "description": "This may be set to the model that was created from the results of this training.\nUsing the option `auto_update_model` will cause this field to get set.\n"
          }
        }
      },
      "TrainingResourceEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TrainingResourceEntityCommon"
          },
          {
            "$ref": "#/components/schemas/ResultsReferenceOutput"
          },
          {
            "$ref": "#/components/schemas/TrainingStatusOutput"
          },
          {
            "$ref": "#/components/schemas/TrainingResourceModelIdOutput"
          }
        ],
        "example": {
          "prompt_tuning": {
            "base_model": {
              "model_id": "google/flan-t5-xl"
            }
          },
          "training_data_references": [
            {
              "id": "tune1_data.json",
              "location": {
                "path": "tune1_data.json"
              },
              "type": "container"
            }
          ],
          "auto_update_model": true,
          "results_reference": {
            "location": {
              "path": "tune1/results",
              "training": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82",
              "training_status": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/training-status.json",
              "assets_path": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets",
              "model_request_path": "tune1/results/360c40f7-ac0c-43ca-a95f-1a5421f93b82/assets/c29e7544-dfd0-4427-bc66-20fa6023e2e0/resources/wml_model/request.json"
            },
            "type": "container"
          },
          "status": {
            "state": "completed",
            "running_at": "2023-08-04T13:22:48.000Z",
            "completed_at": "2023-08-04T13:22:55.289Z",
            "message": {
              "level": "info",
              "text": "Training job 360c40f7-ac0c-43ca-a95f-1a5421f93b82 completed"
            }
          }
        }
      },
      "TrainingResource": {
        "type": "object",
        "description": "Training resource.\n",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/ResourceMeta"
          },
          "entity": {
            "$ref": "#/components/schemas/TrainingResourceEntity"
          }
        }
      },
      "TrainingResourceCollection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "type": "object",
            "properties": {
              "resources": {
                "type": "array",
                "description": "The training resources.\n",
                "items": {
                  "$ref": "#/components/schemas/TrainingResource"
                }
              },
              "system": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SystemDetails"
                  }
                ],
                "example": {
                  "warnings": [
                    {
                      "message": "This model is a Non-IBM Product governed by a third-party license that may impose use restrictions and other obligations.",
                      "id": "DisclaimerWarning"
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "TrainingResourceDetails": {
        "type": "object",
        "description": "The training details required when creating the job.\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the training.\n",
            "example": "my-prompt-training"
          },
          "space_id": {
            "$ref": "#/components/schemas/SpaceId"
          },
          "project_id": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "description": {
            "type": "string",
            "description": "A description of the training.\n",
            "example": "My prompt training."
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        },
        "required": [
          "name"
        ]
      },
      "ResultsLocation": {
        "type": "object",
        "description": "A reference to data.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "Item identification inside a collection.\n"
          },
          "type": {
            "description": "The data source type like `connection_asset`, `container` (Service) or `fs` (Software).\n",
            "type": "string",
            "enum": [
              "connection_asset",
              "container"
            ],
            "example": "connection_asset"
          },
          "connection": {
            "$ref": "#/components/schemas/DataConnection"
          },
          "location": {
            "$ref": "#/components/schemas/DataLocation"
          }
        },
        "required": [
          "type",
          "location"
        ]
      },
      "ResultsReferenceInput": {
        "type": "object",
        "properties": {
          "results_reference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResultsLocation"
              }
            ],
            "description": "The training results. Normally this is specified as `type=container` (Service) or `type=fs` (Software) which\nmeans that it is stored in the space or project.\n",
            "example": {
              "location": {
                "path": "results"
              },
              "type": "container"
            }
          }
        },
        "required": [
          "results_reference"
        ]
      },
      "TrainingResourcePrototype": {
        "description": "The `training_data_references` contain the training datasets and the\n`results_reference` the connection where results will be stored.\n",
        "allOf": [
          {
            "$ref": "#/components/schemas/TrainingResourceDetails"
          },
          {
            "$ref": "#/components/schemas/TrainingResourceEntityCommon"
          },
          {
            "$ref": "#/components/schemas/ResultsReferenceInput"
          }
        ],
        "example": {
          "name": "my-prompt-tune-training",
          "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
          "prompt_tuning": {
            "base_model": {
              "model_id": "google/flan-t5-xl"
            },
            "tuning_type": "prompt_tuning",
            "num_epochs": 30,
            "learning_rate": 0.4,
            "accumulate_steps": 3,
            "batch_size": 10,
            "max_input_tokens": 100,
            "max_output_tokens": 100
          },
          "training_data_references": [
            {
              "id": "tune1_data.json",
              "location": {
                "path": "tune1_data.json"
              },
              "type": "container"
            }
          ],
          "auto_update_model": true,
          "results_reference": {
            "location": {
              "path": "tune1/results"
            },
            "type": "container"
          }
        }
      },
      "EmbeddingModelId": {
        "type": "string",
        "description": "The `id` of the model to be used for this request.\nPlease refer to the [list of models](https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/fm-models-embed.html?context=wx&audience=wdp).\n"
      },
      "TextInput": {
        "type": "string",
        "description": "The text input to the model.\n"
      },
      "ParameterTruncateInputTokensFromEnd": {
        "type": "integer",
        "description": "Represents the maximum number of tokens accepted per input.\n\nThis can be used to avoid requests failing due to input being longer than configured limits. If the text is truncated, then it truncates the end of the input (on the right), so the start of the input will remain the same.\n\nIf this value exceeds the `maximum sequence length` (refer to the documentation to find this value for the model) then the call will fail if the total number of tokens exceeds the `maximum sequence length`.\n",
        "minimum": 1
      },
      "EmbeddingReturnOptions": {
        "type": "object",
        "description": "The return options for text embeddings.\n",
        "properties": {
          "input_text": {
            "type": "boolean",
            "description": "Include the `input` text in each of the `results` documents.\n"
          }
        }
      },
      "EmbeddingParameters": {
        "type": "object",
        "description": "Parameters for text embedding requests.\n",
        "properties": {
          "truncate_input_tokens": {
            "$ref": "#/components/schemas/ParameterTruncateInputTokensFromEnd"
          },
          "return_options": {
            "$ref": "#/components/schemas/EmbeddingReturnOptions"
          }
        }
      },
      "EmbeddingsRequest": {
        "type": "object",
        "description": "The text input for a given model to be used to generate the embeddings.\n",
        "properties": {
          "space_id": {
            "$ref": "#/components/schemas/SpaceId"
          },
          "project_id": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "model_id": {
            "$ref": "#/components/schemas/EmbeddingModelId"
          },
          "inputs": {
            "type": "array",
            "description": "The input text.\n",
            "items": {
              "$ref": "#/components/schemas/TextInput"
            },
            "maxItems": 1000,
            "nullable": false
          },
          "parameters": {
            "$ref": "#/components/schemas/EmbeddingParameters"
          }
        },
        "required": [
          "model_id",
          "inputs"
        ]
      },
      "EmbeddingInputResult": {
        "type": "object",
        "description": "The input text, this is only output if `parameters.return_options.input_text`\nis set to `true` in the request.\n",
        "properties": {
          "text": {
            "type": "string",
            "description": "The input text.\n"
          }
        },
        "required": [
          "text"
        ]
      },
      "Embedding": {
        "type": "object",
        "description": "The embedding values for a text string. The `input` field is only set if the corresponding `return_option` is set.\n",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/EmbeddingInputResult"
          },
          "embedding": {
            "type": "array",
            "description": "The embedding values.\n",
            "items": {
              "type": "number",
              "description": "An embedding value.\n"
            },
            "minItems": 0
          }
        },
        "required": [
          "embedding"
        ]
      },
      "InputTokenCount": {
        "type": "integer",
        "description": "The number of input tokens that were consumed.\n"
      },
      "EmbeddingsResponseFields": {
        "type": "object",
        "description": "The embeddings per input.\n",
        "properties": {
          "model_id": {
            "$ref": "#/components/schemas/EmbeddingModelId"
          },
          "results": {
            "type": "array",
            "description": "The embedding values for a given text.\n",
            "items": {
              "$ref": "#/components/schemas/Embedding"
            },
            "minItems": 0
          },
          "created_at": {
            "$ref": "#/components/schemas/CreatedAt"
          },
          "input_token_count": {
            "$ref": "#/components/schemas/InputTokenCount"
          }
        },
        "required": [
          "model_id",
          "results",
          "created_at",
          "input_token_count"
        ]
      },
      "EmbeddingsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EmbeddingsResponseFields"
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ]
      },
      "SimilarityResult": {
        "type": "object",
        "description": "The similarity results.\n",
        "properties": {
          "score": {
            "type": "number",
            "description": "A similarity score between the source and target text.\n"
          }
        },
        "required": [
          "score"
        ]
      },
      "SimilarityResponseFields": {
        "type": "object",
        "description": "The similarity scores per source string.\n",
        "properties": {
          "model_id": {
            "$ref": "#/components/schemas/EmbeddingModelId"
          },
          "results": {
            "type": "array",
            "description": "The similarity scores.\n",
            "items": {
              "$ref": "#/components/schemas/SimilarityResult"
            },
            "minItems": 0
          },
          "created_at": {
            "$ref": "#/components/schemas/CreatedAt"
          },
          "input_token_count": {
            "$ref": "#/components/schemas/InputTokenCount"
          }
        },
        "required": [
          "model_id",
          "results",
          "created_at",
          "input_token_count"
        ]
      },
      "SimilarityResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SimilarityResponseFields"
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ]
      },
      "RerankInput": {
        "type": "object",
        "description": "The input text.\n",
        "properties": {
          "text": {
            "type": "string",
            "description": "The input text.\n"
          }
        },
        "required": [
          "text"
        ]
      },
      "RerankQuery": {
        "type": "string",
        "description": "The rank query.\n"
      },
      "RerankReturnOptions": {
        "type": "object",
        "description": "The return options for text reranking.\n",
        "properties": {
          "top_n": {
            "type": "integer",
            "description": "Just show the top `n` results if set.\n",
            "minimum": 1
          },
          "inputs": {
            "type": "boolean",
            "description": "If `true` then the inputs will be returned in the response.\n",
            "default": false
          },
          "query": {
            "type": "boolean",
            "description": "If `true` then the queries will be returned in the response.\n",
            "default": false
          }
        }
      },
      "RerankParameters": {
        "type": "object",
        "description": "The properties used for reranking.\n",
        "properties": {
          "truncate_input_tokens": {
            "$ref": "#/components/schemas/ParameterTruncateInputTokensFromEnd"
          },
          "return_options": {
            "$ref": "#/components/schemas/RerankReturnOptions"
          }
        }
      },
      "RerankRequest": {
        "type": "object",
        "description": "The request to rerank texts.\n",
        "properties": {
          "space_id": {
            "$ref": "#/components/schemas/SpaceId"
          },
          "project_id": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "model_id": {
            "$ref": "#/components/schemas/EmbeddingModelId"
          },
          "inputs": {
            "type": "array",
            "description": "The rank input strings.\n",
            "items": {
              "$ref": "#/components/schemas/RerankInput"
            },
            "minItems": 0,
            "maxItems": 1000
          },
          "query": {
            "$ref": "#/components/schemas/RerankQuery"
          },
          "parameters": {
            "$ref": "#/components/schemas/RerankParameters"
          }
        },
        "required": [
          "model_id",
          "inputs",
          "query"
        ]
      },
      "RerankInputResult": {
        "type": "object",
        "description": "The input text, this is only output if `parameters.return_options.inputs`\nis set to `true` in the request.\n",
        "properties": {
          "text": {
            "type": "string",
            "description": "The input text.\n"
          }
        },
        "required": [
          "text"
        ]
      },
      "RerankedResults": {
        "type": "object",
        "description": "The ranking score for the input.\n",
        "properties": {
          "index": {
            "type": "integer",
            "description": "The index of the text from the input in the original request `inputs` array.\n",
            "minimum": 0
          },
          "score": {
            "type": "number",
            "description": "The score of the input.\n"
          },
          "input": {
            "$ref": "#/components/schemas/RerankInputResult"
          }
        },
        "required": [
          "index",
          "score"
        ]
      },
      "RerankResponseFields": {
        "type": "object",
        "description": "The ranked results.\n",
        "properties": {
          "model_id": {
            "$ref": "#/components/schemas/EmbeddingModelId"
          },
          "model_version": {
            "$ref": "#/components/schemas/ModelVersion"
          },
          "results": {
            "description": "The ranked results.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RerankedResults"
            },
            "minItems": 0
          },
          "created_at": {
            "$ref": "#/components/schemas/CreatedAt"
          },
          "input_token_count": {
            "$ref": "#/components/schemas/InputTokenCount"
          },
          "query": {
            "type": "string",
            "description": "The rank query, if requested.\n"
          }
        },
        "required": [
          "model_id",
          "results",
          "created_at",
          "input_token_count"
        ]
      },
      "RerankResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RerankResponseFields"
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ]
      },
      "SpaceIdOnly": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-]*$",
        "minLength": 36,
        "maxLength": 36,
        "description": "The space that contains the resource.\n",
        "example": "3fc54cf1-252f-424b-b52d-5cdd9814987f"
      },
      "GeospatialTransformationMetadataFields": {
        "type": "object",
        "description": "The specific fields for the geospatial transformation metadata fields.\n",
        "properties": {
          "space_id": {
            "$ref": "#/components/schemas/SpaceIdOnly"
          }
        },
        "required": [
          "space_id"
        ]
      },
      "GeospatialTransformationMetadata": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceMetaSimple"
          },
          {
            "$ref": "#/components/schemas/GeospatialTransformationMetadataFields"
          }
        ]
      },
      "GeospatialTransformationModelId": {
        "type": "string",
        "description": "The `id` of the model to be used for this request.\n"
      },
      "GeospatialTransformationData": {
        "type": "object",
        "description": "A data location of the input or output data.\n",
        "properties": {
          "url": {
            "type": "string",
            "description": "A signed url for the data in COS or elsewhere. This url will be used to download if this is input, or upload if this is output.\n",
            "example": "https://pre_signed_url"
          }
        }
      },
      "GeospatialTransformationEntity": {
        "type": "object",
        "description": "The inputs and outputs required to create a transformation for the given model.\n",
        "properties": {
          "model_id": {
            "$ref": "#/components/schemas/GeospatialTransformationModelId"
          },
          "inputs": {
            "type": "array",
            "description": "The input text.\n",
            "items": {
              "$ref": "#/components/schemas/GeospatialTransformationData"
            },
            "maxItems": 20,
            "nullable": false
          },
          "output": {
            "$ref": "#/components/schemas/GeospatialTransformationData"
          }
        },
        "required": [
          "model_id",
          "inputs",
          "output"
        ]
      },
      "GeospatialTransformationResults": {
        "type": "object",
        "description": "The transformation results.\n",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the transformation.\n",
            "enum": [
              "completed",
              "failed",
              "running"
            ]
          },
          "running_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the job is successfully submitted to the processor.\n"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the job completed or failed.\n"
          }
        }
      },
      "GeospatialTransformationResource": {
        "type": "object",
        "description": "The geospatial transformation resource.\n",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/GeospatialTransformationMetadata"
          },
          "entity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeospatialTransformationEntity"
              },
              {
                "type": "object",
                "properties": {
                  "results": {
                    "$ref": "#/components/schemas/GeospatialTransformationResults"
                  }
                }
              }
            ]
          }
        }
      },
      "GeospatialTransformationResources": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "type": "object",
            "description": "Pagination information and list of resources.\n",
            "properties": {
              "resources": {
                "type": "array",
                "description": "A list of resources.\n",
                "items": {
                  "$ref": "#/components/schemas/GeospatialTransformationResource"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ],
        "description": "A paginated list of resources.\n"
      },
      "GeospatialTransformationRequestFields": {
        "type": "object",
        "properties": {
          "space_id": {
            "$ref": "#/components/schemas/SpaceIdOnly"
          }
        },
        "required": [
          "space_id"
        ]
      },
      "GeospatialTransformationRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeospatialTransformationEntity"
          },
          {
            "$ref": "#/components/schemas/GeospatialTransformationRequestFields"
          }
        ]
      },
      "GeospatialTransformationResponseFields": {
        "type": "object",
        "description": "The transformation results.\n",
        "properties": {
          "results": {
            "$ref": "#/components/schemas/GeospatialTransformationResults"
          }
        },
        "required": [
          "results"
        ]
      },
      "GeospatialTransformationResponseEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GeospatialTransformationEntity"
          },
          {
            "$ref": "#/components/schemas/GeospatialTransformationResponseFields"
          }
        ]
      },
      "ResourceName": {
        "type": "string",
        "description": "The name of the job.\n"
      },
      "ResourceDescription": {
        "type": "string",
        "description": "The description of the job.\n"
      },
      "ResourceRequestFields": {
        "type": "object",
        "description": "The request fields that are not part of the returned entity.\n",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "description": {
            "$ref": "#/components/schemas/ResourceDescription"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "project_id": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "space_id": {
            "$ref": "#/components/schemas/SpaceId"
          }
        },
        "required": [
          "name"
        ]
      },
      "AutoAIRAGMetadata": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceMetaSimple"
          },
          {
            "$ref": "#/components/schemas/ResourceRequestFields"
          }
        ]
      },
      "AutoAIRAGChunking": {
        "type": "object",
        "title": "ChunkingConfiguration",
        "description": "The chunking details for an AutoAI RAG pattern,\n",
        "properties": {
          "method": {
            "type": "string",
            "description": "Text splitting method.\n",
            "enum": [
              "recursive",
              "semantic"
            ],
            "example": "recursive",
            "default": "recursive"
          },
          "chunk_size": {
            "type": "integer",
            "description": "The size (tokens) of the piece of text.\n",
            "minimum": 128,
            "maximum": 2048,
            "example": 256
          },
          "chunk_overlap": {
            "type": "integer",
            "description": "Number of overlapping (across chunks) tokens. Must be less than `chunk_size`.\n",
            "minimum": 64,
            "maximum": 512,
            "example": 128
          }
        },
        "required": [
          "method",
          "chunk_size"
        ]
      },
      "AutoAIRAGFoundationModels": {
        "type": "string",
        "title": "FoundationModels",
        "description": "The id of the foundation model. If not provided AutoAI auto-selects 3 top rated models.\n",
        "example": "ibm/granite-13b-chat-v2"
      },
      "AutoAIRAGSparse": {
        "type": "object",
        "description": "The sparse embedding model required by hybrid search.\n",
        "properties": {
          "model_id": {
            "type": "string",
            "description": "The model id of the sparse embedding model. In-database sparse models are only supported. Defaults to `BM25` (Milvus) and `ELSER` for Elasticsearch. If `ELSER` is not available `BM25` is used.\n",
            "example": "BM25"
          }
        }
      },
      "AutoAIRAGHybridRanker": {
        "type": "object",
        "description": "The ranker settings for hybrid search. If not provided the hybrid-search is disabled.\n",
        "properties": {
          "strategy": {
            "type": "string",
            "description": "The ranker strategy used in hybrid search.\n",
            "enum": [
              "weighted",
              "rrf"
            ],
            "example": "rrf"
          },
          "sparse_vectors": {
            "$ref": "#/components/schemas/AutoAIRAGSparse"
          },
          "alpha": {
            "type": "number",
            "format": "float",
            "description": "Importance of dense embeddings used by Weighted Ranker (the higher the more important). Sparse embeddings importance is 1-alpha.\n",
            "minimum": 0,
            "maximum": 1,
            "example": 0.9,
            "default": 0.8
          },
          "k": {
            "type": "integer",
            "description": "The rank constant ensuring a good balance between the influence of top and low ranked documents (the higher k, the higher importance of the low ranked ones). Applies to RRF only.\n",
            "minimum": 1,
            "default": 60,
            "example": 70
          }
        },
        "required": [
          "strategy"
        ]
      },
      "AutoAIRAGRetrieval": {
        "type": "object",
        "description": "The retrieval details for an AutoAI RAG pattern,\n",
        "properties": {
          "method": {
            "type": "string",
            "description": "Chunks retrieval method.\n",
            "enum": [
              "simple",
              "window"
            ],
            "example": "simple"
          },
          "number_of_chunks": {
            "type": "integer",
            "description": "The number of retrieved chunks.\n",
            "minimum": 1,
            "maximum": 10,
            "example": 5
          },
          "window_size": {
            "type": "integer",
            "description": "The size of the window. Applies only to window based methods.\n",
            "minimum": 1,
            "maximum": 4,
            "example": 2
          },
          "hybrid_ranker": {
            "$ref": "#/components/schemas/AutoAIRAGHybridRanker"
          }
        },
        "required": [
          "method"
        ]
      },
      "AutoAIRAGModel": {
        "type": "object",
        "title": "FoundationModel",
        "description": "Properties describing the foundation model.\n",
        "properties": {
          "model_id": {
            "type": "string",
            "description": "The foundation model id.\n",
            "example": "meta-llama/llama-3-3-70b-instruct"
          },
          "prompt_template_text": {
            "deprecated": true,
            "type": "string",
            "description": "The foundation model prompt template text (free form).\nUse `chat_template_messages` instead.\n",
            "example": "<s>[INST] <<SYS>>\nYou are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your answers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure that your responses are socially unbiased and positive in nature.\n\nIf a question does not make any sense, or is not factually coherent, explain why instead of answering something not correct. If you don't know the answer to a question, please don't share false information.\n\n<</SYS>>\n\nGenerate the next agent response by answering the question. You are provided several documents with titles. If the answer comes from different documents please mention all possibilities and use the titles of documents to separate between topics or domains. If you cannot base your answer on the given documents, please state that you do not have an answer.\n\n{reference_documents}\n\n{question} [/INST]"
          },
          "context_template_text": {
            "type": "string",
            "description": "The retrieved chunks template text (free form). Must contain variable: `document` representing single document chunk retrieved. > If not provided default one is used.\n",
            "example": "[Document]\n{document}\n[End]"
          },
          "word_to_token_ratio": {
            "type": "number",
            "description": "Describes word to token ratio.\n",
            "example": 1.5
          }
        },
        "required": [
          "model_id"
        ]
      },
      "AutoAIRAGModelParams": {
        "type": "object",
        "title": "GenerationParameters",
        "description": "Properties that control the model and response.\n",
        "example": {
          "min_new_tokens": 100,
          "max_new_tokens": 2000
        },
        "properties": {
          "decoding_method": {
            "type": "string",
            "description": "Represents the strategy used for picking the tokens during generation of the output text.\n\nDuring text generation when parameter value is set to greedy, each successive token corresponds\nto the highest probability token given the text that has already been generated.\nThis strategy can lead to repetitive results especially for longer output sequences.\nThe alternative sample strategy generates text by picking subsequent tokens based on the\nprobability distribution of possible next tokens defined by (i.e., conditioned on) the\nalready-generated text and the top_k and top_p parameters described below.\nSee this [url](https://huggingface.co/blog/how-to-generate) for an informative article about text generation.\n",
            "enum": [
              "sample",
              "greedy"
            ],
            "default": "greedy",
            "example": "sample"
          },
          "max_new_tokens": {
            "type": "integer",
            "description": "The maximum number of new tokens to be generated.\nThe maximum supported value for this field depends on the model being used.\n\nHow the \"token\" is defined depends on the tokenizer and vocabulary size,\nwhich in turn depends on the model. Often the tokens are a mix of full words and sub-words.\nTo learn more about tokenization, [see here](https://huggingface.co/course/chapter2/4).\n\nDepending on the users plan, and on the model being used, there may be an enforced maximum number of new tokens.\n",
            "minimum": 1,
            "default": 1000,
            "example": 300
          },
          "min_new_tokens": {
            "type": "integer",
            "description": "If stop sequences are given, they are ignored until minimum tokens are generated.\n",
            "minimum": 0,
            "default": 1,
            "example": 5
          },
          "max_sequence_length": {
            "type": "integer",
            "description": "This is the maximum allowed value for the number of tokens in the input\nprompt plus the number of tokens in the output generated by the model.\n",
            "example": 4096
          }
        }
      },
      "AutoAIRAGCustomModel": {
        "type": "object",
        "title": "CustomFoundationModel",
        "description": "Properties describing the custom foundation model.\n",
        "properties": {
          "deployment_id": {
            "type": "string",
            "description": "The custom foundation model deployment id.\n",
            "example": "2cd0bcda-581d-4f04-8028-ec2bc90cc375"
          },
          "space_id": {
            "$ref": "#/components/schemas/SpaceId"
          },
          "project_id": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "parameters": {
            "$ref": "#/components/schemas/AutoAIRAGModelParams"
          },
          "prompt_template_text": {
            "type": "string",
            "description": "The (non-chat) foundation model prompt template text (free form). Must contain variables: `{question}` and `{reference_documents}`. `{reference_documents}` variable is a placeholder for retrieved document(s) defined by `context_template_text`.\nFor chat models use `chat_template_messages`.\n",
            "example": "<s>[INST] <<SYS>>\nYou are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your answers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure that your responses are socially unbiased and positive in nature.\n\nIf a question does not make any sense, or is not factually coherent, explain why instead of answering something not correct. If you don't know the answer to a question, please don't share false information.\n\n<</SYS>>\n\nGenerate the next agent response by answering the question. You are provided several documents with titles. If the answer comes from different documents please mention all possibilities and use the titles of documents to separate between topics or domains. If you cannot base your answer on the given documents, please state that you do not have an answer.\n\n{reference_documents}\n\n{question} [/INST]"
          },
          "context_template_text": {
            "type": "string",
            "description": "The retrieved chunks template text (free form). Must contain variable: `document` representing single document chunk retrieved. > If not provided default one is used.\n",
            "example": "[Document]\n{document}\n[End]"
          },
          "word_to_token_ratio": {
            "type": "number",
            "description": "Describes word to token ratio.\n",
            "example": 1.5
          }
        },
        "required": [
          "deployment_id"
        ]
      },
      "AutoAIRAGGenerationModel": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/AutoAIRAGModel"
          },
          {
            "$ref": "#/components/schemas/AutoAIRAGCustomModel"
          }
        ]
      },
      "AutoAIRAGConstraints": {
        "type": "object",
        "description": "The constraint parameters for an AutoAI RAG run.\n",
        "properties": {
          "chunking": {
            "type": "array",
            "description": "Chunking settings to be used.\n",
            "items": {
              "$ref": "#/components/schemas/AutoAIRAGChunking"
            },
            "minItems": 1,
            "maxItems": 4,
            "example": [
              {
                "method": "recursive",
                "chunk_size": 512,
                "chunk_overlap": 128
              },
              {
                "method": "recursive",
                "chunk_size": 1024,
                "chunk_overlap": 512
              }
            ]
          },
          "embedding_models": {
            "type": "array",
            "description": "The embedding models to try in index building step. Models with \"autoai_rag\" function are supported (use Model Specs API, to retrieve list of supported models). If not provided AutoAI selects top 2 performers.\n",
            "items": {
              "type": "string",
              "description": "The model id of the embedding model.\n"
            },
            "minItems": 1,
            "example": [
              "ibm/slate-125m-english-rtrvr",
              "intfloat/multilingual-e5-large"
            ]
          },
          "retrieval_methods": {
            "type": "array",
            "description": "Deprecated: this is replaced by `retrieval` object.\nRetrieval methods to be used.\n",
            "items": {
              "type": "string",
              "description": "The retrieval method name to be used.\n",
              "enum": [
                "simple",
                "window"
              ]
            },
            "minItems": 1,
            "maxItems": 2,
            "default": [
              "simple",
              "window"
            ],
            "example": [
              "window"
            ],
            "deprecated": true
          },
          "foundation_models": {
            "type": "array",
            "description": "Deprecated: this is replaced by `generation.foundation_models` object.\nThe foundation models to try in generation step. Models with \"autoai_rag\" function are supported (use Model Specs API, to retrieve list of supported models).\n",
            "items": {
              "$ref": "#/components/schemas/AutoAIRAGFoundationModels"
            },
            "minItems": 1,
            "example": [
              "ibm/granite-13b-chat-v2",
              "mistralai/mixtral-8x7b-instruct-v01"
            ],
            "deprecated": true
          },
          "retrieval": {
            "type": "array",
            "description": "Retrieval settings to be used.\n",
            "items": {
              "$ref": "#/components/schemas/AutoAIRAGRetrieval"
            },
            "minItems": 1,
            "maxItems": 4,
            "example": [
              {
                "method": "simple",
                "number_of_chunks": 5
              },
              {
                "method": "window",
                "number_of_chunks": 3,
                "window_size": 2
              }
            ]
          },
          "generation": {
            "type": "object",
            "description": "Properties describing the generation step.",
            "properties": {
              "language": {
                "type": "object",
                "description": "Properties describing the generation language.",
                "properties": {
                  "auto_detect": {
                    "description": "Detect the language based on provided data.",
                    "type": "boolean",
                    "default": true
                  }
                }
              },
              "foundation_models": {
                "type": "array",
                "title": "GenerationModels",
                "description": "List of foundation models and custom foundation models.",
                "items": {
                  "$ref": "#/components/schemas/AutoAIRAGGenerationModel"
                }
              }
            },
            "example": {
              "language": {
                "auto_detect": false
              },
              "foundation_models": [
                {
                  "model_id": "meta-llama/llama-3-1-70b-instruct"
                }
              ]
            }
          },
          "max_number_of_rag_patterns": {
            "type": "integer",
            "description": "The maximum number of RAG patterns to create.\n",
            "minimum": 1,
            "maximum": 20,
            "default": 8
          }
        }
      },
      "AutoAIRAGOptimizationParameters": {
        "type": "object",
        "title": "OptimizationParameters",
        "description": "The optimization parameters for an AutoAI RAG run.\n",
        "properties": {
          "metrics": {
            "type": "array",
            "description": "The metric name(s) to be used for optimization. LLM as a judge metrics are supported on Service only.\n",
            "items": {
              "type": "string",
              "description": "The metric name to be used for optimization.\n",
              "enum": [
                "answer_correctness",
                "faithfulness",
                "context_correctness",
                "answer_correctness_judge",
                "faithfulness_judge"
              ]
            },
            "minItems": 1,
            "maxItems": 1,
            "default": [
              "faithfulness"
            ],
            "example": [
              "answer_correctness"
            ]
          }
        }
      },
      "AutoAIRAGParameters": {
        "type": "object",
        "description": "The parameters for an AutoAI RAG run.\n",
        "properties": {
          "constraints": {
            "$ref": "#/components/schemas/AutoAIRAGConstraints"
          },
          "optimization": {
            "$ref": "#/components/schemas/AutoAIRAGOptimizationParameters"
          },
          "deployment": {
            "description": "Best pattern deployment related properties."
          },
          "output_logs": {
            "type": "boolean",
            "description": "Request that the output logs are also stored as part of the result.\n",
            "default": true
          }
        }
      },
      "AutoAIDataLocation": {
        "type": "object",
        "description": "A reference to data.\n",
        "properties": {
          "type": {
            "description": "The data source type like `connection_asset`, `data_asset` or `container` (Service only).\n",
            "type": "string",
            "enum": [
              "connection_asset",
              "data_asset",
              "container"
            ],
            "example": "connection_asset"
          },
          "connection": {
            "$ref": "#/components/schemas/DataConnection"
          },
          "location": {
            "$ref": "#/components/schemas/DataLocation"
          }
        },
        "required": [
          "type",
          "location"
        ]
      },
      "ConnectionAsset": {
        "type": "object",
        "description": "A reference to connection.\n",
        "properties": {
          "type": {
            "description": "The data source type `connection_asset`.\n",
            "type": "string",
            "enum": [
              "connection_asset"
            ],
            "example": "connection_asset"
          },
          "connection": {
            "$ref": "#/components/schemas/DataConnection"
          }
        },
        "required": [
          "type",
          "connection"
        ]
      },
      "AutoAIRAGRequestEntity": {
        "type": "object",
        "description": "The request entity for an AutoAI RAG run.\n",
        "properties": {
          "hardware_spec": {
            "$ref": "#/components/schemas/HardwareSpec"
          },
          "parameters": {
            "$ref": "#/components/schemas/AutoAIRAGParameters"
          },
          "input_data_references": {
            "type": "array",
            "description": "A set of input data references.\n",
            "items": {
              "$ref": "#/components/schemas/AutoAIDataLocation"
            },
            "minItems": 1,
            "maxItems": 20
          },
          "test_data_references": {
            "type": "array",
            "description": "A set of test data references.\n",
            "items": {
              "$ref": "#/components/schemas/AutoAIDataLocation"
            },
            "minItems": 1,
            "maxItems": 1
          },
          "vector_store_references": {
            "type": "array",
            "description": "A set of vector store references.\n",
            "items": {
              "$ref": "#/components/schemas/ConnectionAsset"
            },
            "minItems": 1,
            "maxItems": 1
          },
          "custom": {
            "$ref": "#/components/schemas/Custom"
          }
        },
        "required": [
          "hardware_spec",
          "input_data_references"
        ]
      },
      "AutoAIRAGMetric": {
        "type": "object",
        "description": "The metric for a given property.\n",
        "properties": {
          "metric_name": {
            "type": "string",
            "description": "The name of the metric.\n",
            "example": "answer_correctness"
          },
          "mean": {
            "type": "number",
            "description": "The mean value calculated over all records in the dataset.\n",
            "example": 0.5197
          },
          "ci_high": {
            "type": "number",
            "description": "High confidence interval calculated over all records in the dataset.\n",
            "example": 0.61
          },
          "ci_low": {
            "type": "number",
            "description": "Low confidence interval calculated over all records in the dataset.\n",
            "example": 0.42
          }
        }
      },
      "AutoAIRAGMetrics": {
        "type": "object",
        "description": "The AutoAI RAG metrics, this contains the list of calculated metrics on test data (provided in the request) and (optionally) synthetic data autogenerated. Metric value is mean value calculated over all records in the dataset.\n",
        "properties": {
          "test_data": {
            "type": "array",
            "description": "List of evaluation metrics.\n",
            "items": {
              "$ref": "#/components/schemas/AutoAIRAGMetric"
            }
          }
        },
        "required": [
          "test_data"
        ]
      },
      "AutoAIRAGResultLocation": {
        "type": "object",
        "description": "The location of the different result files.\n",
        "properties": {
          "evaluation_results": {
            "type": "string",
            "description": "The json file with questions, answers, retrieved contexts, correct answers and metric scores.\n",
            "example": "results_autoai/6a9362f6-7ea2-4419-8c7d-a7e07432dec5/rag/assets/Pattern1/evaluation_results.json"
          },
          "indexing_notebook": {
            "type": "string",
            "description": "A Jupyter notebook with code required to build the index in the vector database.\n",
            "example": "results_autoai/6a9362f6-7ea2-4419-8c7d-a7e07432dec5/rag/assets/Pattern1/indexing_notebook.ipynb"
          },
          "inference_notebook": {
            "type": "string",
            "description": "The Jupyter notebook with the python function code and steps required to store and deploy the Q&A chain.\n",
            "example": "results_autoai/6a9362f6-7ea2-4419-8c7d-a7e07432dec5/rag/assets/Pattern1/inference_notebook.ipynb"
          },
          "inference_service_code": {
            "type": "string",
            "description": "The retrieve & generation AI service code (python).\n",
            "example": "results_autoai/6a9362f6-7ea2-4419-8c7d-a7e07432dec5/rag/assets/Pattern1/inference_service_code.gz"
          },
          "inference_service_metadata": {
            "type": "string",
            "description": "The retrieve & generation AI service metadata.\n",
            "example": "results_autoai/6a9362f6-7ea2-4419-8c7d-a7e07432dec5/rag/assets/Pattern1/inference_service_metadata.json"
          },
          "indexing_service_code": {
            "type": "string",
            "description": "The indexing AI service code (python).\n",
            "example": "results_autoai/6a9362f6-7ea2-4419-8c7d-a7e07432dec5/rag/assets/Pattern1/indexing_service_code.gz"
          },
          "indexing_service_metadata": {
            "type": "string",
            "description": "The indexing AI service metadata.\n",
            "example": "results_autoai/6a9362f6-7ea2-4419-8c7d-a7e07432dec5/rag/assets/Pattern1/indexing_service_metadata.json"
          }
        }
      },
      "AutoAIRAGVectorStore": {
        "type": "object",
        "description": "Properties that describe the AutoAI RAG vector store that contains the results.\n",
        "properties": {
          "datasource_type": {
            "type": "string",
            "description": "The vector database type.\n",
            "example": "milvus"
          },
          "index_name": {
            "type": "string",
            "description": "The database index name.\n",
            "example": "autoai_rag_id_pipeline_id_index"
          },
          "distance_metric": {
            "type": "string",
            "description": "The distance metric name.\n",
            "enum": [
              "euclidean",
              "cosine"
            ],
            "example": "euclidean"
          },
          "operation": {
            "type": "string",
            "description": "The operation type (either insert or upsert).\n",
            "enum": [
              "insert",
              "upsert"
            ],
            "example": "upsert"
          },
          "schema": {
            "$ref": "#/components/schemas/DataSchema"
          }
        }
      },
      "AutoAIRAGEmbeddings": {
        "type": "object",
        "description": "The embeddings properties for an AutoAI RAG pattern.\n",
        "properties": {
          "truncate_strategy": {
            "type": "string",
            "description": "Truncate strategy.\n",
            "example": "left"
          },
          "truncate_input_tokens": {
            "type": "integer",
            "description": "Number of input tokens.\n",
            "example": 384
          },
          "model_id": {
            "type": "string",
            "description": "The embedding model id.\n",
            "example": "ibm/slate-125m-english-rtrvr"
          }
        }
      },
      "AutoAIRAGTool": {
        "type": "object",
        "description": "The tool's details for the agentic AutoAI RAG pattern.\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the tool.\n",
            "example": "Retriever_Pattern_8"
          },
          "description": {
            "type": "string",
            "description": "The description of the tool.\n",
            "example": "Retrieve the content of financial documents for dept. A in company B for year 2024."
          }
        }
      },
      "AutoAIRAGAgent": {
        "type": "object",
        "description": "The agent settings details.\n",
        "properties": {
          "framework": {
            "type": "string",
            "description": "The agentic framework used to build the RAG Pattern.\n",
            "enum": [
              "langgraph"
            ],
            "example": "langgraph"
          },
          "type": {
            "type": "string",
            "description": "The agent's type.\n",
            "enum": [
              "react"
            ],
            "example": "react"
          },
          "description": {
            "type": "string",
            "description": "The description of the agent.\n",
            "example": "Answer the questions related to financial documents for dept. A for last 5 years."
          }
        }
      },
      "AutoAIRAGSettings": {
        "type": "object",
        "description": "The RAG pattern configuration settings that were found during the optimization process.\n",
        "properties": {
          "vector_store": {
            "$ref": "#/components/schemas/AutoAIRAGVectorStore"
          },
          "chunking": {
            "$ref": "#/components/schemas/AutoAIRAGChunking"
          },
          "embeddings": {
            "$ref": "#/components/schemas/AutoAIRAGEmbeddings"
          },
          "retrieval": {
            "$ref": "#/components/schemas/AutoAIRAGRetrieval"
          },
          "tools": {
            "type": "array",
            "description": "A list of agentic RAG Pattern tools.\n",
            "items": {
              "$ref": "#/components/schemas/AutoAIRAGTool"
            }
          },
          "generation": {
            "$ref": "#/components/schemas/AutoAIRAGGenerationModel"
          },
          "agent": {
            "$ref": "#/components/schemas/AutoAIRAGAgent"
          }
        }
      },
      "AutoAIRAGParamImportance": {
        "type": "object",
        "title": "ParameterImportance",
        "description": "The RAG pattern configuration parameter importance.\n",
        "properties": {
          "parameter": {
            "type": "string",
            "description": "The configuration parameter name.\n",
            "example": "chunking_size"
          },
          "importance": {
            "type": "number",
            "format": "float",
            "description": "The importance of particular configuration parameter.\n",
            "example": 0.6
          }
        },
        "example": {
          "parameter": "chunking_size",
          "importance": 0.6
        }
      },
      "AutoAIRAGSettingsImportance": {
        "type": "object",
        "title": "SettingsImportance",
        "description": "The RAG pattern configuration settings importance.\n",
        "properties": {
          "chunking": {
            "type": "array",
            "description": "The chunking config parameters importance.\n",
            "items": {
              "$ref": "#/components/schemas/AutoAIRAGParamImportance"
            }
          },
          "embeddings": {
            "type": "array",
            "description": "The embeddings config parameters importance.\n",
            "items": {
              "$ref": "#/components/schemas/AutoAIRAGParamImportance"
            }
          },
          "retrieval": {
            "type": "array",
            "description": "The retrieval config parameters importance.\n",
            "items": {
              "$ref": "#/components/schemas/AutoAIRAGParamImportance"
            }
          },
          "generation": {
            "type": "array",
            "description": "The generation config parameters importance.\n",
            "items": {
              "$ref": "#/components/schemas/AutoAIRAGParamImportance"
            }
          }
        }
      },
      "AutoAIRAGPattern": {
        "type": "object",
        "description": "Describes the elements and settings found during the optimization of the RAG pattern.\n",
        "properties": {
          "composition_steps": {
            "type": "array",
            "description": "The list of RAG Pattern nodes (steps).\n",
            "items": {
              "type": "string",
              "description": "The step type.\n"
            },
            "minItems": 0,
            "maxItems": 20,
            "nullable": false,
            "example": [
              "chunking",
              "embeddings",
              "vector_store",
              "retrieval",
              "generation"
            ]
          },
          "duration_seconds": {
            "type": "integer",
            "description": "The duration of the optimization step in seconds.\n",
            "example": 3600
          },
          "location": {
            "$ref": "#/components/schemas/AutoAIRAGResultLocation"
          },
          "name": {
            "type": "string",
            "description": "The RAG Pattern name.\n",
            "example": "Pattern_1"
          },
          "settings": {
            "$ref": "#/components/schemas/AutoAIRAGSettings"
          },
          "settings_importance": {
            "$ref": "#/components/schemas/AutoAIRAGSettingsImportance"
          }
        }
      },
      "SoftwareSpecRel": {
        "title": "software_spec_rel",
        "description": "A software specification.\n",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the software specification.\n",
            "type": "string",
            "example": "4cedab6d-e8e4-4214-b81a-2ddb122db2ab"
          },
          "rev": {
            "description": "The revision of the software specification.\n",
            "type": "string",
            "example": "2"
          },
          "name": {
            "description": "The name of the software specification.\n",
            "type": "string"
          }
        }
      },
      "AutoAIRAGContext": {
        "type": "object",
        "properties": {
          "rag_pattern": {
            "$ref": "#/components/schemas/AutoAIRAGPattern"
          },
          "iteration": {
            "type": "integer",
            "description": "The iteration of the optimization run in which the particular pattern has been built.\n",
            "example": 1
          },
          "max_combinations": {
            "type": "integer",
            "description": "Maximum number of possible parameter settings (search space cardinality).\n",
            "example": 160
          },
          "software_spec": {
            "$ref": "#/components/schemas/SoftwareSpecRel"
          }
        }
      },
      "AutoAIRAGResults": {
        "type": "object",
        "description": "The AutoAI RAG results.\n",
        "properties": {
          "metrics": {
            "$ref": "#/components/schemas/AutoAIRAGMetrics"
          },
          "context": {
            "$ref": "#/components/schemas/AutoAIRAGContext"
          }
        }
      },
      "AutoAIRAGResponseResults": {
        "type": "object",
        "description": "The AutoAI RAG results.\n",
        "properties": {
          "results": {
            "type": "array",
            "description": "The list of results.\n",
            "items": {
              "$ref": "#/components/schemas/AutoAIRAGResults"
            },
            "minItems": 1,
            "maxItems": 20,
            "nullable": false
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the results were created.\n",
            "minLength": 24,
            "maxLength": 24,
            "example": "2024-02-28T11:33:58.000Z"
          }
        },
        "required": [
          "results",
          "timestamp"
        ]
      },
      "AutoAIRAGStatusObject": {
        "type": "object",
        "description": "Status of the training job.\n",
        "properties": {
          "running_at": {
            "type": "string",
            "description": "Date and Time in which current training state has started.",
            "example": "2017-01-30T10:11:12Z",
            "format": "date-time"
          },
          "completed_at": {
            "type": "string",
            "description": "Date and Time in which training had completed.",
            "example": "2017-01-30T10:11:12Z",
            "format": "date-time"
          },
          "state": {
            "type": "string",
            "description": "Current state of training.",
            "enum": [
              "queued",
              "pending",
              "running",
              "completed",
              "failed",
              "canceled"
            ]
          },
          "message": {
            "$ref": "#/components/schemas/Message"
          },
          "failure": {
            "$ref": "#/components/schemas/ApiErrorResponse"
          },
          "step": {
            "type": "string",
            "description": "The step type.\n",
            "example": "data_reading"
          }
        },
        "example": {
          "state": "completed",
          "running_at": "2023-08-04T13:22:48.000Z",
          "completed_at": "2023-08-04T13:22:55.289Z",
          "message": {
            "level": "info",
            "text": "Training job 360c40f7-ac0c-43ca-a95f-1a5421f93b82 completed"
          }
        },
        "required": [
          "state"
        ]
      },
      "AutoAIRAGStatus": {
        "type": "object",
        "description": "The status of an AutoAI RAG run.\n",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/AutoAIRAGStatusObject"
          }
        },
        "required": [
          "status"
        ]
      },
      "AutoAIRAGResponseEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AutoAIRAGRequestEntity"
          },
          {
            "$ref": "#/components/schemas/AutoAIRAGResponseResults"
          },
          {
            "$ref": "#/components/schemas/ResultsReferenceOutput"
          },
          {
            "$ref": "#/components/schemas/AutoAIRAGStatus"
          }
        ]
      },
      "AutoAIRAGResponse": {
        "type": "object",
        "description": "The response of an AutoAI RAG run.\n",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/AutoAIRAGMetadata"
          },
          "entity": {
            "$ref": "#/components/schemas/AutoAIRAGResponseEntity"
          },
          "system": {
            "$ref": "#/components/schemas/SystemDetails"
          }
        }
      },
      "AutoRAGResultResources": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "type": "object",
            "description": "Pagination information and list of runs definitions.\n",
            "properties": {
              "resources": {
                "type": "array",
                "description": "A list of training definitions.\n",
                "items": {
                  "$ref": "#/components/schemas/AutoAIRAGResponse"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ],
        "description": "A paginated list of training definitions.\n"
      },
      "AutoAIRAGRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRequestFields"
          },
          {
            "$ref": "#/components/schemas/AutoAIRAGRequestEntity"
          },
          {
            "$ref": "#/components/schemas/ResultsReferenceInput"
          }
        ]
      },
      "GPU": {
        "type": "object",
        "description": "The name and number of GPUs used for the Fine Tuning job.\n",
        "properties": {
          "num": {
            "description": "The number of GPUs used for the Fine Tuning job.\n",
            "type": "number",
            "example": 4
          },
          "name": {
            "description": "The name of the GPU(s) used for the Fine Tuning job. The GPU specified must be available on the cluster.\n",
            "type": "string",
            "example": "NVIDIA-A100-80GB-PCIe"
          }
        }
      },
      "FineTuningParameters": {
        "type": "object",
        "description": "This field must not be set while creating a fine tuning job with InstructLab.\n\nThe parameters for the job. Note that if `verbalizer` is provided\nthen `response_template` must also be provided (and vice versa).\n",
        "properties": {
          "task_id": {
            "type": "string",
            "description": "The task that is targeted for this model.\n"
          },
          "accumulate_steps": {
            "type": "integer",
            "description": "Number of updates steps to accumulate the gradients for,\nbefore performing a backward/update pass.\n",
            "example": 1
          },
          "base_model": {
            "$ref": "#/components/schemas/BaseModel"
          },
          "num_epochs": {
            "type": "integer",
            "description": "Total number of training epochs to perform.\n",
            "example": 5
          },
          "learning_rate": {
            "type": "number",
            "description": "The initial learning rate for AdamW optimizer.\n",
            "example": 0.2
          },
          "batch_size": {
            "type": "integer",
            "description": "The batch size per GPU/XPU/TPU/MPS/NPU core/CPU for training.\n",
            "example": 5
          },
          "max_seq_length": {
            "type": "integer",
            "description": "Maximum sequence length in terms of number of tokens.\nAny sequence beyond this maximum length will be truncated.\n",
            "example": 1024
          },
          "response_template": {
            "type": "string",
            "description": "Separator for the prediction/response in the single sequence to train on completions only.\n",
            "default": "\\n\\n### Response:"
          },
          "verbalizer": {
            "type": "string",
            "description": "Verbalizer template to be used for formatting data at train and inference\ntime.\n\nThis template may use brackets to indicate where fields from the data\nmodel must be rendered.\n",
            "default": "### Input: {{input}} \\n\\n### Response: {{output}}"
          },
          "gpu": {
            "$ref": "#/components/schemas/GPU"
          },
          "gradient_checkpointing": {
            "type": "boolean",
            "description": "Enabling gradient checkpointing reduces GPU memory required at the cost of slowing training by approx 20%.\n",
            "default": true
          }
        },
        "required": [
          "base_model"
        ]
      },
      "FineTuningResourceEntity": {
        "type": "object",
        "description": "The fine tuning resource.\n",
        "properties": {
          "auto_update_model": {
            "type": "boolean",
            "description": "This field must not be set while creating a fine tuning job with InstructLab.\n\nIf set to `true` then the result of the training, if successful, will be\nuploaded to the repository as a model.\n",
            "default": false
          },
          "parameters": {
            "$ref": "#/components/schemas/FineTuningParameters"
          },
          "type": {
            "type": "string",
            "description": "The `type` of Fine Tuning training. The `type` is set to `ilab` for InstructLab training.\n",
            "enum": [
              "ilab"
            ]
          },
          "training_data_references": {
            "type": "array",
            "description": "The training datasets.\n",
            "items": {
              "$ref": "#/components/schemas/ObjectLocation"
            },
            "minItems": 1,
            "maxItems": 20
          },
          "test_data_references": {
            "type": "array",
            "description": "This field must not be set while creating a fine tuning job with InstructLab.\n\nThe holdout/test datasets.\n",
            "items": {
              "$ref": "#/components/schemas/ObjectLocation"
            },
            "minItems": 1,
            "maxItems": 20
          },
          "results_reference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectLocation"
              }
            ],
            "description": "The training results. Normally this is specified as `type=container` which\nmeans that it is stored in the space or project.\n",
            "example": {
              "location": {
                "path": "results"
              },
              "type": "container"
            }
          },
          "custom": {
            "$ref": "#/components/schemas/Custom"
          }
        },
        "required": [
          "training_data_references",
          "results_reference"
        ]
      },
      "FineTuningEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FineTuningResourceEntity"
          },
          {
            "$ref": "#/components/schemas/TrainingStatusOutput"
          }
        ]
      },
      "FineTuningResource": {
        "type": "object",
        "description": "The response of a fine tuning job.\n",
        "properties": {
          "metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceMeta"
              }
            ],
            "example": {
              "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
              "name": "my-fine-tuning-job",
              "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
              "owner": "guy",
              "created_at": "2023-08-04T13:22:55.289Z"
            }
          },
          "entity": {
            "$ref": "#/components/schemas/FineTuningEntity"
          },
          "system": {
            "$ref": "#/components/schemas/SystemDetails"
          }
        }
      },
      "FineTuningResourceList": {
        "type": "object",
        "properties": {
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FineTuningResource"
            }
          }
        }
      },
      "FineTuningResources": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "$ref": "#/components/schemas/FineTuningResourceList"
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ]
      },
      "FineTuningRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRequestFields"
          },
          {
            "$ref": "#/components/schemas/FineTuningResourceEntity"
          }
        ]
      },
      "ResourceSpaceProjectMetadata": {
        "type": "object",
        "description": "Common metadata for a resource where `project_id` or `space_id` must be present.\n",
        "properties": {
          "space_id": {
            "$ref": "#/components/schemas/SpaceId"
          },
          "project_id": {
            "$ref": "#/components/schemas/ProjectId"
          }
        }
      },
      "TextExtractionMetadata": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceMetaSimple"
          },
          {
            "$ref": "#/components/schemas/ResourceSpaceProjectMetadata"
          }
        ]
      },
      "CosDataConnection": {
        "type": "object",
        "description": "Contains a set of location fields specific to each data source.\n",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the connection asset that contains the credentials required to access the data.\n"
          }
        },
        "required": [
          "id"
        ]
      },
      "CosDataLocation": {
        "type": "object",
        "description": "Contains a set of fields specific to each connection.\n",
        "properties": {
          "file_name": {
            "type": "string",
            "description": "The name of the file. If multiple files are expected, for the output only, then the\n`file_name` must specify a directory and the value must end with a trailing `/`.\n",
            "example": "/results/"
          },
          "bucket": {
            "type": "string",
            "description": "Can be used to override the bucket name from the connection asset.\n"
          }
        },
        "required": [
          "file_name"
        ]
      },
      "TextExtractionDataReference": {
        "type": "object",
        "description": "A reference to data.\n",
        "properties": {
          "type": {
            "description": "The data source type.\n",
            "type": "string",
            "enum": [
              "connection_asset"
            ]
          },
          "connection": {
            "$ref": "#/components/schemas/CosDataConnection"
          },
          "location": {
            "$ref": "#/components/schemas/CosDataLocation"
          }
        },
        "required": [
          "type"
        ]
      },
      "TextExtractionLanguagesList": {
        "type": "array",
        "description": "Set of languages to be expected in the document.\nThe language codes follow `ISO 639` where possible.\nSee the documentation for the currently supported languages.\n",
        "items": {
          "type": "string",
          "description": "A language that is expected in the document.\n"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "TextExtractionSemanticKvpField": {
        "type": "object",
        "description": "A mapping of fields to identify within the schema, where each key is the short-form name of the field, and the corresponding value is an object is a schema as defined below.\n",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of the field to identify.\n"
          },
          "example": {
            "type": "string",
            "description": "An example value to help inform the LLM of structure and format.\n"
          },
          "available_options": {
            "type": "array",
            "description": "Required for inferred fields to provide the available_options list of values to return from.\n",
            "items": {
              "type": "string",
              "description": "Provide a closed list of valid values to return and reduces the likelihood of model hallucinations.\n"
            }
          }
        }
      },
      "TextExtractionSchema": {
        "type": "object",
        "description": "A custom schemas.\n",
        "properties": {
          "document_type": {
            "type": "string",
            "description": "Should be a short one or two word title like Passport or Bill Of Lading.\n"
          },
          "document_description": {
            "type": "string",
            "description": "Should be one or two sentences to ensure the LLM gets an accurate understanding.\n"
          },
          "target_image_width": {
            "type": "integer",
            "description": "Specifies if the input image should be downscaled.\nDefaults to the value defined in the `semantic_config` section.\n"
          },
          "enable_text_hints": {
            "type": "boolean",
            "description": "Determines whether to use text hints when extracting values for this schema and the generic KVPs.\nDefaults to the value defined in the `semantic_config` section.\n"
          },
          "enable_generic_kvp": {
            "type": "boolean",
            "description": "Indicates whether to perform generic Key-Value Pair (KVP) extraction and output the generic KVPs\nalong with the semantic KVPs extracted with this custom schema.\nDefaults to the value defined in the `semantic_config` section.\n"
          },
          "fields": {
            "$ref": "#/components/schemas/TextExtractionSemanticKvpField"
          }
        },
        "required": [
          "document_type",
          "document_description"
        ]
      },
      "TextExtractionSemanticConfig": {
        "type": "object",
        "description": "Properties related to semantic config.\n",
        "properties": {
          "target_image_width": {
            "type": "integer",
            "default": -1,
            "description": "Specifies if the input image should be downscaled.\n"
          },
          "enable_text_hints": {
            "type": "boolean",
            "default": true,
            "description": "Determines whether to use text hints when extracting values—both for the schema’s predefined keys and for generic KVP extraction.\n"
          },
          "enable_generic_kvp": {
            "type": "boolean",
            "default": true,
            "description": "Indicates whether to perform generic Key-Value Pair (KVP) extraction, in addition to the semantic KVP extraction performed with the predefined schemas.\n"
          },
          "schemas": {
            "type": "array",
            "description": "Specifies custom schemas that should be used for semantic KVP extraction, outside the predefined schemas.\n",
            "items": {
              "$ref": "#/components/schemas/TextExtractionSchema"
            }
          }
        }
      },
      "TextExtractionParameters": {
        "type": "object",
        "description": "The parameters for the text extraction.\n",
        "properties": {
          "requested_outputs": {
            "type": "array",
            "description": "A list of requested outputs.\n",
            "items": {
              "type": "string",
              "description": "A requested output.\n",
              "enum": [
                "assembly",
                "html",
                "md",
                "plain_text",
                "page_images"
              ]
            },
            "default": [
              "plain_text"
            ]
          },
          "mode": {
            "type": "string",
            "description": "Which processing mode to use for this request.\n",
            "enum": [
              "standard",
              "high_quality"
            ],
            "default": "standard"
          },
          "ocr_mode": {
            "type": "string",
            "description": "If OCR should be used when processing a document. An empty value allows the service to select the best option for your processing mode.\n- `enabled`: OCR is run on embedded images, OCR is only run if no programmatic text could be extracted from the area.\n- `disabled`: OCR is not run, no information is extracted from images or scanned documents.\n- `forced`: WDU will take a picture of the page and run OCR across it, this applies to all documents even purely programmatic ones.",
            "enum": [
              "disabled",
              "enabled",
              "forced"
            ]
          },
          "languages": {
            "$ref": "#/components/schemas/TextExtractionLanguagesList"
          },
          "auto_rotation_correction": {
            "type": "boolean",
            "description": "Should the service attempt to fix a rotated page or image.\n",
            "default": false
          },
          "create_embedded_images": {
            "type": "string",
            "description": "If the service should return embedded images in the output markdown and JSON formats.\n",
            "enum": [
              "disabled",
              "enabled_placeholder",
              "enabled_text",
              "enabled_verbalization",
              "enabled_verbalization_all"
            ],
            "default": "disabled"
          },
          "output_dpi": {
            "type": "number",
            "description": "The DPI for extracted images.\n",
            "default": 72
          },
          "output_tokens_and_bbox": {
            "type": "boolean",
            "description": "Disables returning the individual tokens and bounding boxes structures. Bounding boxes may still be returned for other structures.\n",
            "default": true
          },
          "kvp_mode": {
            "type": "string",
            "description": "Which version of KVP should be used when processing, if not set then KVP is disabled.\nSee the documentation for more information about the available modes.\n",
            "enum": [
              "invoice",
              "ubill",
              "generic_with_semantic"
            ]
          },
          "semantic_config": {
            "$ref": "#/components/schemas/TextExtractionSemanticConfig"
          }
        }
      },
      "TextExtractionStepOcr": {
        "type": "object",
        "description": "The OCR text extraction step.\n",
        "properties": {
          "languages_list": {
            "$ref": "#/components/schemas/TextExtractionLanguagesList"
          }
        },
        "deprecated": true
      },
      "TextExtractionStepTablesProcessing": {
        "type": "object",
        "description": "The tables processing text extraction step.\n",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Should tables be processed for text extraction.\n",
            "default": true,
            "deprecated": true
          }
        },
        "deprecated": true
      },
      "TextExtractionSteps": {
        "type": "object",
        "description": "The steps for the text extraction pipeline.\n\nUse `parameters` instead.\n",
        "properties": {
          "ocr": {
            "$ref": "#/components/schemas/TextExtractionStepOcr"
          },
          "tables_processing": {
            "$ref": "#/components/schemas/TextExtractionStepTablesProcessing"
          }
        },
        "deprecated": true
      },
      "TextExtractionEntity": {
        "type": "object",
        "description": "The document details for the text extraction.\n",
        "required": [
          "document_reference",
          "results_reference"
        ],
        "properties": {
          "document_reference": {
            "$ref": "#/components/schemas/TextExtractionDataReference"
          },
          "results_reference": {
            "$ref": "#/components/schemas/TextExtractionDataReference"
          },
          "parameters": {
            "$ref": "#/components/schemas/TextExtractionParameters"
          },
          "steps": {
            "$ref": "#/components/schemas/TextExtractionSteps"
          },
          "assembly_json": {
            "deprecated": true,
            "type": "object",
            "description": "Set this as an empty object to specify `json` output.\n\nUse `parameters.requested_outputs` instead.\n",
            "default": {}
          },
          "assembly_md": {
            "deprecated": true,
            "type": "object",
            "description": "Set this as an empty object to specify `markdown` output.\n\nUse `parameters.requested_outputs` instead.\n",
            "example": {}
          },
          "custom": {
            "$ref": "#/components/schemas/Custom"
          }
        }
      },
      "ServiceError": {
        "type": "object",
        "description": "A service error message.\n",
        "properties": {
          "code": {
            "type": "string",
            "description": "A simple code that should convey the general sense of the error.\n"
          },
          "message": {
            "type": "string",
            "description": "The message that describes the error.\n"
          },
          "more_info": {
            "type": "string",
            "description": "A URL to a more detailed explanation when available.\n"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "TextExtractionResults": {
        "type": "object",
        "description": "The current status of the text extraction.\n",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the request.\n",
            "enum": [
              "submitted",
              "uploading",
              "running",
              "downloading",
              "downloaded",
              "completed",
              "failed"
            ]
          },
          "running_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the request is successfully running on the processor.\n"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the request completed or failed.\n"
          },
          "number_pages_processed": {
            "type": "integer",
            "description": "The number of pages that have been processed in the document.\nIf the status is `completed` then this is the number of pages\nthat will be billed.\n"
          },
          "total_pages": {
            "type": "integer",
            "description": "The total number of pages to be processed.\n"
          },
          "location": {
            "type": "array",
            "description": "The location of the output files that were produced.\n",
            "items": {
              "type": "string"
            }
          },
          "error": {
            "$ref": "#/components/schemas/ServiceError"
          }
        },
        "required": [
          "status",
          "number_pages_processed"
        ]
      },
      "TextExtractionResource": {
        "type": "object",
        "description": "The text extraction resource.\n",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/TextExtractionMetadata"
          },
          "entity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TextExtractionEntity"
              },
              {
                "type": "object",
                "properties": {
                  "results": {
                    "$ref": "#/components/schemas/TextExtractionResults"
                  }
                },
                "required": [
                  "results"
                ]
              }
            ]
          }
        }
      },
      "TextExtractionResources": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "type": "object",
            "description": "Pagination information and list of resources.\n",
            "properties": {
              "resources": {
                "type": "array",
                "description": "A list of resources.\n",
                "items": {
                  "$ref": "#/components/schemas/TextExtractionResource"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ],
        "description": "A paginated list of resources.\n"
      },
      "EntityRequestSpaceProjectOnly": {
        "type": "object",
        "description": "The properties that are part of a request that supports spaces and projects.\nEither `space_id` or `project_id` has to be provided and is mandatory.\n",
        "properties": {
          "project_id": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "space_id": {
            "$ref": "#/components/schemas/SpaceId"
          }
        }
      },
      "TextExtractionRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TextExtractionEntity"
          },
          {
            "$ref": "#/components/schemas/EntityRequestSpaceProjectOnly"
          }
        ]
      },
      "TextExtractionResponse": {
        "type": "object",
        "description": "The text extraction response.\n",
        "allOf": [
          {
            "$ref": "#/components/schemas/TextExtractionResource"
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ]
      },
      "ModerationInputProperties": {
        "type": "object",
        "description": "The properties for the moderation. Each type of moderation\nmay have additional properties that are specific to that moderation.\n",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/TextModeration"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "ModerationHapInputProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModerationInputProperties"
          },
          {
            "$ref": "#/components/schemas/HapProperties"
          }
        ]
      },
      "ModerationPiiInputProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ModerationInputProperties"
          },
          {
            "$ref": "#/components/schemas/PiiProperties"
          }
        ]
      },
      "TextChatMessageSystem": {
        "description": "The definition of a system message.\n",
        "allOf": [
          {
            "$ref": "#/components/schemas/TextChatMessage"
          },
          {
            "type": "object",
            "description": "The definition of a system message.\n",
            "properties": {
              "content": {
                "type": "string",
                "description": "The contents of the system message.\n"
              },
              "name": {
                "$ref": "#/components/schemas/TextChatMessageFieldName"
              }
            },
            "required": [
              "content"
            ]
          }
        ]
      },
      "TextChatMessages": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/TextChatMessageAssistant"
          },
          {
            "$ref": "#/components/schemas/TextChatMessageControl"
          },
          {
            "$ref": "#/components/schemas/TextChatMessageSystem"
          },
          {
            "$ref": "#/components/schemas/TextChatMessageTool"
          },
          {
            "$ref": "#/components/schemas/TextChatMessageUser"
          }
        ],
        "discriminator": {
          "propertyName": "role",
          "mapping": {
            "assistant": "#/components/schemas/TextChatMessageAssistant",
            "control": "#/components/schemas/TextChatMessageControl",
            "system": "#/components/schemas/TextChatMessageSystem",
            "tool": "#/components/schemas/TextChatMessageTool",
            "user": "#/components/schemas/TextChatMessageUser"
          }
        }
      },
      "TextChatResponseFormat": {
        "type": "object",
        "description": "The chat response format parameters.\n",
        "properties": {
          "type": {
            "type": "string",
            "description": "Used to enable JSON mode, which guarantees the message the model generates is valid JSON.\n\n**Important:** when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message.\nWithout this, the model may generate an unending stream of whitespace until the generation reaches the token limit,\nresulting in a long-running and seemingly \"stuck\" request.\nAlso note that the message content may be partially cut off if `finish_reason=\"length\"`,\nwhich indicates the generation exceeded `max_tokens` or the conversation exceeded the max context length.\n\n- `text` : **Will not** create a JSON structured output.\n- `json_object` : User will get a JSON structured output, but the schema is not guranteed.\n- `json_schema` : User needs to declare the `json_schema` object to provide the desired JSON schema in order to get a matched response.\n",
            "enum": [
              "text",
              "json_object",
              "json_schema"
            ]
          },
          "json_schema": {
            "type": "object",
            "description": "User-defined JSON schema object with optional parameters to enforce structured output.\n\n**Important:** this field will only applied when `response_format`.`type` is set to `json_schema`.\n",
            "properties": {
              "name": {
                "type": "string",
                "description": "A customized name for the JSON schema.\n"
              },
              "schema": {
                "type": "object",
                "description": "To ensure structured responses from the model, user needs to define a JSON schema to define our output structure, which specifies the fields, their types, and which ones are required.\n"
              },
              "strict": {
                "type": "boolean",
                "description": "Setting `strict` to **true** will enforce the schema. Setting `strict` to **false** will allow the model to return additional fields that are not specified in the schema.\n"
              }
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "TextChatParameters": {
        "type": "object",
        "description": "The parameters specific to chat.\n",
        "properties": {
          "frequency_penalty": {
            "type": "number",
            "description": "Positive values penalize new tokens based on their existing frequency in the text so far,\ndecreasing the model's likelihood to repeat the same line verbatim.\n",
            "minimum": -2,
            "exclusiveMinimum": true,
            "maximum": 2,
            "exclusiveMaximum": true,
            "default": 0,
            "nullable": true
          },
          "logit_bias": {
            "type": "object",
            "description": "Increasing or decreasing probability of tokens being selected during generation;\na positive bias makes a token more likely to appear, while a negative bias makes it less likely.\n",
            "example": {
              "1003": -100,
              "1004": -100
            }
          },
          "logprobs": {
            "type": "boolean",
            "description": "Whether to return log probabilities of the output tokens or not.\nIf true, returns the log probabilities of each output token returned in the content of message.\n",
            "default": false,
            "nullable": true
          },
          "top_logprobs": {
            "type": "integer",
            "description": "An integer specifying the number of most likely tokens to return at each token position,\neach with an associated log probability.\nThe option `logprobs` must be set to `true` if this parameter is used.\n",
            "minimum": 0,
            "maximum": 20,
            "nullable": true
          },
          "max_completion_tokens": {
            "type": "integer",
            "description": "The maximum number of tokens that can be generated in the chat completion.\nThe total length of input tokens and generated tokens is limited by the model's context length.\nSet to 0 for the model's configured max generated tokens.\n",
            "nullable": true,
            "default": 1024
          },
          "max_tokens": {
            "type": "integer",
            "description": "The maximum number of tokens that can be generated in the chat completion.\nThe total length of input tokens and generated tokens is limited by the model's context length.\nSet to 0 for the model's configured max generated tokens.\n\nThis value is now deprecated in favor of `max_completion_tokens`. If specified together with `max_completion_tokens`,\n`max_tokens` will be ignored.\n",
            "nullable": true,
            "default": 1024
          },
          "n": {
            "type": "integer",
            "description": "How many chat completion choices to generate for each input message.\nNote that you will be charged based on the number of generated tokens across all of the choices.\nKeep n as 1 to minimize costs.\n",
            "nullable": true,
            "default": 1
          },
          "presence_penalty": {
            "type": "number",
            "description": "Positive values penalize new tokens based on whether they appear in the text so far,\nincreasing the model's likelihood to talk about new topics.\n",
            "minimum": -2,
            "exclusiveMinimum": true,
            "maximum": 2,
            "exclusiveMaximum": true,
            "default": 0,
            "nullable": true
          },
          "response_format": {
            "$ref": "#/components/schemas/TextChatResponseFormat"
          },
          "seed": {
            "type": "integer",
            "description": "Random number generator seed to use in sampling mode for experimental repeatability.\n",
            "example": 41
          },
          "stop": {
            "type": "array",
            "minItems": 0,
            "maxItems": 4,
            "uniqueItems": true,
            "description": "Stop sequences are one or more strings which will cause the text generation to stop if/when they are produced as part of the output.\nStop sequences encountered prior to the minimum number of tokens being generated will be ignored.\n",
            "example": [
              "this",
              "the"
            ],
            "items": {
              "type": "string"
            }
          },
          "temperature": {
            "type": "number",
            "description": "What sampling temperature to use,. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.\n\nWe generally recommend altering this or `top_p` but not both.\n",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 2,
            "exclusiveMaximum": true,
            "default": 1,
            "nullable": true
          },
          "top_p": {
            "type": "number",
            "description": "An alternative to sampling with temperature, called nucleus sampling,\nwhere the model considers the results of the tokens with top_p probability mass.\nSo 0.1 means only the tokens comprising the top 10% probability mass are considered.\n\nWe generally recommend altering this or `temperature` but not both.\n",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "default": 1,
            "nullable": true
          },
          "time_limit": {
            "type": "integer",
            "description": "Time limit in milliseconds - if not completed within this time, generation will stop.\nThe text generated so far will be returned along with the `TIME_LIMIT`` stop reason.\nDepending on the users plan, and on the model being used, there may be an enforced maximum time limit.\n",
            "minimum": 0,
            "exclusiveMinimum": true,
            "example": 600000
          }
        }
      },
      "TextChatRequest": {
        "allOf": [
          {
            "type": "object",
            "description": "The request for chat.\n\nNote that some models might not support all the tool calling functionality.\nIn the case that the functionality is not supported the API will return\nan error code.\n\nOnly one of `tool_choice_option` or `tool_choice` must be present.\n",
            "properties": {
              "model_id": {
                "type": "string",
                "description": "The model to use for the chat completion.\n\nPlease refer to the [list of\nmodels](https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/fm-models.html?context=wx).\n"
              },
              "messages": {
                "type": "array",
                "description": "The messages for this chat session.\n",
                "items": {
                  "$ref": "#/components/schemas/TextChatMessages"
                },
                "minItems": 1,
                "maxItems": 1000
              },
              "space_id": {
                "$ref": "#/components/schemas/SpaceId"
              },
              "project_id": {
                "$ref": "#/components/schemas/ProjectId"
              },
              "tools": {
                "type": "array",
                "description": "Tool functions that can be called with the response.\n",
                "items": {
                  "$ref": "#/components/schemas/TextChatParameterTools"
                },
                "minItems": 1,
                "maxItems": 128
              },
              "tool_choice_option": {
                "$ref": "#/components/schemas/TextChatToolChoiceOption"
              },
              "tool_choice": {
                "$ref": "#/components/schemas/TextChatToolChoiceTool"
              }
            },
            "required": [
              "model_id",
              "messages"
            ]
          },
          {
            "$ref": "#/components/schemas/TextChatParameters"
          }
        ]
      },
      "JSONContentSchema": {
        "type": "object",
        "description": "A JSON schema, see the [JSON Schema reference](https://json-schema.org/learn/getting-started-step-by-step)\nfor documentation about the format.\n",
        "additionalProperties": {}
      },
      "JSONContentDefinition": {
        "type": "object",
        "description": "The schema for a given content type.\nEach property defines the content type and the sub-object\nis the JSON schema that describes the content.\n",
        "additionalProperties": {
          "$ref": "#/components/schemas/JSONContentSchema"
        }
      },
      "AIServiceDocumentation": {
        "type": "object",
        "description": "The documentation of the AI service request body and response body.\n",
        "properties": {
          "request": {
            "$ref": "#/components/schemas/JSONContentDefinition"
          },
          "response": {
            "$ref": "#/components/schemas/JSONContentDefinition"
          }
        }
      },
      "AIServiceEntity": {
        "type": "object",
        "description": "The details of the AI service to be created.\n",
        "properties": {
          "software_spec": {
            "$ref": "#/components/schemas/SoftwareSpecRel"
          },
          "code_type": {
            "type": "string",
            "description": "The type that allows the deployment service to know\nhow to setup the code during deployment.\n",
            "enum": [
              "python"
            ]
          },
          "documentation": {
            "$ref": "#/components/schemas/AIServiceDocumentation"
          },
          "custom": {
            "$ref": "#/components/schemas/Custom"
          },
          "tooling": {
            "$ref": "#/components/schemas/Tooling"
          }
        },
        "required": [
          "software_spec"
        ]
      },
      "AIServiceResource": {
        "type": "object",
        "description": "The information for a flow.\n",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/ResourceMeta"
          },
          "entity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AIServiceEntity"
              }
            ]
          },
          "system": {
            "$ref": "#/components/schemas/SystemDetails"
          }
        },
        "required": [
          "metadata",
          "entity"
        ]
      },
      "AIServiceResources": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "type": "object",
            "description": "Pagination information and list of AI services.\n",
            "properties": {
              "resources": {
                "type": "array",
                "description": "A list of AI services.\n",
                "items": {
                  "$ref": "#/components/schemas/AIServiceResource"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ],
        "description": "A paginated list of AI services.\n"
      },
      "EntityRequestSpaceBody": {
        "type": "object",
        "description": "The properties that are part of a request that supports spaces.\n",
        "properties": {
          "space_id": {
            "$ref": "#/components/schemas/SpaceIdOnly"
          },
          "name": {
            "type": "string",
            "description": "The name of the resource.\n",
            "example": "my-resource"
          },
          "description": {
            "type": "string",
            "description": "A description of the resource.\n",
            "example": "This is my first resource."
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        },
        "required": [
          "space_id",
          "name"
        ]
      },
      "AIServiceRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRequestSpaceBody"
          },
          {
            "$ref": "#/components/schemas/AIServiceEntity"
          }
        ]
      },
      "AIServiceContentMetadata": {
        "type": "object",
        "description": "The metadata related to the attachment.\n",
        "properties": {
          "attachment_id": {
            "type": "string",
            "description": "The content id for the attachment.\n",
            "example": "fd45606f-8098-459c-8961-32b136123fgc"
          }
        },
        "required": [
          "attachment_id"
        ]
      },
      "RevisionEntitySpaceProjectRequest": {
        "type": "object",
        "description": "The details for the revision.\n",
        "properties": {
          "space_id": {
            "$ref": "#/components/schemas/SpaceId"
          },
          "project_id": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "commit_message": {
            "type": "string",
            "description": "An optional commit message for the revision.\n"
          }
        },
        "example": {
          "space_id": "3fc54cf1-252f-424b-b52d-5cdd9814987f",
          "commit_message": "Updated for TF 2.0"
        }
      },
      "TextDetectionScore": {
        "type": "number",
        "format": "float",
        "description": "The threshold probability that this is a real match.\n",
        "minimum": 0,
        "maximum": 1,
        "example": 0.823
      },
      "TextDetectionDetectionItem": {
        "type": "object",
        "description": "Detection details.\n",
        "properties": {
          "detection_type": {
            "type": "string",
            "description": "The type of the detection identified.\n"
          },
          "detection": {
            "type": "string",
            "description": "The detected string.\n"
          },
          "score": {
            "$ref": "#/components/schemas/TextDetectionScore"
          }
        },
        "required": [
          "detection_type",
          "detection",
          "score"
        ]
      },
      "TextDetectionContextPosition": {
        "type": "object",
        "description": "The text that was detected.\n",
        "properties": {
          "start": {
            "type": "integer",
            "description": "The position in the content where the detected text starts.\n"
          },
          "end": {
            "type": "integer",
            "description": "The position in the content where the detected text ends.\n"
          }
        },
        "required": [
          "start",
          "end"
        ]
      },
      "TextDetectionContentItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TextDetectionDetectionItem"
          },
          {
            "$ref": "#/components/schemas/TextDetectionContextPosition"
          }
        ]
      },
      "TextDetectionEvidenceObject": {
        "type": "object",
        "description": "The details for a given evidence.\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name for the evidence.\n"
          },
          "value": {
            "type": "string",
            "description": "The value for the evidence.\n"
          },
          "score": {
            "$ref": "#/components/schemas/TextDetectionScore"
          }
        },
        "required": [
          "name",
          "value",
          "score"
        ]
      },
      "TextDetectionChildEvidence": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TextDetectionEvidenceObject"
          },
          {
            "type": "object",
            "description": "Child evidence.\n",
            "properties": {
              "evidence": {
                "type": "array",
                "description": "The child evidence details.\n",
                "items": {
                  "$ref": "#/components/schemas/TextDetectionEvidenceObject"
                },
                "minItems": 0,
                "maxItems": 100
              }
            }
          }
        ]
      },
      "TextDetectionEvidenceReference": {
        "type": "object",
        "description": "Detection evidence.\n",
        "properties": {
          "evidence": {
            "type": "array",
            "description": "The evidence details.\n",
            "items": {
              "$ref": "#/components/schemas/TextDetectionChildEvidence"
            },
            "minItems": 0,
            "maxItems": 100
          }
        },
        "required": [
          "evidence"
        ]
      },
      "TextDetectionContextItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TextDetectionDetectionItem"
          },
          {
            "$ref": "#/components/schemas/TextDetectionEvidenceReference"
          }
        ]
      },
      "TSForecastResource": {
        "type": "object",
        "description": "Input necessary for performing inference. These inputs\nidentify things like which model to use, the data payload\nyou are passing to the model, and other parameters which affect\nthe behavior of the inference operation.\n",
        "example": {
          "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
          "schema": {
            "timestamp_column": "date",
            "id_columns": [
              "ID1"
            ]
          },
          "data": {
            "date": [
              "2020-01-01T00:00:00",
              "2020-01-01T01:00:00",
              "2020-01-01T02:00:00"
            ],
            "ID1": [
              "D1",
              "D1",
              "D1"
            ],
            "TARGET1": [
              1.46,
              2.34,
              4.55
            ]
          },
          "model_id": "ibm/ttm-1024-96-r2"
        },
        "properties": {
          "model_id": {
            "type": "string",
            "description": "The model to be used for generating a forecast. You can get the list of models by using\n[Foundation Model Specs](#list-foundation-model-specs) with\n`filters=function_time_series_forecast`.\n",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^\\S+$"
          },
          "parameters": {
            "$ref": "#/components/schemas/TSCommonForecastParameters"
          },
          "data": {
            "type": "object",
            "description": "A payload of data matching `schema`.\nWe assume the following about your data:\n  * All timeseries are of equal length and are uniform in nature (the time difference\nbetween two successive rows is constant). This implies that there are no missing rows of data;\n  * The data meet the minimum model-dependent historical context length which\n  can be 512 or more rows per timeseries;\n\nNote that the example payloads shown are for illustration purposes only. An actual payload\nwould necessary be much larger to meet minimum model-specific context lengths.\n",
            "additionalProperties": {}
          },
          "schema": {
            "$ref": "#/components/schemas/TSForecastInputSchema"
          }
        },
        "required": [
          "model_id",
          "data",
          "schema"
        ]
      },
      "TSForecastRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRequestSpaceProjectOnly"
          },
          {
            "$ref": "#/components/schemas/TSForecastResource"
          }
        ]
      },
      "DocumentExtractionObjectLocation": {
        "type": "object",
        "description": "A reference to data.\n",
        "properties": {
          "type": {
            "description": "The data source type. This field must be set to `container`.\n",
            "type": "string",
            "enum": [
              "container"
            ],
            "example": "container"
          },
          "location": {
            "$ref": "#/components/schemas/DataLocation"
          }
        },
        "required": [
          "type",
          "location"
        ]
      },
      "FilePaths": {
        "type": "object",
        "properties": {
          "filepaths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "This is a vector of strings where each string will be the filepath of the .md file stored in the user's github repository.\n",
            "example": "results/text_extraction/1.md"
          }
        }
      },
      "Commit": {
        "type": "object",
        "properties": {
          "commit": {
            "type": "string",
            "minLength": 40,
            "maxLength": 40,
            "description": "The hash of the git commit when the results were saved.\n"
          }
        }
      },
      "ObjectLocationGithub": {
        "type": "object",
        "description": "A reference to data.\n",
        "properties": {
          "type": {
            "description": "The data source type, for now only `github` is supported.\n",
            "type": "string",
            "enum": [
              "github"
            ],
            "example": "github"
          },
          "location": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataLocation"
              },
              {
                "$ref": "#/components/schemas/FilePaths"
              },
              {
                "$ref": "#/components/schemas/Commit"
              }
            ]
          }
        },
        "required": [
          "type",
          "location"
        ]
      },
      "DocumentExtractionCommon": {
        "type": "object",
        "description": "The details needed to create document extraction job.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the document.\n"
          },
          "document_references": {
            "type": "array",
            "description": "The documents for text extraction.\n",
            "items": {
              "$ref": "#/components/schemas/DocumentExtractionObjectLocation"
            },
            "minLength": 1
          },
          "results_reference": {
            "$ref": "#/components/schemas/ObjectLocationGithub"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        },
        "required": [
          "name",
          "document_references",
          "results_reference"
        ]
      },
      "DocumentExtractionStatus": {
        "type": "object",
        "description": "Status of the document extraction job.\n",
        "properties": {
          "state": {
            "type": "string",
            "description": "Current state of document extraction.\n",
            "enum": [
              "queued",
              "pending",
              "running",
              "storing",
              "completed_at",
              "failed",
              "canceled"
            ],
            "example": "running"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the job completed or failed.\n"
          }
        },
        "required": [
          "state"
        ]
      },
      "DocumentExtractionResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentExtractionCommon"
          },
          {
            "type": "object",
            "description": "The document extraction job properties.\n",
            "properties": {
              "status": {
                "$ref": "#/components/schemas/DocumentExtractionStatus"
              }
            }
          }
        ]
      },
      "DocumentExtractionResource": {
        "type": "object",
        "description": "The response from getting a specified document extraction job.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/ResourceMeta"
          },
          "entity": {
            "$ref": "#/components/schemas/DocumentExtractionResponse"
          },
          "system": {
            "$ref": "#/components/schemas/SystemDetails"
          }
        }
      },
      "DocumentExtractionResources": {
        "type": "object",
        "description": "The response of getting all document extraction jobs.",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "The number of items to return in each page.\n",
            "example": 10,
            "minimum": 1,
            "maximum": 200
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentExtractionResource"
            }
          }
        },
        "required": [
          "limit"
        ]
      },
      "DocumentExtractionRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentExtractionCommon"
          },
          {
            "$ref": "#/components/schemas/EntityRequestSpaceProjectOnly"
          }
        ]
      },
      "SyntheticDataGenerationSample": {
        "type": "object",
        "description": "The Synthetic Data Generation sample metrics.\n",
        "properties": {
          "knowledge": {
            "description": "The knowledge metric value.",
            "type": "integer"
          },
          "skills": {
            "description": "The skills metric value.",
            "type": "integer"
          },
          "total": {
            "description": "The combined value of the metric values.",
            "type": "integer"
          }
        }
      },
      "SyntheticDataGenerationMetric": {
        "type": "object",
        "description": "The Synthetic Data Generation metrics.\n",
        "properties": {
          "samples": {
            "$ref": "#/components/schemas/SyntheticDataGenerationSample"
          }
        }
      },
      "SyntheticDataGenerationLocations": {
        "type": "object",
        "description": "The Synthetic Data Generation location metrics.\n",
        "properties": {
          "knowledge": {
            "description": "The path to the created Knowledge file.",
            "type": "string"
          },
          "skills": {
            "description": "The path to the created Skills file.",
            "type": "string"
          },
          "logs": {
            "description": "The path to the created Logs file.",
            "type": "string"
          },
          "artifacts": {
            "description": "The path to the created Artifacts file.",
            "type": "string"
          }
        }
      },
      "SyntheticDataGenerationContext": {
        "type": "object",
        "description": "The Synthetic Data Generation context.\n",
        "properties": {
          "samples": {
            "$ref": "#/components/schemas/SyntheticDataGenerationLocations"
          },
          "locations": {
            "$ref": "#/components/schemas/DataLocation"
          }
        }
      },
      "SyntheticDataGenerationMetrics": {
        "type": "object",
        "description": "All the Synthetic Data Generation metrics.\n",
        "properties": {
          "synthetic_data_generation_metrics": {
            "$ref": "#/components/schemas/SyntheticDataGenerationMetric"
          },
          "context": {
            "$ref": "#/components/schemas/SyntheticDataGenerationContext"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the metrics were gathered.\n",
            "minLength": 24,
            "maxLength": 24,
            "example": "2024-02-28T11:30:26.000Z"
          }
        }
      },
      "SyntheticDataGenerationStatus": {
        "type": "object",
        "description": "The status of a Synthetic Data Generation job.\n",
        "properties": {
          "state": {
            "type": "string",
            "description": "The status of the job.\n",
            "enum": [
              "queued",
              "pending",
              "running",
              "storing",
              "completed",
              "failed",
              "canceled"
            ]
          },
          "metrics": {
            "type": "array",
            "description": "The computed metrics.\n",
            "items": {
              "$ref": "#/components/schemas/SyntheticDataGenerationMetrics"
            },
            "minItems": 0
          },
          "step": {
            "type": "string",
            "description": "The step the job is currently in.\n"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the job completed.\n",
            "minLength": 24,
            "maxLength": 24,
            "example": "2024-02-28T11:30:26.000Z"
          },
          "running_at": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the job completed.\n",
            "minLength": 24,
            "maxLength": 24,
            "example": "2024-02-28T11:30:26.000Z"
          },
          "locations": {
            "$ref": "#/components/schemas/DataLocation"
          }
        },
        "required": [
          "state"
        ]
      },
      "SyntheticDataGenerationResponse": {
        "type": "object",
        "description": "The synthetic data generation job properties.",
        "properties": {
          "results_reference": {
            "$ref": "#/components/schemas/ObjectLocation"
          },
          "status": {
            "$ref": "#/components/schemas/SyntheticDataGenerationStatus"
          },
          "data_reference": {
            "$ref": "#/components/schemas/ObjectLocation"
          }
        }
      },
      "SyntheticDataGenerationResource": {
        "type": "object",
        "description": "The response from getting a specified synthetic data generation job.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/ResourceMeta"
          },
          "entity": {
            "$ref": "#/components/schemas/SyntheticDataGenerationResponse"
          },
          "system": {
            "$ref": "#/components/schemas/SystemDetails"
          }
        }
      },
      "SyntheticDataGenerationResources": {
        "type": "object",
        "description": "The response of getting all synthetic data generation jobs.",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "The number of items to return in each page.\n",
            "example": 10
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyntheticDataGenerationResource"
            }
          }
        },
        "required": [
          "limit"
        ]
      },
      "SyntheticDataGenerationRequest": {
        "type": "object",
        "description": "The details needed to create synthetic data generation job.\n\nThe `data_reference.type` must be `taxonomy_asset` and the `results_reference.type`\nwill normally be something like `connection_asset` or `data_asset`.\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the data.\n\nThe value must be a lowercase alphanumeric value but it can also have non-consecutive dashes (-)\nand underscores (_). The value must start and end with an alphanumeric character.\n",
            "minLength": 1,
            "maxLength": 250,
            "pattern": "^[^><%\\\\]*$",
            "example": "example-name"
          },
          "space_id": {
            "$ref": "#/components/schemas/SpaceId"
          },
          "project_id": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "data_reference": {
            "$ref": "#/components/schemas/ObjectLocation"
          },
          "results_reference": {
            "$ref": "#/components/schemas/ObjectLocation"
          }
        },
        "required": [
          "name"
        ]
      },
      "TaxonomyStatus": {
        "type": "object",
        "description": "The status of a Taxonomy job.\n",
        "properties": {
          "state": {
            "type": "string",
            "description": "The status of the job.\n",
            "enum": [
              "queued",
              "pending",
              "running",
              "storing",
              "completed",
              "failed",
              "canceled"
            ],
            "example": "running"
          },
          "completed_at": {
            "type": "string",
            "description": "The timestamp when the job completed.\n",
            "minLength": 24,
            "maxLength": 24,
            "example": "2024-02-28T11:33:58.000Z"
          },
          "running_at": {
            "type": "string",
            "description": "Date and Time in which current training state has started.\n",
            "minLength": 24,
            "maxLength": 24,
            "example": "2024-02-28T11:33:58.000Z"
          }
        }
      },
      "TaxonomyResponse": {
        "type": "object",
        "description": "The Taxonomy entity.\n\n\nThe `data_reference.type` will be `github` and the `results_reference.type` will be set to `taxonomy_asset`.\n",
        "properties": {
          "results_reference": {
            "$ref": "#/components/schemas/ObjectLocation"
          },
          "status": {
            "$ref": "#/components/schemas/TaxonomyStatus"
          },
          "data_reference": {
            "$ref": "#/components/schemas/ObjectLocation"
          }
        }
      },
      "TaxonomyResource": {
        "type": "object",
        "description": "The response fields from a Taxonomy request.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/ResourceMeta"
          },
          "entity": {
            "$ref": "#/components/schemas/TaxonomyResponse"
          },
          "system": {
            "$ref": "#/components/schemas/SystemDetails"
          }
        }
      },
      "TaxonomyResources": {
        "type": "object",
        "description": "The list of Taxonomy jobs in specified project or space.",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "The number of items to return in each page.\n",
            "example": 10
          },
          "resources": {
            "type": "array",
            "description": "The Taxonomy jobs in a project or space.",
            "items": {
              "$ref": "#/components/schemas/TaxonomyResource"
            }
          }
        },
        "required": [
          "limit"
        ]
      },
      "TaxonomyRequest": {
        "type": "object",
        "description": "The request fields to create Taxonomy job.\n\n\nThe `data_reference.type` must be set to `github`.\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the document.\n",
            "minLength": 1,
            "maxLength": 32,
            "pattern": "^[a-zA-Z][a-zA-Z-_]*[a-zA-Z]$"
          },
          "description": {
            "type": "string",
            "description": "The description of the Taxonomy job."
          },
          "space_id": {
            "$ref": "#/components/schemas/SpaceId"
          },
          "project_id": {
            "$ref": "#/components/schemas/ProjectId"
          },
          "data_reference": {
            "$ref": "#/components/schemas/ObjectLocation"
          }
        },
        "required": [
          "name"
        ]
      },
      "EvaluationModelConfig": {
        "type": "object",
        "description": "Settings related to evaluated foundation model.",
        "properties": {
          "model_id": {
            "type": "string",
            "description": "The ID of the pre-installed foundation model. Either `model_id` or `deployment_id` parameter has to be given."
          },
          "deployment_id": {
            "type": "string",
            "description": "The ID of the deployed foundation model. Either `model_id` or `deployment_id` parameter has to be given."
          },
          "generation_parameters": {
            "$ref": "#/components/schemas/TextGenParameters"
          }
        }
      },
      "EvaluationAcademicTask": {
        "type": "object",
        "description": "Definition of industry-based benchmarking task (academic).",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of predefined academic (industry) benchmarking task",
            "example": "bluebench"
          },
          "type": {
            "type": "string",
            "description": "Type of benchmarks used.",
            "enum": [
              "academic"
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of benchmarking task",
            "example": "Bluebench benchmarks for fine-tuned llama model"
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "BenchmarkingRecord": {
        "type": "object",
        "description": "Definition of single benchmarking record.",
        "properties": {
          "input": {
            "type": "string",
            "description": "Input to the model."
          },
          "output": {
            "type": "string",
            "description": "The response to the input."
          },
          "ground_truth": {
            "type": "array",
            "description": "Array of Ground-truth responses for the input.",
            "items": {
              "type": "string"
            }
          },
          "contexts": {
            "type": "array",
            "description": "Array of the input-output contexts relevant for governance tasks.",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "input",
          "output"
        ]
      },
      "EvaluationGovernanceTask": {
        "type": "object",
        "description": "Definition of governance benchmarking task.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of predefined governance benchmarking task (extraction, classification, RAG, etc...)",
            "example": "RAG"
          },
          "type": {
            "type": "string",
            "description": "Type of benchmarks used.",
            "enum": [
              "governance"
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of benchmarking task",
            "example": "RAG governance metrics for my customized RAG Pattern"
          },
          "task_recipe": {
            "type": "object",
            "description": "The properties (recipe) of the task",
            "properties": {
              "evaluation_data": {
                "type": "array",
                "description": "Array of benchmarking records.",
                "items": {
                  "$ref": "#/components/schemas/BenchmarkingRecord"
                }
              },
              "evaluation_data_references": {
                "type": "array",
                "description": "A set of input data references. The input data reference should point to `json` file containing array of records. Each record should be compliant with the `evaluation_data` record defined above (e.g.: `[{\"input\": \"abc\", \"output\": bcd}, {\"input\": \"123\", \"output\": \"456\"}]`).\n",
                "items": {
                  "$ref": "#/components/schemas/AutoAIDataLocation"
                }
              },
              "metrics": {
                "type": "array",
                "description": "List of metrics to be calculated (supported by selected task).",
                "items": {
                  "type": "string",
                  "description": "metric name"
                },
                "example": [
                  "answer_correctness",
                  "faithfulness"
                ]
              }
            }
          }
        },
        "required": [
          "name",
          "type",
          "task_recipe"
        ]
      },
      "EvaluationCustomTask": {
        "type": "object",
        "description": "Definition of custom benchmarking task.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of benchmarking task"
          },
          "type": {
            "type": "string",
            "description": "Type of benchmarks used.",
            "enum": [
              "custom"
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of benchmarking task"
          },
          "task_recipe": {
            "type": "object",
            "description": "The properties (recipe) of the task",
            "properties": {
              "evaluation_data": {
                "type": "array",
                "description": "Array of benchmarking records.",
                "items": {
                  "$ref": "#/components/schemas/BenchmarkingRecord"
                }
              },
              "evaluation_data_references": {
                "type": "array",
                "description": "A set of input data references.\n",
                "items": {
                  "$ref": "#/components/schemas/AutoAIDataLocation"
                }
              },
              "card": {
                "type": "string",
                "description": "ID of a Unitxt card from the Unitxt catalog."
              },
              "template": {
                "type": "string",
                "description": "ID of a Unitxt template from the Unitxt catalog."
              },
              "task": {
                "type": "string",
                "description": "ID of a Unitxt task from the Unitxt catalog."
              },
              "system_prompt": {
                "type": "string",
                "description": "ID of a Unitxt system prompt from the Unitxt catalog."
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of of Unitxt metrics from the Unitxt catalog."
              },
              "format": {
                "type": "string",
                "description": "ID of a Unitxt format from the Unitxt catalog."
              },
              "num_demos": {
                "type": "integer",
                "description": "Number of fewshot to be used."
              },
              "demos_pool_size": {
                "type": "integer",
                "description": "Size of the fewshot pool."
              }
            }
          }
        },
        "required": [
          "name",
          "type",
          "task_recipe"
        ]
      },
      "EvaluationTaskConfig": {
        "type": "object",
        "description": "Settings related to evaluation job.",
        "properties": {
          "tasks": {
            "type": "array",
            "description": "The evaluation tasks to be run.",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/EvaluationAcademicTask"
                },
                {
                  "$ref": "#/components/schemas/EvaluationGovernanceTask"
                },
                {
                  "$ref": "#/components/schemas/EvaluationCustomTask"
                }
              ],
              "discriminator": {
                "propertyName": "type"
              }
            }
          },
          "sample_size": {
            "type": "integer",
            "description": "Sample size limit for given tasks."
          }
        },
        "required": [
          "tasks"
        ]
      },
      "EvaluationRequestEntity": {
        "type": "object",
        "description": "The evaluation request entity.\n",
        "properties": {
          "model_settings": {
            "$ref": "#/components/schemas/EvaluationModelConfig"
          },
          "task_settings": {
            "$ref": "#/components/schemas/EvaluationTaskConfig"
          }
        },
        "required": [
          "task_settings"
        ]
      },
      "EvaluationTaskBenchmarkMetric": {
        "type": "object",
        "description": "The metric for a given property.\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the metric.\n",
            "example": "rougeL"
          },
          "value": {
            "type": "number",
            "description": "The mean value calculated over all records in the dataset.\n",
            "example": 0.3197
          },
          "max": {
            "type": "number",
            "description": "The max value calculated over all records in the dataset.\n",
            "example": 0.5197
          },
          "min": {
            "type": "number",
            "description": "The min value calculated over all records in the dataset.\n",
            "example": 0.197
          },
          "record_level": {
            "type": "array",
            "description": "The metric value calculated per each record in the dataset.\n",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "number",
                  "description": "The metric value calculated per single record in the dataset.\n",
                  "example": 0.2197
                },
                "id": {
                  "type": "string",
                  "description": "The unique identifier of the record.\n",
                  "example": 123456
                }
              }
            }
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "EvaluationTaskBenchmark": {
        "type": "object",
        "description": "The benchmarking result for this task for this model.\n",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of benchmarks used.",
            "example": "academic"
          },
          "name": {
            "type": "string",
            "description": "Name of benchmarks used.",
            "example": "bluebench"
          },
          "description": {
            "type": "string",
            "description": "Description of benchmark used.",
            "example": "MultiLingual Summarization dataset with 1.5M+ article/summary pairs across five languages. Evaluated using rougeL with 5 shots."
          },
          "language": {
            "type": "string",
            "description": "Benchmarked language (multilingual benchmarks). ISO 639 2 letter language code.",
            "example": "fr"
          },
          "dataset": {
            "type": "object",
            "description": "Benchmarking dataset properties.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The benchmarking dataset name.",
                "example": "mlsum.de"
              }
            }
          },
          "prompt": {
            "type": "object",
            "description": "The benchmarking prompt properties.",
            "properties": {
              "number_of_shots": {
                "type": "integer",
                "example": 5
              }
            }
          },
          "metrics": {
            "type": "array",
            "description": "The scores for a given benchmark.\n",
            "items": {
              "$ref": "#/components/schemas/EvaluationTaskBenchmarkMetric"
            }
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        }
      },
      "EvaluationResults": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvaluationTaskBenchmark"
            }
          }
        }
      },
      "EvaluationStatus": {
        "type": "object",
        "description": "Status of the evaluation job.",
        "properties": {
          "running_at": {
            "type": "string",
            "description": "Date and Time in which current evaluation state has started.",
            "example": "2017-01-30T10:11:12Z",
            "format": "date-time"
          },
          "completed_at": {
            "type": "string",
            "description": "Date and Time in which evaluation job had completed.",
            "example": "2017-01-30T10:11:12Z",
            "format": "date-time"
          },
          "state": {
            "type": "string",
            "description": "Current state of evaluation.",
            "enum": [
              "queued",
              "pending",
              "running",
              "completed",
              "failed",
              "canceled"
            ]
          },
          "message": {
            "$ref": "#/components/schemas/Message"
          },
          "failure": {
            "$ref": "#/components/schemas/ApiErrorResponse"
          }
        },
        "required": [
          "state"
        ],
        "example": {
          "state": "completed",
          "running_at": "2023-08-04T13:22:48.000Z",
          "completed_at": "2023-08-04T13:22:55.289Z",
          "message": {
            "level": "info",
            "text": "Evaluation job 360c40f7-ac0c-43ca-a95f-1a5421f93b82 completed"
          }
        }
      },
      "EvaluationResourceEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EvaluationRequestEntity"
          },
          {
            "$ref": "#/components/schemas/EvaluationResults"
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "$ref": "#/components/schemas/EvaluationStatus"
              }
            }
          }
        ]
      },
      "EvaluationEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EvaluationResourceEntity"
          }
        ]
      },
      "EvaluationResource": {
        "type": "object",
        "description": "The response of an AI evaluation job.\n",
        "properties": {
          "metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceMeta"
              }
            ],
            "example": {
              "id": "6213cf1-252f-424b-b52d-5cdd9814956c",
              "name": "my-eval-job",
              "project_id": "12ac4cf1-252f-424b-b52d-5cdd9814987f",
              "owner": "guy",
              "created_at": "2023-08-04T13:22:55.289Z"
            }
          },
          "entity": {
            "$ref": "#/components/schemas/EvaluationEntity"
          },
          "system": {
            "$ref": "#/components/schemas/SystemDetails"
          }
        }
      },
      "EvaluationResourceList": {
        "type": "object",
        "properties": {
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvaluationResource"
            }
          }
        }
      },
      "EvaluationResources": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Pagination"
          },
          {
            "$ref": "#/components/schemas/EvaluationResourceList"
          },
          {
            "$ref": "#/components/schemas/System"
          }
        ]
      },
      "EvaluationRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceRequestFields"
          },
          {
            "$ref": "#/components/schemas/EvaluationRequestEntity"
          }
        ]
      },
      "ProjectIdOnly": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-]*",
        "minLength": 36,
        "maxLength": 36,
        "description": "The project that contains the resource.\n",
        "example": "12ac4cf1-252f-424b-b52d-5cdd9814987f"
      },
      "SDGUnstructuredGenerationBaseEntity": {
        "type": "object",
        "description": "Common platform parameters for creating an unstructured synthetic data generation job.\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the resource.\n",
            "example": "my-resource",
            "minLength": 1,
            "maxLength": 250
          },
          "description": {
            "type": "string",
            "description": "A description of the resource.\n",
            "example": "This is my first resource.",
            "maxLength": 1000
          },
          "project_id": {
            "$ref": "#/components/schemas/ProjectIdOnly"
          }
        },
        "required": [
          "name",
          "project_id"
        ]
      },
      "SDGUnstructuredGenerationParameters": {
        "type": "object",
        "description": "The parameters to guide the generation.\n",
        "properties": {
          "num_outputs_to_generate": {
            "type": "number",
            "minimum": 1,
            "description": "How many QnA pairs to generate.\n"
          }
        }
      },
      "SDGObjectLocation": {
        "type": "object",
        "description": "A reference to data.\n",
        "properties": {
          "type": {
            "description": "The data source type.\n",
            "type": "string",
            "enum": [
              "container"
            ]
          },
          "location": {
            "description": "The location of the data\n",
            "properties": {
              "path": {
                "type": "string",
                "description": "The file name of the data\n"
              }
            }
          }
        },
        "required": [
          "type",
          "location"
        ]
      },
      "SDGUnstructuredGenerationEntity": {
        "type": "object",
        "description": "The details needed to create unstructured synthetic data generation job.\n\nThe `seed_data_reference.type` must be `container` and the `results_reference.type`\nmust also be `container`.\n",
        "properties": {
          "pipeline": {
            "type": "string",
            "description": "The pipeline type.\n",
            "enum": [
              "nl2sql",
              "tool_calling",
              "knowledge"
            ]
          },
          "model_id": {
            "type": "string",
            "description": "A model from the list of certified models that support unstructured generation. Refer to the product documentation to know the list of certified model IDs.\n"
          },
          "parameters": {
            "$ref": "#/components/schemas/SDGUnstructuredGenerationParameters"
          },
          "seed_data_reference": {
            "$ref": "#/components/schemas/SDGObjectLocation"
          },
          "results_reference": {
            "$ref": "#/components/schemas/SDGObjectLocation"
          }
        },
        "required": [
          "pipeline",
          "seed_data_reference",
          "results_reference"
        ]
      },
      "SDGUnstructuredGenerationRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SDGUnstructuredGenerationBaseEntity"
          },
          {
            "$ref": "#/components/schemas/SDGUnstructuredGenerationEntity"
          }
        ]
      },
      "SDGUnstructuredGenerationResponse": {
        "type": "object",
        "description": "The synthetic data generation job properties.",
        "properties": {
          "job": {
            "properties": {
              "configuration": {
                "$ref": "#/components/schemas/SDGUnstructuredGenerationEntity"
              }
            }
          },
          "asset_id": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "minLength": 36,
            "maxLength": 36,
            "description": "The id of the the resource.\n",
            "example": "12ac4cf1-252f-424b-b52d-5cdd9814987f"
          }
        }
      },
      "SDGUnstructuredGenerationResource": {
        "type": "object",
        "description": "The response from getting a specified synthetic data generation job.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/ResourceMeta"
          },
          "entity": {
            "$ref": "#/components/schemas/SDGUnstructuredGenerationResponse"
          }
        }
      },
      "GPUResource": {
        "type": "object",
        "description": "The information for a GPU.\n",
        "properties": {
          "gpu_id": {
            "type": "string",
            "description": "The id of the GPU.\n",
            "example": "1l40s-48g"
          },
          "description": {
            "type": "string",
            "description": "A description of the GPU.\n",
            "example": "Single L40S GPU with 48 GB of memory"
          },
          "gpu_type": {
            "type": "string",
            "description": "The type of the GPU.\n",
            "example": "L40S"
          },
          "gpu_count": {
            "type": "integer",
            "description": "The number of available GPUs for this GPU.\n",
            "example": 1
          },
          "memory_per_unit_gb": {
            "type": "integer",
            "description": "The number of GBs per unit of the GPU.\n",
            "example": 48
          },
          "total_memory_gb": {
            "type": "integer",
            "description": "The total amount of memory of the GPU.\n",
            "example": 48
          },
          "price": {
            "type": "number",
            "description": "The price of the GPU based on the billing field.\n",
            "example": 4.43
          },
          "currency": {
            "type": "string",
            "description": "The billing currency.\n",
            "example": "USD"
          },
          "billing": {
            "type": "string",
            "description": "The billing period.\n",
            "example": "hourly"
          },
          "hardware_spec": {
            "type": "string",
            "description": "The associated hardware spec that should be used to get this GPU.\n",
            "example": "1l40s-48g"
          }
        },
        "required": [
          "gpu_id",
          "gpu_type",
          "memory_per_unit_gb",
          "total_memory_gb",
          "price",
          "currency",
          "billing",
          "hardware_spec"
        ]
      },
      "GPUConfigurations": {
        "type": "object",
        "description": "Pagination information and list of available GPUs.\n",
        "properties": {
          "gpu_configurations": {
            "type": "array",
            "description": "A list of available GPUs.\n",
            "items": {
              "$ref": "#/components/schemas/GPUResource"
            }
          }
        }
      },
      "GPUResources": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationBase"
          },
          {
            "$ref": "#/components/schemas/GPUConfigurations"
          }
        ],
        "description": "A paginated list of available GPUs.\n"
      },
      "ChatsCache": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether to enable caching for the current request.",
            "default": false,
            "example": true
          },
          "filter": {
            "type": "object",
            "description": "Filter criteria for caching.",
            "additionalProperties": {
              "type": "string"
            }
          },
          "threshold": {
            "type": "number",
            "description": "Threshold for caching the request; required if cache is enabled.",
            "example": 0.5
          }
        },
        "description": "Caching configuration for a request. Cache is only supported for non-streaming requests."
      },
      "FunctionCall": {
        "type": "object",
        "properties": {
          "arguments": {
            "type": "string",
            "description": "Arguments to call the function with, as generated by the model in JSON format.\nNote that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema.\nValidate the arguments in your code before calling your function.",
            "example": "{\"location\":\"Paris, France\"}"
          },
          "name": {
            "type": "string",
            "description": "Name of the function to call.",
            "example": "my-function"
          }
        },
        "description": "The name and arguments of a function that should be called, as generated by the model.\n\nDeprecated: `function_call` has been deprecated by OpenAI and replaced by `tool_calls`.",
        "x-nullable": true
      },
      "ChatsFunctionMode": {
        "type": "string",
        "description": "Controls which (if any) function is called by the model.\n  - `\"none\"` means the model will not call a function and instead generates a message.\n  - `\"auto\"` means the model can pick between generating a message or calling a function.\n\n  `\"none\"` is the default when no functions are present. `\"auto\"` is the default if functions are present.",
        "enum": [
          "none",
          "auto"
        ],
        "example": "auto"
      },
      "ChatsFunctionCall": {
        "description": "Controls which (if any) function is called by the model.\n- `\"none\"` means the model will not call a function and instead generates a message.\n- `\"auto\"` means the model can pick between generating a message or calling a function.\n- Specifying a particular function via `{\"name\": \"my_function\"}` forces the model to call that function.\n\n`\"none\"` is the default when no functions are present. `\"auto\"` is the default if functions are present.\n\nDeprecated: `function_call` has been deprecated by OpenAI in favor of `tool_choice`.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/FunctionCall"
          },
          {
            "$ref": "#/components/schemas/ChatsFunctionMode"
          }
        ]
      },
      "ChatsContentPartType": {
        "type": "string",
        "enum": [
          "refusal"
        ],
        "description": "The type of a content part.",
        "x-enum-varnames": [
          "ContentTypeText",
          "ContentTypeImage",
          "ContentTypeAudio",
          "ContentTypeRefusal"
        ]
      },
      "ChatsTextContentPart": {
        "type": "object",
        "description": "Part of a message's content that contains text.",
        "properties": {
          "text": {
            "type": "string",
            "description": "Text content of this part of the message.",
            "example": "This is some text part of a message."
          },
          "type": {
            "$ref": "#/components/schemas/ChatsContentPartType"
          }
        },
        "required": [
          "text",
          "type"
        ]
      },
      "ChatsDeveloperContentPart": {
        "type": "object",
        "description": "Part of content for a developer chat message.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ChatsTextContentPart"
          }
        ]
      },
      "ChatsDeveloperContent": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatsDeveloperContentPart"
            }
          }
        ],
        "description": "Content of a developer message."
      },
      "ChatsDeveloperMessage": {
        "type": "object",
        "description": "A developer message in a chat.",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ChatsDeveloperContent"
          },
          "name": {
            "type": "string",
            "description": "Name for the participant.\nProvides the model information to differentiate between participants of the same role.\n",
            "example": "my-username"
          },
          "role": {
            "type": "string",
            "enum": [
              "developer"
            ],
            "description": "Role of the messages author, in this case should always be `\"developer\"`."
          }
        },
        "required": [
          "content",
          "role"
        ]
      },
      "ChatsSystemContentPart": {
        "type": "object",
        "description": "Part of content for a system message.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ChatsTextContentPart"
          }
        ]
      },
      "ChatsSystemContent": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatsSystemContentPart"
            }
          }
        ],
        "description": "Content of a system message."
      },
      "ChatsSystemMessage": {
        "type": "object",
        "description": "A system message in a chat.",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ChatsSystemContent"
          },
          "name": {
            "type": "string",
            "description": "Name for the participant.\nProvides the model information to differentiate between participants of the same role.",
            "example": "John"
          },
          "role": {
            "type": "string",
            "enum": [
              "system"
            ],
            "description": "Role of the messages author, in this case should always be `\"system\"`.",
            "example": "system"
          }
        },
        "required": [
          "content",
          "role"
        ]
      },
      "ChatsImageURLDetail": {
        "type": "string",
        "enum": [
          "auto",
          "low",
          "high"
        ],
        "description": "Detail specifies the detail level of an image.\n\nSee [OpenAI's Vision guide](https://platform.openai.com/docs/guides/vision#low-or-high-fidelity-image-understanding) for more information.",
        "default": "auto",
        "example": "high",
        "x-enum-varnames": [
          "ImageURLDetailAuto",
          "ImageURLDetailLow",
          "ImageURLDetailHigh"
        ]
      },
      "ChatsImageURL": {
        "type": "object",
        "description": "The URL of an image.",
        "properties": {
          "detail": {
            "$ref": "#/components/schemas/ChatsImageURLDetail"
          },
          "url": {
            "type": "string",
            "description": "URL is either a URL of the image or the base64 encoded image data.",
            "example": "https://some/image/url"
          }
        },
        "required": [
          "url"
        ]
      },
      "ChatsImageContentPart": {
        "type": "object",
        "description": "Part of a message's content that contains an image.",
        "properties": {
          "image_url": {
            "$ref": "#/components/schemas/ChatsImageURL"
          },
          "type": {
            "$ref": "#/components/schemas/ChatsContentPartType"
          }
        },
        "required": [
          "image_url",
          "type"
        ]
      },
      "ChatsAudioInputFormat": {
        "type": "string",
        "enum": [
          "wav",
          "mp3"
        ],
        "description": "Format of the encoded audio data. Currently supports `\"wav\"` and `\"mp3\"`.",
        "x-enum-varnames": [
          "AudioInputFormatWav",
          "AudioInputFormatMp3"
        ]
      },
      "ChatsAudioInput": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "The base64 encoded audio data.",
            "example": "SGVsbG8sIHdvcmxkIS=="
          },
          "format": {
            "$ref": "#/components/schemas/ChatsAudioInputFormat"
          }
        },
        "required": [
          "data",
          "format"
        ],
        "description": "The audio input for an audio content part."
      },
      "ChatsAudioContentPart": {
        "type": "object",
        "description": "Part of a message's content that contains audio.",
        "properties": {
          "audio": {
            "$ref": "#/components/schemas/ChatsAudioInput"
          },
          "type": {
            "$ref": "#/components/schemas/ChatsContentPartType"
          }
        },
        "required": [
          "audio",
          "type"
        ]
      },
      "ChatsUserContentPart": {
        "type": "object",
        "description": "Part of content for a user chat message.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ChatsTextContentPart"
          },
          {
            "$ref": "#/components/schemas/ChatsImageContentPart"
          },
          {
            "$ref": "#/components/schemas/ChatsAudioContentPart"
          }
        ]
      },
      "ChatsUserContent": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatsUserContentPart"
            }
          }
        ],
        "description": "Content of a user message."
      },
      "ChatsUserMessage": {
        "type": "object",
        "description": "A user message in a chat.",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ChatsUserContent"
          },
          "name": {
            "type": "string",
            "description": "Name for the participant.\nProvides the model information to differentiate between participants of the same role.",
            "example": "my-username"
          },
          "role": {
            "type": "string",
            "enum": [
              "user"
            ],
            "description": "Role of the messages author, in this case should always be `\"user\"`.",
            "example": "user"
          }
        },
        "required": [
          "content",
          "role"
        ]
      },
      "ChatsAssistantAudio": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for a previous audio response from the model.",
            "example": "audio_67ccd2bed1ec8190b14f964abc0542670bb6a6b452d3795b"
          }
        },
        "required": [
          "id"
        ],
        "description": "Data about a previous audio response from the model."
      },
      "ChatsRefusalContentPart": {
        "type": "object",
        "description": "Part of a message's content that contains a refusal.",
        "properties": {
          "refusal": {
            "type": "string",
            "description": "Refusal message generated by the model.",
            "example": "refusal text"
          },
          "type": {
            "$ref": "#/components/schemas/ChatsContentPartType"
          }
        },
        "required": [
          "refusal",
          "type"
        ]
      },
      "ChatsAssistantContentPart": {
        "type": "object",
        "description": "Part of content for an assistant message.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ChatsTextContentPart"
          },
          {
            "$ref": "#/components/schemas/ChatsRefusalContentPart"
          }
        ]
      },
      "ChatsAssistantContent": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatsAssistantContentPart"
            }
          }
        ],
        "description": "Content of an assistant message. Required unless `tool_calls` or `function_call` are specified."
      },
      "ChatsToolType": {
        "type": "string",
        "description": "Type of the tool. Currently, only `\"function\"` is supported.",
        "x-enum-varnames": [
          "ToolTypeFunction"
        ]
      },
      "ChatsToolCall": {
        "type": "object",
        "description": "A function tool call in a chat request.",
        "properties": {
          "function": {
            "$ref": "#/components/schemas/FunctionCall"
          },
          "id": {
            "type": "string",
            "description": "ID of the tool call.",
            "example": "some-tool-id"
          },
          "type": {
            "$ref": "#/components/schemas/ChatsToolType"
          }
        }
      },
      "ChatsAssistantMessage": {
        "type": "object",
        "description": "An assistant message in a chat.",
        "properties": {
          "audio": {
            "$ref": "#/components/schemas/ChatsAssistantAudio"
          },
          "content": {
            "$ref": "#/components/schemas/ChatsAssistantContent"
          },
          "function_call": {
            "$ref": "#/components/schemas/FunctionCall"
          },
          "name": {
            "type": "string",
            "description": "Name for the participant.\nProvides the model information to differentiate between participants of the same role.\n",
            "example": "my-name"
          },
          "refusal": {
            "type": "string",
            "description": "Refusal message by the assistant.",
            "example": "refusal text"
          },
          "role": {
            "type": "string",
            "enum": [
              "assistant"
            ],
            "description": "Role of the messages author, in this case should always be `\"assistant\"`.",
            "example": "assistant"
          },
          "tool_calls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatsToolCall"
            },
            "description": "Array of tool calls generated by the model, such as function calls.",
            "minItems": 0,
            "maxItems": 128
          }
        },
        "required": [
          "role"
        ]
      },
      "ChatsToolContentPart": {
        "type": "object",
        "description": "Part of content for a tool message.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ChatsTextContentPart"
          }
        ]
      },
      "ChatsToolContent": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatsToolContentPart"
            }
          }
        ],
        "description": "Content of a tool message."
      },
      "ChatsToolMessage": {
        "type": "object",
        "description": "A tool message in a chat.",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ChatsToolContent"
          },
          "role": {
            "type": "string",
            "enum": [
              "tool"
            ],
            "description": "Role of the messages author, in this case should always be `\"tool\"`.",
            "example": "tool"
          },
          "tool_call_id": {
            "type": "string",
            "description": "ToolCallID is the tool call that this message is responding to.",
            "example": "some-tool-id"
          }
        },
        "required": [
          "content",
          "role",
          "tool_call_id"
        ]
      },
      "ChatsFunctionMessage": {
        "type": "object",
        "description": "A function message in a chat.\n\nDeprecated: Function messages have been deprecated by OpenAI in favor of tool messages.",
        "properties": {
          "content": {
            "type": "string",
            "description": "Content of the function message. Required but nullable.",
            "example": "Some function message string content"
          },
          "name": {
            "type": "string",
            "description": "Name of the function to call.",
            "example": "my-username"
          },
          "role": {
            "type": "string",
            "enum": [
              "function"
            ],
            "description": "Role of the messages author, in this case should always be \"function\".",
            "example": "function"
          }
        },
        "required": [
          "content",
          "name",
          "role"
        ]
      },
      "ChatsMessage": {
        "description": "A message of a supported type for a chat completion.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ChatsDeveloperMessage"
          },
          {
            "$ref": "#/components/schemas/ChatsSystemMessage"
          },
          {
            "$ref": "#/components/schemas/ChatsUserMessage"
          },
          {
            "$ref": "#/components/schemas/ChatsAssistantMessage"
          },
          {
            "$ref": "#/components/schemas/ChatsToolMessage"
          },
          {
            "$ref": "#/components/schemas/ChatsFunctionMessage"
          }
        ]
      },
      "ChatsMetadata": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "description": "Contains developer-defined tags and values used for filtering completions.",
        "example": {
          "customer_id": "user_123456789"
        }
      },
      "ChatsPredictionContentPart": {
        "type": "object",
        "description": "Part of a message's content that contains a prediction.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ChatsTextContentPart"
          }
        ]
      },
      "ChatsPredictionContent": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatsPredictionContentPart"
            }
          }
        ],
        "description": "Content that should be matched when generating a model response.\nIf generated tokens would match this content, the entire model response can be returned much more quickly."
      },
      "ChatsPrediction": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ChatsPredictionContent"
          },
          "type": {
            "type": "string",
            "enum": [
              "content"
            ],
            "description": "Type of predicted content you want to provide, should always be `\"content\"`.",
            "example": "content"
          }
        },
        "required": [
          "content",
          "type"
        ],
        "description": "The configuration for a [Predicted Output], which can greatly improve response times when\nlarge parts of the model response are known ahead of time.\nThis is most common when you are regenerating a file with only minor changes to most of the content.\n\n[Predicted Output]: https://platform.openai.com/docs/guides/predicted-outputs"
      },
      "ChatsReasoningEffort": {
        "type": "string",
        "enum": [
          "low",
          "medium",
          "high"
        ],
        "description": "Constrains effort on reasoning for reasoning models.\nFor OpenAI, currently supported by `o1` models only.\nReducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.",
        "default": "medium",
        "example": "high",
        "x-enum-varnames": [
          "ReasoningEffortLow",
          "ReasoningEffortMedium",
          "ReasoningEffortHigh"
        ]
      },
      "ChatsResponseFormatType": {
        "type": "string",
        "enum": [
          "json_schema"
        ],
        "description": "Type of response format being defined, in this case should always be `\"json_schema\"`.",
        "example": "json_schema",
        "x-enum-varnames": [
          "ResponseFormatTypeText",
          "ResponseFormatTypeJSON",
          "ResponseFormatTypeJSONSchema"
        ]
      },
      "ChatsResponseFormatText": {
        "type": "object",
        "description": "Represents text format for a chat response.",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ChatsResponseFormatType"
          }
        },
        "required": [
          "type"
        ]
      },
      "ChatsResponseFormatJSON": {
        "type": "object",
        "description": "Represents JSON format for a chat response.",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ChatsResponseFormatType"
          }
        },
        "required": [
          "type"
        ]
      },
      "ChatsJSONSchema": {
        "type": "object",
        "description": "Custom schema used to generate structures JSON responses.",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of what the response format is for.\nUsed by the model to determine how to respond in the format.",
            "example": "Some schema description text."
          },
          "name": {
            "type": "string",
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9\\-_]*$",
            "description": "Name of the response format.\nMust be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.",
            "example": "my-username"
          },
          "schema": {
            "type": "object",
            "description": "Schema for the response format, described as a JSON Schema object.\n\nSee [JSON Schema](https://json-schema.org/) for more information.",
            "additionalProperties": {
              "type": "string"
            }
          },
          "strict": {
            "type": "boolean",
            "description": "Indicates whether to enable strict schema adherence when generating the output.\nIf set to `true`, the model will always follow the exact schema defined in the schema field.\nOnly a subset of JSON Schema is supported when `strict` is `true`.",
            "default": false,
            "example": true
          }
        },
        "required": [
          "name"
        ]
      },
      "ChatsResponseFormatJSONSchema": {
        "type": "object",
        "description": "Represents custom JSON schema format for a chat response.",
        "properties": {
          "json_schema": {
            "$ref": "#/components/schemas/ChatsJSONSchema"
          },
          "type": {
            "$ref": "#/components/schemas/ChatsResponseFormatType"
          }
        },
        "required": [
          "json_schema",
          "type"
        ]
      },
      "ChatsResponseFormat": {
        "description": "An object specifying the format that the model must output.\n- Setting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables [Structured Outputs] which ensures the model will match your supplied JSON schema.\n- Setting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the message the model generates is valid JSON.\n\nImportant: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message.\nWithout this, the model may generate an unending stream of whitespace until the generation reaches the token limit,\nresulting in a long-running and seemingly \"stuck\" request. Also note that the message content may be partially\ncut off if `\"finish_reason\"` is set to `\"length\"`, which indicates the generation exceeded `max_tokens` or the conversation exceeded the max context length.\n\n[Structured Outputs]: https://platform.openai.com/docs/guides/structured-outputs",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ChatsResponseFormatText"
          },
          {
            "$ref": "#/components/schemas/ChatsResponseFormatJSON"
          },
          {
            "$ref": "#/components/schemas/ChatsResponseFormatJSONSchema"
          }
        ]
      },
      "ChatsServiceTier": {
        "type": "string",
        "description": "The service tier used for processing a request.",
        "default": "auto",
        "example": "auto",
        "x-nullable": true
      },
      "ChatsStop": {
        "description": "Specifies up to 4 sequences where the API will stop generating further tokens.",
        "items": {
          "maxLength": 4,
          "type": "string"
        },
        "oneOf": [
          {
            "type": "string",
            "default": "<|endoftext|>",
            "example": "\n"
          },
          {
            "type": "array",
            "minItems": 1,
            "maxItems": 4,
            "items": {
              "type": "string",
              "example": "[\"\\n\"]"
            }
          }
        ]
      },
      "StreamOptions": {
        "type": "object",
        "properties": {
          "include_usage": {
            "type": "boolean",
            "description": "If set, an additional chunk will be streamed before the data: [DONE] message.\nThe usage field on this chunk shows the token usage statistics for the entire request,\nand the choices field will always be an empty array.\nAll other chunks will also include a usage field, but with a null value.",
            "default": false,
            "example": true
          }
        },
        "description": "Options for streaming response. Only set this when you set `stream` to `true`."
      },
      "ChatsToolChoiceString": {
        "type": "string",
        "description": "A string tool choice message in a chat request.",
        "enum": [
          "none",
          "auto",
          "required"
        ],
        "x-enum-varnames": [
          "ToolChoiceStringNone",
          "ToolChoiceStringAuto",
          "ToolChoiceStringRequired"
        ]
      },
      "ChatsRequestToolChoiceFunction": {
        "type": "object",
        "description": "Function to call for a tool choice.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the function.",
            "example": "myToolFunction"
          }
        },
        "required": [
          "name"
        ]
      },
      "ChatsRequestTool": {
        "type": "object",
        "description": "A tool that can be called by models.",
        "properties": {
          "function": {
            "$ref": "#/components/schemas/ChatsRequestToolChoiceFunction"
          },
          "type": {
            "type": "string",
            "enum": [
              "function"
            ],
            "description": "Type of the tool. Currently, only `\"function\"` is supported.",
            "example": "function"
          }
        },
        "required": [
          "function",
          "type"
        ]
      },
      "ChatsToolChoice": {
        "description": "Controls which (if any) tool is called by the model.\n- `\"none\"` means the model will not call any tool and instead generates a message.\n- `\"auto\"` means the model can pick between generating a message or calling one or more tools.\n- `\"required\"` means the model must call one or more tools.\n- Specifying a particular tool via `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to call that tool.\n\n`\"none\"` is the default when no tools are present. `\"auto\"` is the default if tools are present.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ChatsToolChoiceString"
          },
          {
            "$ref": "#/components/schemas/ChatsRequestTool"
          }
        ]
      },
      "ChatsRequest": {
        "type": "object",
        "description": "A request to a model to generate a new chat completion.",
        "properties": {
          "audio": {
            "description": "Parameters for audio output.\nOnly required when audio output is requested with modalities: `[\"audio\"]`.\n\nSee: [OpenAI's Audio Guide](https://platform.openai.com/docs/guides/audio) for more information.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "cache": {
            "$ref": "#/components/schemas/ChatsCache"
          },
          "frequency_penalty": {
            "default": 0,
            "description": "A number between `-2.0` and `2.0`. Positive values penalize new tokens based on their existing\nfrequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.",
            "maximum": 2,
            "minimum": -2,
            "type": "number",
            "example": 0.4
          },
          "function_call": {
            "$ref": "#/components/schemas/ChatsFunctionCall"
          },
          "functions": {
            "description": "A list of functions the model may generate JSON inputs for.\n\nDeprecated: `functions` has been deprecated by OpenAI in favor of `tools`.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "logit_bias": {
            "description": "Modifies the likelihood of specified tokens appearing in the completion.\nAccepts a JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from `-100` to `100`.\nMathematically, the bias is added to the logits generated by the model prior to sampling.\nThe exact effect will vary per model, but values between `-1` and `1` should decrease or increase likelihood of selection;\nvalues like `-100` or `100` should result in a ban or exclusive selection of the relevant token.",
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "minimum": -100,
              "maximum": 100,
              "example": 50
            }
          },
          "logprobs": {
            "default": false,
            "description": "Indicates whether to return log probabilities of the output tokens or not.\nIf `true`, returns the log probabilities of each output token returned in the content of message.",
            "type": "boolean",
            "example": true
          },
          "max_completion_tokens": {
            "description": "Specifies an upper bound for the number of tokens that can be generated for a completion,\nincluding visible output tokens and [reasoning tokens].\n\n[reasoning tokens]: https://platform.openai.com/docs/guides/reasoning",
            "minimum": 0,
            "maximum": 4096,
            "type": "integer",
            "example": 1000
          },
          "max_tokens": {
            "description": "Specifies a maximum number of tokens that can be generated in the chat completion.\nThis value can be used to control costs for text generated via API.\n\nDeprecated: `max_tokens` has been deprecated by OpenAI in favor of `max_completion_tokens`, and is not compatible with `o1` series models.",
            "minimum": 0,
            "maximum": 4096,
            "type": "integer",
            "example": 1000
          },
          "messages": {
            "description": "A list of messages comprising the chat conversation so far.\nDepending on the model you use, different message types (modalities) are supported, like `\"text\"`, `\"images\"`, and `\"audio\"`.",
            "items": {
              "$ref": "#/components/schemas/ChatsMessage"
            },
            "type": "array",
            "minItems": 1,
            "maxItems": 100
          },
          "metadata": {
            "$ref": "#/components/schemas/ChatsMetadata"
          },
          "modalities": {
            "description": "Specifies the output types that you would like the model to generate for this request.\nMost models are capable of generating text, which is the default (`[\"text\"]`).\nSome models can generate audio. For OpenAI, the `gpt-4o-audio-preview` model can be used to [generate audio].\nTo request that this model generate both text and audio responses, you can use `[\"text\", \"audio\"]`.\n\n[generate audio]: https://platform.openai.com/docs/guides/audio",
            "items": {
              "type": "string"
            },
            "type": "array",
            "minItems": 1,
            "maxItems": 2,
            "default": [
              "text"
            ],
            "example": [
              "text",
              "audio"
            ]
          },
          "model": {
            "description": "ID or alias of the model to forward the chat request to.",
            "type": "string",
            "example": "gpt-4o"
          },
          "n": {
            "default": 1,
            "description": "Specifies how many chat completion choices to generate for each input message.\n\nNote: you will be charged based on the number of generated tokens across all choices, keep `\"n\"` set to `1` to minimize costs.",
            "minimum": 1,
            "maximum": 128,
            "example": 3,
            "type": "integer"
          },
          "parallel_tool_calls": {
            "default": true,
            "description": "Specifies whether to enable parallel function calling during tool use.",
            "type": "boolean",
            "example": true
          },
          "prediction": {
            "$ref": "#/components/schemas/ChatsPrediction"
          },
          "presence_penalty": {
            "default": 0,
            "description": "A number between `-2.0` and `2.0`. Positive values penalize new tokens based on whether they\nappear in the text so far, increasing the model's likelihood to talk about new topics.",
            "maximum": 2,
            "minimum": -2,
            "type": "number",
            "example": 0.4
          },
          "reasoning_effort": {
            "$ref": "#/components/schemas/ChatsReasoningEffort"
          },
          "response_format": {
            "$ref": "#/components/schemas/ChatsResponseFormat"
          },
          "router": {
            "description": "Specifies model routing configurations for the request.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "seed": {
            "description": "The seed for the model request. For OpenAI, this feature is in Beta.\nIf specified, OpenAI's system will make a best effort attempt to sample deterministically, such that repeated\nrequests with the same seed and parameters should return the same result. Determinism is not guaranteed,\nand you should refer to the `system_fingerprint` response parameter to monitor changes in the backend.",
            "type": "integer",
            "minimum": -9223372036854776000,
            "maximum": 9223372036854776000,
            "example": 239847829
          },
          "service_tier": {
            "$ref": "#/components/schemas/ChatsServiceTier"
          },
          "stop": {
            "$ref": "#/components/schemas/ChatsStop"
          },
          "store": {
            "default": false,
            "description": "Indicates whether to store the output of this chat completion request for use in OpenAI's [model distillation] or [evals] products.\n\n[model distillation]: https://platform.openai.com/docs/guides/distillation\n[evals]: https://platform.openai.com/docs/guides/evals",
            "type": "boolean",
            "example": true
          },
          "stream": {
            "default": false,
            "description": "Indicates whether to stream the model response to the user.\nIf set, partial message deltas will be sent, like in ChatGPT.\nTokens will be sent as data-only server-sent events as they become available,\nwith the stream terminated by a data: `[DONE]` message.",
            "type": "boolean",
            "example": true
          },
          "stream_options": {
            "$ref": "#/components/schemas/StreamOptions"
          },
          "temperature": {
            "default": 1,
            "description": "Specifies what sampling temperature to use.\nHigher values like `0.8` will make the output more random, while lower values like `0.2` will make it more focused and deterministic.\n\nNote: OpenAI generally recommends altering this or `top_p` but not both.",
            "maximum": 2,
            "minimum": 0,
            "type": "number",
            "example": 0.8
          },
          "tool_choice": {
            "$ref": "#/components/schemas/ChatsToolChoice"
          },
          "tools": {
            "description": "A list of tools the model may call. Currently, only functions are supported as tools.\nUse this to provide a list of functions the model may generate JSON inputs for. A max of 128 functions are supported.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatsRequestTool"
            },
            "minItems": 0,
            "maxItems": 128
          },
          "top_logprobs": {
            "description": "An integer between `0` and `20` specifying the number of most likely tokens to return at each\ntoken position, each with an associated log probability.\nLogProbs must be set to `true` if this parameter is used.",
            "type": "integer",
            "minimum": 0,
            "maximum": 20,
            "example": 10
          },
          "top_p": {
            "default": 1,
            "description": "An alternative to sampling with `temperature`, called nucleus sampling, where the model considers the\nresults of the tokens with `top_p` probability mass.\nExample: `0.1` means only the tokens comprising the top 10% probability mass are considered.\n\nNote: OpenAI generally recommends altering this or `temperature` but not both.",
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "example": 0.1
          },
          "user": {
            "description": "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.",
            "type": "string",
            "example": "my-username"
          }
        },
        "required": [
          "messages",
          "model"
        ]
      },
      "ChatsHate": {
        "type": "object",
        "properties": {
          "filtered": {
            "type": "boolean",
            "description": "Indicates if hateful contents have been detected and filtered.",
            "example": true
          },
          "severity": {
            "type": "string",
            "description": "Indicates the severity level on a scale that determines the intensity and risk level of harmful content.",
            "example": "medium"
          }
        },
        "description": "Hate content filtering and severity results.",
        "x-nullable": true
      },
      "ChatsJailBreak": {
        "type": "object",
        "description": "Jailbreak detection and filtering results.",
        "properties": {
          "detected": {
            "type": "boolean",
            "description": "Indicates if a jailbreak has been detected.",
            "example": true
          },
          "filtered": {
            "type": "boolean",
            "description": "Indicates if a jailbreak has been successfully filtered.",
            "example": true
          }
        },
        "x-nullable": true
      },
      "ChatsProfanity": {
        "type": "object",
        "description": "Profanity detection and filtering results.",
        "properties": {
          "detected": {
            "type": "boolean",
            "description": "Indicates if profanity has been detected.",
            "example": true
          },
          "filtered": {
            "type": "boolean",
            "description": "Indicates if profanity has been successfully filtered.",
            "example": true
          }
        },
        "x-nullable": true
      },
      "ChatsSelfHarm": {
        "type": "object",
        "properties": {
          "filtered": {
            "type": "boolean",
            "description": "Indicates if contents containing self-harm have been detected and filtered.",
            "example": false
          },
          "severity": {
            "type": "string",
            "description": "Indicates the severity level on a scale that determines the intensity and risk level of harmful content.",
            "example": "low"
          }
        },
        "description": "Self-harm content filtering and severity results.",
        "x-nullable": true
      },
      "ChatsSexual": {
        "type": "object",
        "properties": {
          "filtered": {
            "type": "boolean",
            "description": "Indicates if sexual contents have been detected and filtered.",
            "example": false
          },
          "severity": {
            "type": "string",
            "description": "Severity indicates the severity level on a scale that determines the intensity and risk level of harmful content.",
            "example": "safe"
          }
        },
        "description": "Sexual content filtering and severity results.",
        "x-nullable": true
      },
      "ChatsViolence": {
        "type": "object",
        "description": "Violent content filtering and severity results.",
        "properties": {
          "filtered": {
            "type": "boolean",
            "description": "Indicates if violent contents have been detected and filtered.",
            "example": false
          },
          "severity": {
            "type": "string",
            "description": "Indicates the severity level on a scale that determines the intensity and risk level of harmful content.",
            "example": "high"
          }
        },
        "x-nullable": true
      },
      "ChatsContentFilterResults": {
        "type": "object",
        "properties": {
          "hate": {
            "$ref": "#/components/schemas/ChatsHate"
          },
          "jailbreak": {
            "$ref": "#/components/schemas/ChatsJailBreak"
          },
          "profanity": {
            "$ref": "#/components/schemas/ChatsProfanity"
          },
          "self_harm": {
            "$ref": "#/components/schemas/ChatsSelfHarm"
          },
          "sexual": {
            "$ref": "#/components/schemas/ChatsSexual"
          },
          "violence": {
            "$ref": "#/components/schemas/ChatsViolence"
          }
        },
        "description": "Information about the results of content filtering.",
        "x-nullable": true
      },
      "ChatsFinishReason": {
        "type": "string",
        "enum": [
          "stop",
          "length",
          "content_filter",
          "tool_calls",
          "function_call"
        ],
        "description": "The reason the model stopped generating tokens.\n\nThis will be one of:\n- `\"stop\"` if the model hit a natural stop point or a provided stop sequence\n- `\"length\"` if the maximum number of tokens specified in the request was reached\n- `\"content_filter\"` if content was omitted due to a flag from our content filters\n- `\"tool_calls\"` if the model called a tool\n- `\"function_call\"` if the model called a function (deprecated in favor of `\"tool_calls\"`)",
        "x-enum-varnames": [
          "FinishReasonStop",
          "FinishReasonLength",
          "FinishReasonFunctionCall",
          "FinishReasonToolCalls",
          "FinishReasonContentFilter",
          "FinishReasonNull"
        ]
      },
      "ChatsTopLogProbs": {
        "type": "object",
        "description": "The top log probabilities for a chat.",
        "properties": {
          "bytes": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "maximum": 9223372036854776000,
              "example": 60
            },
            "description": "Bytes is a list of integers representing the UTF-8 bytes representation of the token.\nUseful in instances where characters are represented by multiple tokens and their byte representations must be\ncombined to generate the correct text representation. Can be null if there is no bytes representation for the token.",
            "minItems": 0,
            "maxItems": 1000,
            "example": [
              123,
              67,
              80,
              102,
              23,
              68
            ]
          },
          "logprob": {
            "type": "number",
            "description": "LogProb is the log probability of this token, if it is within the top 20 most likely tokens.\nOtherwise, the value `-9999.0` is used to signify that the token is very unlikely.",
            "example": -5
          },
          "token": {
            "type": "string",
            "description": "Token that this log probability information is for.",
            "example": "the"
          }
        },
        "required": [
          "bytes",
          "logprob",
          "token"
        ]
      },
      "ChatsLogProb": {
        "type": "object",
        "description": "The log probability of a token in a chat.",
        "properties": {
          "bytes": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "maximum": 9223372036854776000,
              "example": 10
            },
            "description": "A list of integers representing the UTF-8 bytes representation of the token.\nUseful in instances where characters are represented by multiple tokens and their byte representations must be\ncombined to generate the correct text representation. Can be `null` if there is no bytes representation for the token.",
            "minItems": 0,
            "maxItems": 1000,
            "example": [
              123,
              67,
              80,
              102,
              23,
              68
            ]
          },
          "logprob": {
            "type": "number",
            "description": "The log probability of this token, if it is within the top 20 most likely tokens.\nOtherwise, the value `-9999.0` is used to signify that the token is very unlikely.",
            "example": -5
          },
          "token": {
            "type": "string",
            "description": "Token that this log probability information is for.",
            "example": "The "
          },
          "top_logprobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatsTopLogProbs"
            },
            "description": "A list of the most likely tokens and their log probability, at this token position.\nIn rare cases, there may be fewer than the number of requested `top_logprobs` returned.",
            "minItems": 0,
            "maxItems": 1000
          }
        },
        "required": [
          "bytes",
          "logprob",
          "token",
          "top_logprobs"
        ]
      },
      "ChatsLogProbs": {
        "type": "object",
        "description": "The log probability information for the choice.",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatsLogProb"
            },
            "description": "A list of message content tokens with log probability information.",
            "minItems": 0,
            "maxItems": 1000
          },
          "refusal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatsLogProb"
            },
            "description": "A list of message refusal tokens with log probability information.",
            "minItems": 0,
            "maxItems": 1000
          }
        },
        "x-nullable": true,
        "required": [
          "content",
          "refusal"
        ]
      },
      "ChatsMessageResponse": {
        "type": "object",
        "description": "A chat completion message generated by a model.",
        "properties": {
          "content": {
            "type": "string",
            "description": "Content of the message.",
            "x-nullable": true,
            "example": "This is some generated text response."
          },
          "function_call": {
            "$ref": "#/components/schemas/FunctionCall"
          },
          "name": {
            "type": "string",
            "description": "Name of the function to call.\n\n(Azure OpenAI provider model requests only.)",
            "example": "my-tool-name"
          },
          "refusal": {
            "type": "string",
            "description": "Refusal message generated by the model, if any.",
            "x-nullable": true,
            "example": "refused text"
          },
          "role": {
            "type": "string",
            "description": "Role of the author of this message.",
            "example": "user"
          },
          "tool_call_id": {
            "type": "string",
            "description": "The ID of the tool call that this message is responding to.\n\n(Azure OpenAI provider model requests only.)",
            "example": "some-tool-call-id"
          },
          "tool_calls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatsToolCall"
            },
            "description": "Tool calls generated by the model, such as function calls.",
            "minItems": 0,
            "maxItems": 128
          }
        },
        "required": [
          "content",
          "role",
          "tool_calls"
        ]
      },
      "ChatsChoice": {
        "type": "object",
        "description": "A chat choice from a list of chat choices.",
        "properties": {
          "content_filter_results": {
            "$ref": "#/components/schemas/ChatsContentFilterResults"
          },
          "finish_reason": {
            "$ref": "#/components/schemas/ChatsFinishReason"
          },
          "index": {
            "type": "integer",
            "description": "Index of the choice in the list of choices.",
            "minimum": 0,
            "maximum": 9223372036854776000,
            "example": 1
          },
          "logprobs": {
            "$ref": "#/components/schemas/ChatsLogProbs"
          },
          "message": {
            "$ref": "#/components/schemas/ChatsMessageResponse"
          }
        },
        "required": [
          "index",
          "message",
          "finish_reason",
          "logprobs"
        ]
      },
      "ChatsPromptFilterResult": {
        "type": "object",
        "description": "Result of a prompt filter for a chat.",
        "properties": {
          "content_filter_results": {
            "$ref": "#/components/schemas/ChatsContentFilterResults"
          },
          "index": {
            "type": "integer",
            "description": "Index of the filtered prompt.",
            "minimum": 0,
            "maximum": 1000,
            "example": 3
          }
        }
      },
      "CompletionTokensDetails": {
        "type": "object",
        "description": "Breakdown of tokens used in a completion.",
        "properties": {
          "accepted_prediction_tokens": {
            "type": "integer",
            "description": "When using Predicted Outputs, the number of tokens in the prediction that appeared in the completion.",
            "minimum": 0,
            "maximum": 9223372036854776000,
            "example": 100
          },
          "audio_tokens": {
            "type": "integer",
            "description": "Audio input tokens generated by the model.",
            "minimum": 0,
            "maximum": 9223372036854776000,
            "example": 60
          },
          "reasoning_tokens": {
            "type": "integer",
            "description": "Tokens generated by the model for reasoning.",
            "minimum": 0,
            "maximum": 9223372036854776000,
            "example": 70
          },
          "rejected_prediction_tokens": {
            "type": "integer",
            "description": "When using Predicted Outputs, the number of tokens in the prediction that did not appear in the completion.\nHowever, like reasoning tokens, these tokens are still counted in the total completion tokens for\npurposes of billing, output, and context window limits.",
            "minimum": 0,
            "maximum": 9223372036854776000,
            "example": 20
          }
        }
      },
      "PromptTokensDetails": {
        "type": "object",
        "properties": {
          "audio_tokens": {
            "type": "integer",
            "description": "Audio input tokens present in the prompt.",
            "minimum": 0,
            "maximum": 9223372036854776000,
            "example": 100
          },
          "cached_tokens": {
            "type": "integer",
            "description": "Cached tokens present in the prompt.",
            "minimum": 0,
            "maximum": 9223372036854776000,
            "example": 30
          }
        },
        "description": "Breakdown of tokens used in the prompt."
      },
      "Usage": {
        "type": "object",
        "properties": {
          "completion_tokens": {
            "type": "integer",
            "description": "Number of tokens in the generated completion.",
            "minimum": 0,
            "maximum": 9223372036854776000,
            "example": 81
          },
          "completion_tokens_details": {
            "$ref": "#/components/schemas/CompletionTokensDetails"
          },
          "prompt_tokens": {
            "type": "integer",
            "description": "Number of tokens in the prompt.",
            "minimum": 0,
            "maximum": 9223372036854776000,
            "example": 66
          },
          "prompt_tokens_details": {
            "$ref": "#/components/schemas/PromptTokensDetails"
          },
          "total_tokens": {
            "type": "integer",
            "description": "Total number of tokens used in the request (prompt + completion).",
            "minimum": 0,
            "maximum": 9223372036854776000,
            "example": 122
          }
        },
        "description": "Usage information for a model request."
      },
      "ChatsResponse": {
        "type": "object",
        "description": "A chat completion response generated by a model.",
        "properties": {
          "cached": {
            "type": "boolean",
            "description": "Indicates whether the request was cached.",
            "example": true
          },
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatsChoice"
            },
            "description": "A list of chat completion choices. Can be more than one if `n` is greater than `1` in the request.",
            "minItems": 1,
            "maxItems": 128
          },
          "created": {
            "type": "integer",
            "description": "The UNIX timestamp (in seconds) of when the chat completion was created.",
            "minimum": 0,
            "maximum": 9223372036854776000,
            "example": 1741570283
          },
          "id": {
            "type": "string",
            "description": "The unique identifier for the chat completion.",
            "example": "chatcmpl-B9MHDbslfkBeAs8l4bebGdFOJ6PeG"
          },
          "model": {
            "type": "string",
            "description": "The ID of the model used for the chat completion.",
            "example": "gpt-4o-2024-08-06"
          },
          "object": {
            "type": "string",
            "description": "Object is the response object's type, which should always be `\"chat.completion\"`.",
            "example": "chat.completion"
          },
          "prompt_filter_results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatsPromptFilterResult"
            },
            "description": "Contains content filtering results for zero or more prompts in the request.\nIn a streaming request, results for different prompts may arrive at different times or in different orders.\n\n(Azure OpenAI provider model requests only.)",
            "minItems": 0,
            "maxItems": 100
          },
          "service_tier": {
            "$ref": "#/components/schemas/ChatsServiceTier"
          },
          "system_fingerprint": {
            "type": "string",
            "description": "Backend configuration that the model runs with. Can be used in conjunction with\nthe seed request parameter to understand when backend changes have been made that might impact determinism.",
            "example": "fp_fc9f1d7035"
          },
          "usage": {
            "$ref": "#/components/schemas/Usage"
          }
        },
        "required": [
          "cached",
          "choices",
          "created",
          "id",
          "model",
          "object",
          "prompt_filter_results",
          "service_tier",
          "usage"
        ]
      },
      "ErrorDetail": {
        "type": "object",
        "description": "Error message details.",
        "properties": {
          "code": {
            "type": "string",
            "description": "The error code as a string.",
            "example": "429"
          },
          "message": {
            "type": "string",
            "description": "The error message.",
            "example": "Rate limit reached for requests."
          },
          "param": {
            "type": "string",
            "description": "The erroneous request parameter, if any.",
            "example": "role"
          },
          "type": {
            "type": "string",
            "description": "Type descriptor classifying the error's kind.",
            "example": "invalid request error"
          }
        }
      },
      "MGErrorResponse": {
        "type": "object",
        "description": "Error message response",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorDetail"
          },
          "trace": {
            "type": "string",
            "description": "The error trace."
          }
        }
      },
      "CompletionsCache": {
        "type": "object",
        "description": "Caching configuration for the request. Cache is only supported for non-streaming requests.",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Indicates whether caching is enabled.",
            "example": true
          },
          "filter": {
            "type": "object",
            "description": "Filter criteria for caching.",
            "additionalProperties": {
              "type": "string"
            }
          },
          "threshold": {
            "type": "number",
            "description": "Threshold for caching the request; required if caching is enabled.",
            "example": 0.8
          }
        },
        "required": [
          "enabled"
        ]
      },
      "CompletionsLogitBias": {
        "type": "object",
        "additionalProperties": {
          "type": "integer",
          "minimum": -100,
          "maximum": 100,
          "example": 10
        },
        "description": "Used to modify the likelihood of specified tokens appearing in the completion. Accepts a JSON object\nthat maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100.\nYou can use this tokenizer tool to convert text to token IDs. Mathematically, the bias is added to the logits\ngenerated by the model prior to sampling.\n\nThe exact effect will vary per model, but:\n- values between `-1` and `1` should decrease or increase likelihood of selection and\n- values like `-100` or `100` should result in a ban or exclusive selection of the relevant token.\n\nAs an example, you can pass `{\"50256\": -100}` to prevent the `<|endoftext|>` token from being generated.",
        "example": {
          "50256": -100
        }
      },
      "ModelRouter": {
        "type": "object",
        "properties": {
          "family_model": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Model families to include into the assessment in the case of smart routing.",
            "minItems": 0,
            "maxItems": 1000,
            "example": [
              "gpt",
              "claude"
            ]
          },
          "max_cost": {
            "type": "number",
            "description": "Maximum cost of the model to include into the assessment in the case of smart routing.",
            "minimum": 0,
            "example": 0.1
          },
          "models": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Model names to include into the assessment in the case of smart routing.",
            "minItems": 0,
            "maxItems": 1000,
            "example": [
              "gpt-4o"
            ]
          },
          "optimization": {
            "type": "string",
            "enum": [
              "cost",
              "efficacy"
            ],
            "description": "Model selection optimization parameter.\nOptions are `\"efficacy\"` (default) and `\"cost\"`.",
            "default": "efficacy",
            "example": "cost"
          },
          "quality_tradeoff": {
            "type": "number",
            "description": "How much of quality possible to sacrifice during most optimal model selection, value between 0 and 1. Where, e.g. `0.8` means the quality can be reduced by 20%.",
            "example": 0.5
          },
          "region": {
            "type": "string",
            "description": "The region of the model to include into the assessment in the case of smart routing.",
            "example": "us-south"
          }
        },
        "description": "Router is the model routing configuration for the request."
      },
      "CompletionsRequest": {
        "type": "object",
        "description": "A legacy request to a model to generate a new text completion.",
        "properties": {
          "best_of": {
            "default": 1,
            "description": "Generates `best_of` number of completions server-side and returns the \"best\" (the one with the highest\nlog probability per token). Results cannot be streamed. When used with `n`, `best_of` controls the number of\ncandidate completions and `n` specifies how many to return – `best_of` must be greater than `n`.\n\nNote: Because this parameter generates many completions, it can quickly consume your token quota.\nUse carefully and ensure that you have reasonable settings for `max_tokens` and `stop`.",
            "type": "integer",
            "minimum": 0,
            "maximum": 128,
            "example": 2
          },
          "cache": {
            "$ref": "#/components/schemas/CompletionsCache"
          },
          "echo": {
            "default": false,
            "description": "Echo back the prompt in addition to the completion",
            "type": "boolean",
            "example": true
          },
          "frequency_penalty": {
            "type": "number",
            "description": "A number between `-2.0` and `2.0`. Positive values penalize new tokens based on their\nexisting frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.",
            "default": 0,
            "maximum": 2,
            "minimum": -2,
            "example": 1.4
          },
          "logit_bias": {
            "$ref": "#/components/schemas/CompletionsLogitBias"
          },
          "logprobs": {
            "description": "The number of most likely output tokens to include the log probabilities of, as well the chosen tokens.\nFor example, if `logprobs` is `5`, the API will return a list of the 5 most likely tokens.\nThe API will always return the `logprob` of the sampled token, so there may be up to `logprobs+1` elements in the response.\nThe maximum value for `logprobs` is `5`.",
            "maximum": 5,
            "minimum": 0,
            "example": 4,
            "type": "integer"
          },
          "max_tokens": {
            "default": 16,
            "description": "The maximum number of tokens that can be generated in the completion.\nThe token count of your prompt plus `max_tokens` cannot exceed the model's context length.",
            "type": "integer",
            "minimum": 0,
            "maximum": 4096,
            "example": 1000
          },
          "metadata": {
            "$ref": "#/components/schemas/ChatsMetadata"
          },
          "model": {
            "description": "Model is the ID of the model to use.",
            "type": "string",
            "example": "gpt-4o"
          },
          "n": {
            "default": 1,
            "description": "Specifies how many completions to generate for each prompt.\n\nNote: Because this parameter generates many completions, it can quickly consume your token quota.\nUse carefully and ensure that you have reasonable settings for `max_tokens` and `stop`.",
            "minimum": 0,
            "maximum": 128,
            "example": 3,
            "type": "integer"
          },
          "presence_penalty": {
            "default": 0,
            "description": "A number between `-2.0` and `2.0`. Positive values penalize new tokens based on whether they\nappear in the text so far, increasing the model's likelihood to talk about new topics.",
            "maximum": 2,
            "minimum": -2,
            "type": "number",
            "example": 0.4
          },
          "prompt": {
            "description": "Prompt(s) to generate completions for, encoded as a string, array of strings, array of tokens, or array of token arrays.\n\nNote: `<|endoftext|>` is the document separator that the model sees during training,\nso if a prompt is not specified the model will generate as if from the beginning of a new document.",
            "type": "string",
            "example": "What is the capital of France?"
          },
          "router": {
            "$ref": "#/components/schemas/ModelRouter"
          },
          "seed": {
            "description": "The seed for the model request. If specified, OpenAI's system will make a best effort to sample\ndeterministically, such that repeated requests with the same `seed` and parameters should return the same result.\n\nDeterminism is not guaranteed, and you should refer to the `system_fingerprint` response parameter to monitor changes in the backend.",
            "type": "integer",
            "minimum": -9223372036854776000,
            "maximum": 9223372036854776000,
            "example": 239847829
          },
          "stop": {
            "$ref": "#/components/schemas/ChatsStop"
          },
          "stream": {
            "default": false,
            "description": "Indicates whether to stream back partial progress.\nIf set, tokens will be sent as data-only [server-sent events] as they become available,\nwith the stream terminated by a `data: [DONE]` message.\n\n[server-sent events]: https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format",
            "type": "boolean",
            "example": true
          },
          "stream_options": {
            "$ref": "#/components/schemas/StreamOptions"
          },
          "suffix": {
            "description": "Text that comes after a completion of inserted text.\nOn OpenAI, this parameter is only supported for `gpt-3.5-turbo-instruct`.",
            "type": "string",
            "example": "some text"
          },
          "temperature": {
            "default": 1,
            "description": "Specifies what temperature to use for sample, between `0` and `2`. Higher values like `0.8` will make the output more random,\nwhile lower values like `0.2` will make it more focused and deterministic.\n\nNote: OpenAI generally recommends altering this or `top_p` but not both.",
            "type": "number",
            "minimum": 0,
            "maximum": 2,
            "example": 1.3
          },
          "top_p": {
            "default": 1,
            "description": "An alternative to sampling with `temperature`, called nucleus sampling, where the model considers the\nresults of the tokens with `top_p` probability mass. So `0.1` means only the tokens comprising the top 10%\nprobability mass are considered.\n\nNote: OpenAI generally recommends altering this or `temperature` but not both.",
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "example": 0.8
          },
          "user": {
            "description": "A unique identifier representing your end-user, which can help Services to monitor and detect abuse.",
            "type": "string",
            "example": "my-username"
          }
        },
        "required": [
          "model",
          "prompt"
        ]
      },
      "CompletionsLogprobResult": {
        "type": "object",
        "description": "Log probabilities associated with the generated tokens.",
        "properties": {
          "text_offset": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "maximum": 9223372036854776000,
              "example": 10
            },
            "description": "Text offsets for the generated tokens.",
            "minItems": 0,
            "maxItems": 4096,
            "example": [
              0,
              4,
              12,
              15,
              22,
              27
            ]
          },
          "token_logprobs": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Log probabilities of the generated tokens.",
            "minItems": 0,
            "maxItems": 4096,
            "example": [
              0.6773386835778668,
              0.3199521581969428,
              0.0019025046958103897,
              0.00022722178296200756,
              0.0001769605025016923,
              0.0001769605025016923
            ]
          },
          "tokens": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "the"
            },
            "description": "Tokens generated by the model.",
            "minItems": 0,
            "maxItems": 4096,
            "example": [
              "The ",
              "capital ",
              "of ",
              "France ",
              "is ",
              "Paris."
            ]
          },
          "top_logprobs": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "number"
              }
            },
            "description": "The top log probabilities for the generated tokens.",
            "minItems": 0,
            "maxItems": 4096
          }
        },
        "x-nullable": true,
        "required": [
          "text_offset",
          "token_logprobs",
          "tokens",
          "top_logprobs"
        ]
      },
      "CompletionsChoice": {
        "type": "object",
        "description": "A legacy text completions response choice.",
        "properties": {
          "finish_reason": {
            "type": "string",
            "description": "The reason the model stopped generating tokens.\nThis will be:\n- `\"stop\"` if the model hit a natural stop point or a provided stop sequence\n- `\"length\"` if the maximum number of tokens specified in the request was reached\n- `\"content_filter\"` if content was omitted due to a flag from our content filters",
            "example": "stop"
          },
          "index": {
            "type": "integer",
            "description": "Index of the choice in the response.",
            "minimum": 0,
            "maximum": 9223372036854776000,
            "example": 10
          },
          "logprobs": {
            "$ref": "#/components/schemas/CompletionsLogprobResult"
          },
          "text": {
            "type": "string",
            "description": "Text generated by the model for the choice.",
            "example": "The capital of France is Paris."
          }
        }
      },
      "CompletionsResponse": {
        "type": "object",
        "description": "A legacy text completion response generated by a model.",
        "properties": {
          "cached": {
            "type": "boolean",
            "description": "Indicates whether the request was cached.",
            "example": true
          },
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompletionsChoice"
            },
            "description": "A list of completion choices the model generated for the input prompt.",
            "minItems": 0,
            "maxItems": 128
          },
          "created": {
            "type": "integer",
            "description": "The UNIX timestamp (in seconds) of when the completion was created.",
            "minimum": 0,
            "maximum": 9223372036854776000,
            "example": 1589478378
          },
          "id": {
            "type": "string",
            "description": "A unique identifier for the completion.",
            "example": "cmpl-uqkvlQyYK7bGYrRHQ0eXlWi7"
          },
          "model": {
            "type": "string",
            "description": "The ID of the model used for the completion.",
            "example": "gpt-4-turbo"
          },
          "object": {
            "type": "string",
            "description": "Object type, which is always `\"text_completion\"`.",
            "example": "text_completion"
          },
          "system_fingerprint": {
            "type": "string",
            "description": "The backend configuration that the model runs with. Can be used in conjunction with\nthe seed request parameter to understand when backend changes have been made that might impact determinism.",
            "example": "fp_fc9f1d7035"
          },
          "usage": {
            "$ref": "#/components/schemas/Usage"
          }
        },
        "required": [
          "id",
          "object",
          "model",
          "choices"
        ]
      },
      "EmbeddingsInput": {
        "oneOf": [
          {
            "type": "string",
            "example": "This is some text to embed."
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "maxItems": 2048,
            "example": [
              "this",
              "is",
              "some",
              "text",
              "to",
              "embed"
            ]
          },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "maximum": 9223372036854776000
            },
            "minItems": 0,
            "maxItems": 2048,
            "example": [
              123,
              67,
              80,
              102,
              23,
              68
            ]
          },
          {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 9223372036854776000,
                "example": 123
              },
              "minItems": 0,
              "maxItems": 2048,
              "example": [
                123,
                67,
                80,
                102,
                23,
                68
              ]
            },
            "minItems": 0,
            "maxItems": 2048,
            "example": [
              [
                123,
                67
              ],
              [
                80,
                102
              ],
              [
                23,
                68
              ]
            ]
          }
        ],
        "description": "Input text to embed, encoded as a string, array of strings, array of integers,\nor array of integer arrays. The input must not exceed the max input tokens\nfor the model (8192 tokens for OpenAI's `text-embedding-ada-002`) and cannot be an empty string.\nAny array must be 2048 dimensions or less.\nSome models may also impose a limit on total number of tokens summed across inputs."
      },
      "EmbeddingsEmbeddingRequest": {
        "type": "object",
        "description": "A request to a model to generate new embeddings.",
        "properties": {
          "dimensions": {
            "type": "integer",
            "description": "Number of dimensions the resulting output embeddings should have.\nFor OpenAI, only supported in `text-embedding-3` and later models.",
            "minimum": 0,
            "example": 10,
            "maximum": 2048
          },
          "encoding_format": {
            "type": "string",
            "description": "Format to return the embeddings in. Can be either `\"float\"` or `\"base64\"`.",
            "default": "float",
            "example": "base64"
          },
          "input": {
            "$ref": "#/components/schemas/EmbeddingsInput"
          },
          "model": {
            "description": "ID of the model to use.",
            "type": "string",
            "example": "gpt-4o"
          },
          "user": {
            "description": "A unique identifier representing your end-user.",
            "type": "string",
            "example": "my-username"
          }
        },
        "required": [
          "input",
          "model"
        ]
      },
      "EmbeddingsEmbeddingData": {
        "oneOf": [
          {
            "type": "string",
            "example": "SGVsbG8sIHdvcmxkIS=="
          },
          {
            "type": "array",
            "items": {
              "type": "number"
            },
            "minItems": 0,
            "maxItems": 4096
          }
        ],
        "description": "Embedding vector, which is a list of floats or a base64 string.\nThe length of vector depends on the model. For OpenAI's models, as listed in their [embedding guide].\n\n[embedding guide]: https://platform.openai.com/docs/guides/embeddings"
      },
      "EmbeddingsEmbedding": {
        "type": "object",
        "description": "An embedding in an embedding vector.",
        "properties": {
          "embedding": {
            "$ref": "#/components/schemas/EmbeddingsEmbeddingData"
          },
          "index": {
            "type": "integer",
            "description": "Index of the embedding in the list of embeddings.",
            "minimum": 0,
            "maximum": 9223372036854776000,
            "example": 10
          },
          "object": {
            "type": "string",
            "description": "Object type, which is always `\"embedding\"`.",
            "enum": [
              "embedding"
            ],
            "example": "embedding"
          }
        },
        "required": [
          "index",
          "object",
          "embedding"
        ]
      },
      "EmbeddingsEmbeddingResponse": {
        "type": "object",
        "description": "An embeddings response generated by a model.",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmbeddingsEmbedding"
            },
            "description": "A list of embedding objects generated by the model.",
            "minItems": 0,
            "maxItems": 2048
          },
          "model": {
            "type": "string",
            "description": "The ID of the model used to create the embeddings. The same as the `model` provided in the request.",
            "example": "gpt-4o"
          },
          "object": {
            "type": "string",
            "description": "Object type, which is always `\"list\"`.",
            "enum": [
              "list"
            ],
            "example": "list"
          },
          "usage": {
            "$ref": "#/components/schemas/Usage"
          }
        },
        "required": [
          "object",
          "model",
          "data"
        ]
      },
      "Metadata": {
        "type": "object",
        "properties": {
          "cost": {
            "type": "number",
            "description": "The cost per 1000 tokens for the model.\nThis represents the pricing in USD for processing 1000 tokens.\nA nil value indicates the cost is not available or applicable.",
            "minimum": 0,
            "example": 0.02
          },
          "model_family": {
            "type": "string",
            "description": "The family or series that this model belongs to.\nExamples:\n- \"gpt-3.5\" for GPT-3.5 series models\n- \"gpt-4\" for GPT-4 series models\n- \"llama-2\" for Llama 2 series models",
            "example": "gpt-3.5"
          },
          "recommender_label": {
            "type": "string",
            "description": "When calling the Recommender API, this value is used to map to the supported model in the Recommender API.\nFor example, \"openai-gpt-4o-mini\" could be the recommender label for a specific model.",
            "example": "openai-gpt-4o-mini"
          },
          "region": {
            "type": "string",
            "description": "The region where this model is deployed in.\nThis indicates the geographical location of the model deployment.\nImportant for data residency requirements and latency considerations.",
            "example": "us-east-1"
          }
        },
        "description": "Contains additional configuration for the model."
      },
      "Model": {
        "type": "object",
        "description": "Configuration for a model, Large Language Model (LLM) or otherwise, that's available through a configured model provider. For example, `id` could be set to \"gpt-o\", which is the official server-side name of the model. The `alias` field can be used by clients to refer to that model in a more convenient or custom manner. When a client provides the alias instead of the official name, the middleware will map the alias back to the underlying `id` (e.g., `\"gpt-o\"`) and execute requests against the correct model.",
        "properties": {
          "object": {
            "type": "string",
            "description": "The object type, which is always \"model\".",
            "example": "model"
          },
          "uuid": {
            "type": "string",
            "description": "The unique identifier for the model."
          },
          "created": {
            "type": "integer",
            "description": "The Unix timestamp (in seconds) when the model configuration was created.",
            "minimum": 0,
            "maximum": 9223372036854776000,
            "example": 1677649963
          },
          "owned_by": {
            "type": "string",
            "description": "The provider that owns the model.\nFormat: \"provider type:provider name\"",
            "example": "openai:vllm4"
          },
          "id": {
            "type": "string",
            "description": "The official provider-specific server-side unique identifier of the model instance.",
            "example": "gpt-3.5-turbo-456723"
          },
          "alias": {
            "type": "string",
            "description": "The aliased name of the model.\nIf set, this is the name that should be used by clients to refer to that model in a more convenient or custom manner.\nWhen a client provides the alias instead of the official name, the middleware will map the alias\nback to the underlying `id` (e.g., `\"gpt-o\"`) and execute requests against the correct model.",
            "example": "gpt-3.5-turbo"
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          }
        }
      },
      "ModelCollection": {
        "type": "object",
        "description": "A list of models.",
        "properties": {
          "data": {
            "type": "array",
            "description": "The array of models.",
            "items": {
              "$ref": "#/components/schemas/Model"
            },
            "minItems": 0,
            "maxItems": 1000
          },
          "object": {
            "type": "string",
            "description": "The response object type, always \"list\".",
            "example": "list"
          }
        },
        "required": [
          "object",
          "data"
        ]
      },
      "RemoteCredentialStoreIBMCloudSecretManager": {
        "type": "object",
        "description": "The IBM cloud secrets manager remote tenant credential store.",
        "properties": {
          "base_url": {
            "type": "string",
            "description": "The base URL of the IBM Cloud Secrets Manager.",
            "example": "https://xxxx.xxxx.secrets-manager.appdomain.cloud"
          },
          "group": {
            "type": "string",
            "description": "The access group to use in the IBM Secrets Manager.",
            "example": "AccessGroupId-56c5e703-80d4-4f06-a7e6-844618ec39b3"
          }
        }
      },
      "RemoteCredentialStore": {
        "type": "object",
        "description": "A tenant remote credential store.",
        "properties": {
          "ibm_cloud_secret_manager": {
            "$ref": "#/components/schemas/RemoteCredentialStoreIBMCloudSecretManager"
          }
        }
      },
      "Tenant": {
        "type": "object",
        "description": "Information about a tenancy.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the tenant.",
            "example": "09b2d701-4592-4386-85cf-326c6b3c94c7"
          },
          "name": {
            "type": "string",
            "description": "Name of the tenant.",
            "example": "my-tenant"
          },
          "remote_credential_store": {
            "$ref": "#/components/schemas/RemoteCredentialStore"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "ReplaceTenantRequest": {
        "type": "object",
        "description": "A request to replace tenant information. Any details not supplied will be set to default.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Tenant name to replace. Currently, only the tenant name can be replaced.",
            "example": "example-tenant"
          }
        },
        "required": [
          "name"
        ]
      },
      "TenantCreateTenantRequest": {
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the tenant to be created.",
            "example": "my-tenant"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "description": "A request to create a new tenant."
      },
      "UpdateTenantRequest": {
        "type": "object",
        "description": "A request to update tenant information. Only the supplied details will be updated.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Tenant name to update. Currently, only the tenant name can be updated.",
            "example": "example-tenant"
          }
        },
        "required": [
          "name"
        ]
      },
      "TenantPolicy": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "The action to perform on the policy, either read or write.",
            "enum": [
              "read",
              "write"
            ],
            "default": "read",
            "example": "write"
          },
          "effect": {
            "type": "string",
            "description": "The effect that the policy is to have, either allow or deny.",
            "enum": [
              "allow",
              "deny"
            ],
            "default": "allow",
            "example": "deny"
          },
          "resource": {
            "type": "string",
            "description": "The resource ID that the policy affects.",
            "example": "model:62a04a11-07bf-5309-a78e-95323dbbc333"
          },
          "subject": {
            "type": "string",
            "description": "The subject that the policy pertains to.",
            "example": "AccessGroupId-56c5e703-80d4-4f06-a7e6-844618ec39b3"
          }
        },
        "description": "TenantPolicy specifies an access policy for the tenant.",
        "required": [
          "action",
          "effect",
          "resource",
          "subject"
        ]
      },
      "TenantPolicyCollection": {
        "type": "object",
        "description": "A list of tenant policies.",
        "properties": {
          "data": {
            "type": "array",
            "description": "The array of tenant policies.",
            "items": {
              "$ref": "#/components/schemas/TenantPolicy"
            },
            "minItems": 0,
            "maxItems": 1000
          },
          "object": {
            "type": "string",
            "description": "The object type, always \"list\".",
            "example": "list"
          }
        },
        "required": [
          "object",
          "data"
        ]
      },
      "Provider": {
        "type": "object",
        "description": "A model provider configured for a tenant.",
        "properties": {
          "data": {
            "type": "object",
            "description": "Data to be mapped to a provider credential config.",
            "additionalProperties": {
              "type": "string"
            }
          },
          "models": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model"
            },
            "description": "The configured models for this provider.",
            "minItems": 0,
            "maxItems": 1000
          },
          "name": {
            "type": "string",
            "description": "The name of the provider.",
            "example": "my-openai-provider"
          },
          "type": {
            "type": "string",
            "description": "The provider type the credential is for.",
            "example": "openai"
          },
          "uuid": {
            "type": "string",
            "description": "The ID of the provider.",
            "example": "56c5e703-80d4-4f06-a7e6-844618ec39b3"
          }
        },
        "required": [
          "data",
          "models",
          "name",
          "type",
          "uuid"
        ]
      },
      "ProviderCollection": {
        "type": "object",
        "description": "A list of model providers.",
        "properties": {
          "data": {
            "type": "array",
            "description": "The array of model providers.",
            "items": {
              "$ref": "#/components/schemas/Provider"
            },
            "minItems": 0,
            "maxItems": 1000
          },
          "object": {
            "type": "string",
            "description": "The object type, always \"list\".",
            "example": "list"
          }
        },
        "required": [
          "object",
          "data"
        ]
      },
      "AnthropicConfig": {
        "type": "object",
        "description": "Configuration details for an Anthropic provider.",
        "properties": {
          "apikey": {
            "type": "string",
            "description": "The required authentication key for accessing the Anthropic API.",
            "example": "sk-ant-api03-R2D...igAA"
          }
        },
        "required": [
          "apikey"
        ]
      },
      "ProviderRequestAnthropicConfig": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AnthropicConfig"
          },
          "name": {
            "description": "Name can only contain alphanumeric characters, single spaces (no consecutive spaces),\nhyphens (-), parentheses (), and square brackets [].\nNo leading or trailing spaces are allowed.",
            "example": "fast-llm",
            "type": "string"
          }
        },
        "required": [
          "data",
          "name"
        ],
        "type": "object",
        "description": "A provider configuration for Anthropic."
      },
      "ProviderResponse": {
        "type": "object",
        "description": "Create provider response.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the created model provider.",
            "example": "my-openai-provider"
          },
          "type": {
            "type": "string",
            "description": "The provider type of the new model provider.",
            "example": "openai"
          },
          "uuid": {
            "type": "string",
            "description": "The ID of the new model provider.",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        }
      },
      "AzureOpenaiConfig": {
        "type": "object",
        "description": "Configuration details for an Azure OpenAI provider.",
        "properties": {
          "account_name": {
            "type": "string",
            "description": "The Azure account name; required to use `/v1/provider/{provider_uuid}/models`.",
            "example": "my-azure-account"
          },
          "api_version": {
            "type": "string",
            "description": "Version of the Azure OpenAI API to use (default: `\"2024-10-21\"`).",
            "default": "2024-10-21",
            "example": "2024-10-21"
          },
          "apikey": {
            "type": "string",
            "description": "The required authentication key for accessing Azure OpenAI services.",
            "example": "AIzaSyDaGmWKa4JsXZ-HjGw7ISLn_3namBGewQe"
          },
          "resource_group_name": {
            "type": "string",
            "description": "The Azure resource group name; required to use `/v1/provider/{provider_id}/models`.",
            "example": "my-resource-group"
          },
          "resource_name": {
            "type": "string",
            "description": "The Azure OpenAI resource to connect to.",
            "example": "my-resource-name"
          },
          "subscription_id": {
            "type": "string",
            "description": "The Azure subscription ID; required to use `/v1/provider/{provider_id}/models`.",
            "example": "acde070d-8c4c-4f0d-9d8a-162843c10333"
          }
        },
        "required": [
          "api_version",
          "apikey",
          "resource_name"
        ]
      },
      "ProviderRequestAzureOpenaiConfig": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AzureOpenaiConfig"
          },
          "name": {
            "description": "Name can only contain alphanumeric characters, single spaces (no consecutive spaces),\nhyphens (-), parentheses (), and square brackets [].\nNo leading or trailing spaces are allowed.",
            "example": "fast-llm",
            "type": "string"
          }
        },
        "required": [
          "data",
          "name"
        ],
        "type": "object",
        "description": "A provider configuration for Azure OpenAI."
      },
      "AwsBedrockConfig": {
        "type": "object",
        "description": "Configuration details for an AWS Bedrock provider.",
        "properties": {
          "access_key_id": {
            "type": "string",
            "description": "The AWS access key ID required to authenticate with the Bedrock API.",
            "example": "acde070d-8c4c-4f0d-9d8a-162843c10333"
          },
          "base_url": {
            "type": "string",
            "description": "Overrides the default AWS Bedrock Runtime API endpoint with the provided URL.",
            "example": "https://bedrock-runtime.us-east-1.amazonaws.com"
          },
          "region": {
            "type": "string",
            "description": "The AWS region where the Bedrock API is hosted.",
            "example": "us-east-1"
          },
          "secret_access_key": {
            "type": "string",
            "description": "The AWS secret access key required to authenticate with the Bedrock API.",
            "example": "AIzaSyDaGmWKa4JsXZ-HjGw7ISLn_3namBGewQe"
          }
        },
        "required": [
          "access_key_id",
          "region",
          "secret_access_key"
        ]
      },
      "ProviderRequestAwsBedrockConfig": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AwsBedrockConfig"
          },
          "name": {
            "description": "Name can only contain alphanumeric characters, single spaces (no consecutive spaces),\nhyphens (-), parentheses (), and square brackets [].\nNo leading or trailing spaces are allowed.",
            "example": "fast-llm",
            "type": "string"
          }
        },
        "required": [
          "data",
          "name"
        ],
        "type": "object",
        "description": "A provider configuration for AWS Bedrock."
      },
      "CerebrasConfig": {
        "type": "object",
        "description": "Configuration details for a Cerebras provider.",
        "properties": {
          "apikey": {
            "type": "string",
            "description": "The required authentication key for accessing the Cerebras API.",
            "example": "AIzaSyDaGmWKa4JsXZ-HjGw7ISLn_3namBGewQe"
          }
        },
        "required": [
          "apikey"
        ]
      },
      "ProviderRequestCerebrasConfig": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CerebrasConfig"
          },
          "name": {
            "description": "Name can only contain alphanumeric characters, single spaces (no consecutive spaces),\nhyphens (-), parentheses (), and square brackets [].\nNo leading or trailing spaces are allowed.",
            "example": "fast-llm",
            "type": "string"
          }
        },
        "required": [
          "data",
          "name"
        ],
        "type": "object",
        "description": "A provider configuration for Cerebras."
      },
      "NvidiaNimConfig": {
        "type": "object",
        "description": "Configuration details for an Nvidia NIM provider.",
        "properties": {
          "apikey": {
            "type": "string",
            "description": "The required authentication key for accessing the Nvidia NIM API.",
            "example": "AIzaSyDaGmWKa4JsXZ-HjGw7ISLn_3namBGewQe"
          }
        },
        "required": [
          "apikey"
        ]
      },
      "ProviderRequestNvidiaNimConfig": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NvidiaNimConfig"
          },
          "name": {
            "description": "Name can only contain alphanumeric characters, single spaces (no consecutive spaces),\nhyphens (-), parentheses (), and square brackets [].\nNo leading or trailing spaces are allowed.",
            "example": "fast-llm",
            "type": "string"
          }
        },
        "required": [
          "data",
          "name"
        ],
        "type": "object",
        "description": "A provider configuration for NVIDIA NIM."
      },
      "OpenaiConfig": {
        "type": "object",
        "description": "Configuration details for an OpenAI provider.",
        "properties": {
          "apikey": {
            "type": "string",
            "description": "The required authentication key for accessing the OpenAI API.",
            "example": "sk-proj-2_IN3221...IWZkA"
          },
          "base_url": {
            "type": "string",
            "description": "Override the URL used to access the OpenAI provider services.\nThis URL can point to any OpenAI-compatible model provider service.",
            "default": "https://api.openai.com/v1",
            "example": "https://api.openai.com/v1"
          }
        },
        "required": [
          "apikey"
        ]
      },
      "ProviderRequestOpenaiConfig": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OpenaiConfig"
          },
          "name": {
            "description": "Name can only contain alphanumeric characters, single spaces (no consecutive spaces),\nhyphens (-), parentheses (), and square brackets [].\nNo leading or trailing spaces are allowed.",
            "example": "fast-llm",
            "type": "string"
          }
        },
        "required": [
          "data",
          "name"
        ],
        "type": "object",
        "description": "A provider configuration for OpenAI."
      },
      "WatsonxaiConfig": {
        "type": "object",
        "description": "Configuration details for a WatsonX.ai provider.",
        "properties": {
          "api_version": {
            "type": "string",
            "description": "Overrides the WatsonX.ai API version to use.",
            "default": "2023-07-07"
          },
          "apikey": {
            "type": "string",
            "description": "The required authentication key for accessing WatsonX.ai services.",
            "example": "AIzaSyDaGmWKa4JsXZ-HjGw7ISLn_3namBGewQe"
          },
          "auth_url": {
            "type": "string",
            "description": "Overrides the URL to use for IBM Cloud IAM authentication.",
            "default": "https://iam.cloud.ibm.com/identity/token",
            "example": "https://iam.cloud.ibm.com/identity/token"
          },
          "base_url": {
            "type": "string",
            "description": "Overrides the URL to use to access the IBM WatsonX.ai services.",
            "example": "https://us-south.ml.cloud.ibm.com",
            "default": "https://us-south.ml.cloud.ibm.com"
          },
          "project_id": {
            "type": "string",
            "description": "The IBM WatsonX.ai project ID (required if `space_id` is not provided).",
            "example": "09b2r701-4592-4386-85cf-326c6b3c94c7"
          },
          "space_id": {
            "type": "string",
            "description": "The IBM WatsonX.ai space ID (required if `project_id` is not provided).",
            "example": "q9b2d701-4592-4386-85cf-326c6b3c94c7"
          }
        },
        "required": [
          "apikey",
          "base_url"
        ]
      },
      "ProviderRequestWatsonxaiConfig": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WatsonxaiConfig"
          },
          "name": {
            "description": "Name can only contain alphanumeric characters, single spaces (no consecutive spaces),\nhyphens (-), parentheses (), and square brackets [].\nNo leading or trailing spaces are allowed.",
            "example": "fast-llm",
            "type": "string"
          }
        },
        "required": [
          "data",
          "name"
        ],
        "type": "object",
        "description": "A provider configuration for IBM WatsonX.ai."
      },
      "CreateModelRequest": {
        "type": "object",
        "description": "The configuration details for a model, Large Language Model (LLM) or otherwise, that's available through a configured model provider.\nFor example, `id` could be set to \"gpt-o\", which is the official server-side name of the model.\nThe `alias` field can be used by clients to refer to that model in a more convenient or custom manner.\nWhen a client provides the alias instead of the official name, the middleware will map the alias\nback to the underlying `id` (e.g., `\"gpt-o\"`) and execute requests against the correct model.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The official provider-specific server-side unique identifier of the model instance.",
            "example": "gpt-3.5-turbo-456723"
          },
          "alias": {
            "type": "string",
            "description": "The aliased name of the model.\nIf set, this is the name that should be used by clients to refer to that model in a more convenient or custom manner.\nWhen a client provides the alias instead of the official name, the middleware will map the alias\nback to the underlying `id` (e.g., `\"gpt-o\"`) and execute requests against the correct model.",
            "example": "gpt-3.5-turbo"
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          }
        },
        "required": [
          "id"
        ]
      },
      "ReplaceModelRequest": {
        "type": "object",
        "description": "A request to replace the details of an existing model configuration.\nAny details not supplied will receive default values in the replaced configuration.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The official provider-specific server-side unique identifier of the model instance.",
            "example": "gpt-3.5-turbo-456723"
          },
          "alias": {
            "type": "string",
            "description": "The aliased name of the model.\nIf set, this is the name that should be used by clients to refer to that model in a more convenient or custom manner.\nWhen a client provides the alias instead of the official name, the middleware will map the alias\nback to the underlying `id` (e.g., `\"gpt-o\"`) and execute requests against the correct model.",
            "example": "gpt-3.5-turbo"
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          }
        },
        "required": [
          "id"
        ]
      },
      "UpdateModelRequest": {
        "type": "object",
        "description": "A request to update the details for an existing model configuration.\nOnly details supplied will be updated in the model configuration.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The official provider-specific server-side unique identifier of the model instance.",
            "example": "gpt-3.5-turbo-456723"
          },
          "alias": {
            "type": "string",
            "description": "The aliased name of the model.\nIf set, this is the name that should be used by clients to refer to that model in a more convenient or custom manner.\nWhen a client provides the alias instead of the official name, the middleware will map the alias\nback to the underlying `id` (e.g., `\"gpt-o\"`) and execute requests against the correct model.",
            "example": "gpt-3.5-turbo"
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          }
        },
        "required": [
          "id"
        ]
      },
      "OpenAIModelResponse": {
        "type": "object",
        "description": "A response containing model details.",
        "properties": {
          "created": {
            "type": "integer",
            "description": "The UNIX timestamp (in seconds) when the model was created.",
            "minimum": 0,
            "maximum": 9223372036854776000,
            "example": 1677649963
          },
          "id": {
            "type": "string",
            "description": "The model identifier.",
            "example": "gpt-3.5-turbo-456723"
          },
          "object": {
            "type": "string",
            "description": "The object type, which is always \"model\".",
            "example": "model"
          },
          "owned_by": {
            "type": "string",
            "description": "The provider that owns the model.\nFormat: \"provider type:provider name\"",
            "example": "openai:vllm4"
          }
        }
      },
      "OpenAIModelResponseCollection": {
        "type": "object",
        "description": "A list of model responses.",
        "properties": {
          "data": {
            "type": "array",
            "description": "The array of model responses.",
            "items": {
              "$ref": "#/components/schemas/OpenAIModelResponse"
            },
            "minItems": 0,
            "maxItems": 1000
          },
          "object": {
            "type": "string",
            "description": "The object type, always \"list\".",
            "example": "list"
          }
        },
        "required": [
          "object",
          "data"
        ]
      },
      "CommonPatchRequestHelper": {
        "type": "object",
        "description": "The common fields that can be patched.\nThis is a helper for `cpdctl`.\n",
        "properties": {
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "name": {
            "type": "string",
            "description": "The name of the resource.\n",
            "example": "my-resource"
          },
          "description": {
            "type": "string",
            "description": "A description of the resource.\n",
            "example": "This is my first resource."
          },
          "custom": {
            "$ref": "#/components/schemas/Custom"
          }
        }
      },
      "wxPromptResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The prompt's id. This value cannot be set. It is returned in responses only.",
            "example": "1c29d9a1-9ba6-422d-aa39-517b26adc147"
          },
          "name": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "Name used to display the prompt.",
            "example": "My Prompt"
          },
          "description": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "An optional description for the prompt.",
            "example": "My First Prompt"
          },
          "created_at": {
            "type": "integer",
            "description": "Time the prompt was created.",
            "example": 1711504485261
          },
          "created_by": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The ID of the original prompt creator.",
            "example": "IBMid-000000YYY0"
          },
          "last_updated_at": {
            "type": "integer",
            "description": "Time the prompt was updated.",
            "example": 1711504485261
          },
          "last_updated_by": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The ID of the last user that modifed the prompt.",
            "example": "IBMid-000000YYY0"
          },
          "task_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*"
            },
            "minItems": 1,
            "maxItems": 1
          },
          "governance_tracked": {
            "type": "boolean"
          },
          "lock": {
            "$ref": "#/components/schemas/promptLock"
          },
          "input_mode": {
            "type": "string",
            "description": "Input mode in use for the prompt",
            "enum": [
              "structured",
              "freeform",
              "chat",
              "detached"
            ]
          },
          "model_version": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string",
                "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                "description": "User provided semantic version for tracking in IBM AI Factsheets",
                "example": "2.0.0-rc.7"
              },
              "tag": {
                "type": "string",
                "pattern": ".*",
                "description": "User provived tag.",
                "example": "tag"
              },
              "description": {
                "type": "string",
                "pattern": ".*",
                "description": "Description of the version.",
                "example": "Description of the model version."
              }
            }
          },
          "prompt_variables": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/promptVariable"
            }
          },
          "is_template": {
            "type": "boolean"
          },
          "resource_key": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*"
          },
          "prompt": {
            "$ref": "#/components/schemas/promptWithExternal"
          }
        },
        "required": [
          "name",
          "prompt"
        ]
      },
      "wxPromptPost": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "Name used to display the prompt.",
            "example": "My Prompt"
          },
          "description": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "An optional description for the prompt.",
            "example": "My First Prompt"
          },
          "created_at": {
            "type": "integer",
            "description": "Time the prompt was created.",
            "example": 1711504485261
          },
          "task_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*"
            },
            "minItems": 1,
            "maxItems": 1
          },
          "lock": {
            "$ref": "#/components/schemas/promptLock"
          },
          "model_version": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string",
                "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                "description": "User provided semantic version for tracking in IBM AI Factsheets",
                "example": "2.0.0-rc.7"
              },
              "tag": {
                "type": "string",
                "pattern": ".*",
                "description": "User provived tag.",
                "example": "tag"
              },
              "description": {
                "type": "string",
                "pattern": ".*",
                "description": "Description of the version.",
                "example": "Description of the model version."
              }
            }
          },
          "prompt_variables": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/promptVariable"
            }
          },
          "input_mode": {
            "type": "string",
            "description": "Input mode in use for the prompt",
            "enum": [
              "structured",
              "freeform",
              "chat",
              "detached"
            ]
          },
          "prompt": {
            "$ref": "#/components/schemas/promptWithExternal"
          }
        },
        "required": [
          "name",
          "prompt"
        ]
      },
      "wxPromptPatch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The prompt's id. This value cannot be set. It is returned in responses only.",
            "example": "1c29d9a1-9ba6-422d-aa39-517b26adc147"
          },
          "name": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "Name used to display the prompt.",
            "example": "My Prompt"
          },
          "description": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "An optional description for the prompt.",
            "example": "My First Prompt"
          },
          "task_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*",
              "example": "generation"
            },
            "minItems": 1,
            "maxItems": 1
          },
          "governance_tracked": {
            "type": "boolean"
          },
          "model_version": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string",
                "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
                "description": "User provided semantic version for tracking in IBM AI Factsheets",
                "example": "2.0.0-rc.7"
              },
              "tag": {
                "type": "string",
                "pattern": ".*",
                "description": "User provived tag.",
                "example": "tag"
              },
              "description": {
                "type": "string",
                "pattern": ".*",
                "description": "Description of the version.",
                "example": "Description of the model version."
              }
            }
          },
          "prompt_variables": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/promptVariable"
            }
          },
          "input_mode": {
            "type": "string",
            "description": "Input mode in use for the prompt",
            "enum": [
              "structured",
              "freeform"
            ]
          },
          "prompt": {
            "$ref": "#/components/schemas/prompt"
          }
        },
        "required": [
          "name",
          "prompt"
        ]
      },
      "wxPromptSession": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]{32}",
            "description": "The prompt session's id. This value cannot be set. It is returned in responses only.",
            "example": "1c29d9a1-9ba6-422d-aa39-517b26adc147"
          },
          "name": {
            "type": "string",
            "pattern": "^.{0,100}$",
            "description": "Name used to display the prompt session.",
            "example": "Session 1"
          },
          "description": {
            "type": "string",
            "pattern": "^[\\s\\S]{0,250}",
            "description": "An optional description for the prompt session.",
            "example": "My First Prompt Session"
          },
          "created_at": {
            "type": "integer",
            "description": "Time the session was created.",
            "example": 1711504485261
          },
          "created_by": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The ID of the original session creator.",
            "example": "IBMid-000000YYY0"
          },
          "last_updated_at": {
            "type": "integer",
            "description": "Time the session was updated.",
            "example": 1711504485261
          },
          "last_updated_by": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The ID of the last user that modifed the session.",
            "example": "IBMid-000000YYY0"
          },
          "lock": {
            "$ref": "#/components/schemas/promptLock"
          },
          "prompts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/wxPromptSessionEntry"
            },
            "minItems": 0,
            "maxItems": 50
          }
        },
        "required": [
          "name"
        ]
      },
      "wxPromptSessionEntry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The prompt's id. This value cannot be set. It is returned in responses only.",
            "example": "1c29d9a1-9ba6-422d-aa39-517b26adc147"
          },
          "name": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "Name used to display the prompt.",
            "example": "My Prompt"
          },
          "description": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "An optional description for the prompt.",
            "example": "My First Prompt"
          },
          "prompt_variables": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/promptVariable"
            }
          },
          "is_template": {
            "type": "boolean"
          },
          "created_at": {
            "type": "integer",
            "description": "Time the prompt was created.",
            "example": 1711504485261
          },
          "input_mode": {
            "type": "string",
            "description": "Input mode in use for the prompt",
            "enum": [
              "structured",
              "freeform",
              "chat"
            ]
          },
          "prompt": {
            "$ref": "#/components/schemas/prompt"
          }
        },
        "required": [
          "name",
          "prompt",
          "created_at"
        ]
      },
      "wxPromptSessionEntryList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9-]*",
                  "description": "The prompt entry's ID",
                  "example": "1c29d9a1-9ba6-422d-aa39-517b26adc147"
                },
                "name": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9-]*",
                  "description": "The prompt entry's name",
                  "example": "Name of an entry"
                },
                "description": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9-]*",
                  "description": "The prompt entry's description",
                  "example": "Description of an entry"
                },
                "created_at": {
                  "type": "integer",
                  "description": "The prompt entry's create time in millis",
                  "example": 1711504485261
                }
              }
            }
          },
          "bookmark": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*"
          }
        }
      },
      "prompt": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "input": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "[a-zA-Z0-9-]*"
              },
              "minItems": 2,
              "maxItems": 2
            },
            "default": []
          },
          "model_id": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-//]*",
            "example": "ibm/granite-13b-chat-v2"
          },
          "model_parameters": {
            "type": "object",
            "properties": {
              "decoding_method": {
                "type": "string",
                "pattern": "[a-zA-Z0-9-]*"
              },
              "max_new_tokens": {
                "type": "integer"
              },
              "min_new_tokens": {
                "type": "integer"
              },
              "random_seed": {
                "type": "integer"
              },
              "stop_sequences": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9-]*"
                }
              },
              "temperature": {
                "type": "number"
              },
              "top_k": {
                "type": "number"
              },
              "top_p": {
                "type": "number"
              },
              "repetition_penalty": {
                "type": "number"
              }
            }
          },
          "data": {
            "$ref": "#/components/schemas/promptData"
          },
          "system_prompt": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*"
          },
          "chat_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/chatItem"
            }
          }
        },
        "required": [
          "model_id",
          "data"
        ]
      },
      "promptWithExternal": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "input": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "[a-zA-Z0-9-]*"
              },
              "minItems": 2,
              "maxItems": 2
            },
            "default": []
          },
          "model_id": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-//]*",
            "example": "ibm/granite-13b-chat-v2"
          },
          "model_parameters": {
            "type": "object",
            "properties": {
              "decoding_method": {
                "type": "string",
                "pattern": "[a-zA-Z0-9-]*"
              },
              "max_new_tokens": {
                "type": "integer"
              },
              "min_new_tokens": {
                "type": "integer"
              },
              "random_seed": {
                "type": "integer"
              },
              "stop_sequences": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9-]*"
                }
              },
              "temperature": {
                "type": "number"
              },
              "top_k": {
                "type": "number"
              },
              "top_p": {
                "type": "number"
              },
              "repetition_penalty": {
                "type": "number"
              }
            }
          },
          "data": {
            "$ref": "#/components/schemas/promptData"
          },
          "system_prompt": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*"
          },
          "chat_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/chatItem"
            }
          },
          "external_information": {
            "$ref": "#/components/schemas/externalInformation"
          }
        },
        "required": [
          "model_id",
          "data"
        ]
      },
      "externalInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "external_prompt_id": {
            "type": "string",
            "pattern": ".*"
          },
          "external_model_id": {
            "type": "string",
            "pattern": ".*"
          },
          "external_model_provider": {
            "type": "string",
            "pattern": ".*"
          },
          "external_prompt": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string",
                "pattern": ".*"
              },
              "additional_information": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/externalPromptAdditionalInformation"
                },
                "minItems": 1
              }
            },
            "required": [
              "url"
            ]
          },
          "external_model": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "pattern": ".*"
              },
              "url": {
                "type": "string",
                "pattern": ".*"
              }
            },
            "required": [
              "name",
              "url"
            ]
          }
        },
        "required": [
          "external_prompt_id",
          "external_model_id",
          "external_model_provider"
        ]
      },
      "externalPromptAdditionalInformation": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "key": {
              "type": "string",
              "pattern": "^[\\s\\S]{0,250}$"
            }
          }
        },
        "example": [
          {
            "key": "value"
          },
          {
            "key": "value"
          }
        ]
      },
      "chatItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "question",
              "answer"
            ]
          },
          "content": {
            "type": "string",
            "pattern": ".*",
            "example": "Some text"
          },
          "status": {
            "type": "string",
            "enum": [
              "ready",
              "error"
            ]
          },
          "timestamp": {
            "type": "integer",
            "example": 1711504485261
          }
        }
      },
      "promptData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "instruction": {
            "type": "string",
            "pattern": "[\\s\\S]*"
          },
          "input_prefix": {
            "type": "string",
            "pattern": "[\\s\\S]*"
          },
          "output_prefix": {
            "type": "string",
            "pattern": "[\\s\\S]*"
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[\\s\\S]*"
              },
              "minItems": 2,
              "maxItems": 2
            },
            "default": []
          }
        }
      },
      "promptLock": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "locked": {
            "type": "boolean",
            "description": "True if the prompt is currently locked."
          },
          "lock_type": {
            "type": "string",
            "description": "Lock type: 'edit' for working on prompts/templates or 'governance'. Can only be supplied in PUT /lock requests.",
            "enum": [
              "edit",
              "governance"
            ]
          },
          "locked_by": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "Locked by is computed by the server and shouldn't be passed.",
            "example": "IBMid-000000YYY0"
          }
        },
        "required": [
          "locked"
        ]
      },
      "wxPromptInputRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "input": {
            "type": "string",
            "pattern": ".*",
            "description": "Override input string that will be used to generate the response. The string can contain template parameters.",
            "example": "Some text with variables."
          },
          "prompt_variables": {
            "type": "object",
            "description": "Supply only to replace placeholders. Object content must be key:value pairs where the 'key' is the parameter to replace and 'value' is the value to use.",
            "additionalProperties": {
              "$ref": "#/components/schemas/promptVariableString"
            }
          }
        }
      },
      "promptVariable": {
        "type": "object",
        "additionalProperties": true
      },
      "promptVariableString": {
        "type": "string",
        "pattern": "[a-zA-Z0-9-]*",
        "example": "var1"
      },
      "vectorIndexResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The vector index's id. This value cannot be set. It is returned in responses only.",
            "example": "12c45f78-a2b4-1b3d-aa2c-zy09y87w6a3a"
          },
          "name": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "Name used to display the vector index.",
            "example": "My vector index"
          },
          "description": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "An optional description for the vector index asset.",
            "example": "My first vector index"
          },
          "created_at": {
            "type": "integer",
            "description": "Time the vector index was created.",
            "example": 1711504485261
          },
          "created_by": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The ID of the original vector index creator.",
            "example": "IBMid-000000YYY0"
          },
          "last_updated_at": {
            "type": "integer",
            "description": "Time the vector index was updated.",
            "example": 1711504485261
          },
          "last_updated_by": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The ID of the last user that modifed the vector index.",
            "example": "IBMid-000000YYY0"
          },
          "data_assets": {
            "type": "array",
            "description": "The IDs of the associated data assets used in the vector index.",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*",
              "example": "713259df-0540-4301-982e-693a81da462c"
            },
            "example": [
              "713259df-0540-4301-982e-693a81da462c",
              "713259df-0540-4301-982e-693a81da573d"
            ]
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalVectorStore"
              },
              {
                "$ref": "#/components/schemas/inMemoryVectorStore"
              }
            ]
          },
          "settings": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalStoreSettings"
              },
              {
                "$ref": "#/components/schemas/inMemorySettings"
              }
            ]
          },
          "build": {
            "type": "object",
            "description": "The associated build to process the data for external vector stores",
            "properties": {
              "notebook_id": {
                "type": "string",
                "pattern": "[a-zA-Z0-9-]*",
                "description": "The ID of the associated notebook.",
                "example": "12c45f78-a2b4-1b3d-aa2c-zy09y87w6a3a"
              },
              "job_id": {
                "type": "string",
                "pattern": "[a-zA-Z0-9-]*",
                "description": "The ID of the associated job run.",
                "example": "12c45f78-a2b4-1b3d-aa2c-zy09y87w6a3a"
              }
            }
          },
          "status": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The status of the vector index.",
            "example": "ready"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*",
              "example": "vector index 1"
            },
            "description": "Tags attached to the asset",
            "example": [
              "new vector index 1, document for cars"
            ]
          },
          "sample_questions": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*",
              "example": "Summarize the document"
            },
            "maxItems": 6,
            "description": "Frequently asked questions",
            "example": [
              "summarize the document, name of the author"
            ]
          }
        }
      },
      "wxVectorIndexPatch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "Name used to display the vector index.",
            "example": "My vector index"
          },
          "description": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "An optional description for the vector index asset.",
            "example": "My first vector index"
          },
          "data_assets": {
            "type": "array",
            "description": "The IDs of the associated data assets used in the vector index.",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*",
              "example": "713259df-0540-4301-982e-693a81da462c"
            },
            "example": [
              "713259df-0540-4301-982e-693a81da462c",
              "713259df-0540-4301-982e-693a81da573d"
            ]
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalVectorStore"
              },
              {
                "$ref": "#/components/schemas/inMemoryVectorStore"
              }
            ]
          },
          "settings": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalStoreSettings"
              },
              {
                "$ref": "#/components/schemas/inMemorySettings"
              }
            ]
          },
          "build": {
            "type": "object",
            "description": "The associated build to process the data for external vector stores",
            "properties": {
              "notebook_id": {
                "type": "string",
                "pattern": "[a-zA-Z0-9-]*",
                "description": "The ID of the associated notebook.",
                "example": "12c45f78-a2b4-1b3d-aa2c-zy09y87w6a3a"
              },
              "job_id": {
                "type": "string",
                "pattern": "[a-zA-Z0-9-]*",
                "description": "The ID of the associated job run.",
                "example": "12c45f78-a2b4-1b3d-aa2c-zy09y87w6a3a"
              }
            }
          },
          "status": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The status of the vector index.",
            "example": "ready"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*",
              "example": "vector index 1"
            },
            "description": "Tags attached to the asset",
            "example": [
              "new vector index 1, document for cars"
            ]
          },
          "sample_questions": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*",
              "example": "Summarize the document"
            },
            "maxItems": 6,
            "description": "Frequently asked questions",
            "example": [
              "summarize the document, name of the author"
            ]
          }
        }
      },
      "wxVectorIndexPost": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "Name used to display the vector index.",
            "example": "My vector index"
          },
          "description": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "An optional description for the vector index asset.",
            "example": "My first vector index"
          },
          "data_assets": {
            "type": "array",
            "description": "The IDs of the associated data assets used in the vector index.",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*",
              "example": "713259df-0540-4301-982e-693a81da462c"
            },
            "example": [
              "713259df-0540-4301-982e-693a81da462c",
              "713259df-0540-4301-982e-693a81da573d"
            ]
          },
          "store": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalVectorStore"
              },
              {
                "$ref": "#/components/schemas/inMemoryVectorStore"
              }
            ]
          },
          "settings": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/externalStoreSettings"
              },
              {
                "$ref": "#/components/schemas/inMemorySettings"
              }
            ]
          },
          "build": {
            "type": "object",
            "description": "The associated build to process the data for external vector stores. REQUIRED FOR EXTERNAL VECTOR STORES",
            "properties": {
              "notebook_id": {
                "type": "string",
                "pattern": "[a-zA-Z0-9-]*",
                "description": "The ID of the associated notebook.",
                "example": "12c45f78-a2b4-1b3d-aa2c-zy09y87w6a3a"
              },
              "job_id": {
                "type": "string",
                "pattern": "[a-zA-Z0-9-]*",
                "description": "The ID of the associated job run.",
                "example": "12c45f78-a2b4-1b3d-aa2c-zy09y87w6a3a"
              }
            }
          },
          "status": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The status of the vector index.",
            "example": "ready"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*",
              "example": "vector index 1"
            },
            "description": "Tags attached to the asset",
            "example": [
              "new vector index 1, document for cars"
            ]
          },
          "sample_questions": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-]*",
              "example": "Summarize the document"
            },
            "maxItems": 6,
            "description": "Frequently asked questions",
            "example": [
              "summarize the document, name of the author"
            ]
          }
        },
        "required": [
          "name",
          "build",
          "data_assets",
          "store",
          "settings"
        ]
      },
      "wxVectorIndexPut": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "object_key": {
            "type": "string",
            "pattern": "vector_index/[a-zA-Z0-9-]__da__*.gz",
            "description": "The object key of the gzipped file, that is available in the attached COS Bucket.",
            "example": "vector_index/myvectorindex__da__vi82w8pghq.gz"
          }
        },
        "example": {
          "object_key": "vector_index/canadaConstitution__da__5bpykqpyzx.gz"
        }
      },
      "externalStoreSettings": {
        "type": "object",
        "properties": {
          "chunk_size": {
            "type": "number",
            "minimum": 100,
            "maximum": 10000,
            "description": "The number of text (or tokens) that are grouped together before converting into a vector."
          },
          "chunk_overlap": {
            "type": "number",
            "minimum": 0,
            "maximum": 2000,
            "description": "The number of characters to overlap for chunking data"
          },
          "top_k": {
            "type": "number",
            "minimum": 1,
            "maximum": 10,
            "description": "number of most similar results to retrieve (lower values lead to greater similarity between the question and answer)"
          },
          "split_pdf_pages": {
            "type": "boolean"
          },
          "rerank": {
            "type": "boolean"
          },
          "embedding_model_id": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-//]*",
            "example": "sentence-transformers/all-minilm-l6-v2"
          },
          "schema_fields": {
            "type": "object",
            "properties": {
              "document_name": {
                "type": "string",
                "description": "Field to use for finding the document name.",
                "pattern": "[a-zA-Z0-9-//]*",
                "example": "document_name"
              },
              "text": {
                "type": "string",
                "description": "Field to use for the text in the document.",
                "pattern": "[a-zA-Z0-9-//]*",
                "example": "text"
              },
              "page_number": {
                "type": "string",
                "description": "Field to use for finding the document page number.",
                "pattern": "[a-zA-Z0-9-//]*",
                "example": "page"
              },
              "vector_query": {
                "type": "string",
                "description": "The vector_query_field that contains the text_expansion query. Only applicable for Elasticsearch",
                "pattern": "[a-zA-Z0-9-//]*",
                "example": "vector"
              },
              "document_url": {
                "type": "string",
                "description": "The optional field that contains a url for the document.",
                "pattern": "[a-zA-Z0-9-//]*",
                "example": "documentURL"
              }
            }
          }
        }
      },
      "inMemorySettings": {
        "type": "object",
        "properties": {
          "chunk_size": {
            "type": "number",
            "description": "The number of text (or tokens) that are grouped together before converting into a vector.",
            "minimum": 100,
            "maximum": 10000
          },
          "chunk_overlap": {
            "type": "number",
            "description": "The number of characters to overlap for chunking data",
            "minimum": 0,
            "maximum": 2000
          },
          "top_k": {
            "type": "number",
            "minimum": 1,
            "maximum": 10,
            "description": "number of most similar results to retrieve (lower values lead to greater similarity between the question and answer)"
          },
          "split_pdf_pages": {
            "type": "boolean"
          },
          "rerank": {
            "type": "boolean"
          },
          "embedding_model_id": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-//]*",
            "example": "sentence-transformers/all-minilm-l6-v2"
          }
        }
      },
      "inMemoryVectorStore": {
        "title": "inMemoryVectorStore",
        "type": "string",
        "description": "vector store for in-memory vector index",
        "pattern": "memory",
        "example": "memory"
      },
      "externalVectorStore": {
        "type": "object",
        "description": "External vector store. (elasticsearch or watsonx.data)",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of the vector store",
            "example": "watsonx.data"
          },
          "connection_id": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The ID of the external store connection.",
            "example": "1c29d9a1-9ba6-422d-aa39-517b26adc147"
          },
          "index": {
            "type": "string",
            "pattern": "[a-zA-Z0-9-]*",
            "description": "The name of the index in the vector store",
            "example": "wx_my_sample_collection"
          },
          "new_index": {
            "type": "boolean",
            "description": "To determine if a new index was used."
          },
          "database": {
            "type": "string",
            "description": "Name of the database",
            "enum": [
              "default",
              "rag"
            ]
          }
        },
        "required": [
          "type",
          "connection_id",
          "index",
          "new_index",
          "database"
        ]
      },
      "NotebookInProject": {
        "description": "Notebook information in a project as returned by a GET request.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/NotebookMetadataInProject"
          },
          "entity": {
            "$ref": "#/components/schemas/NotebookEntity"
          }
        }
      },
      "NotebooksResourceList": {
        "description": "A list of notebook info as returned by a list query.",
        "required": [
          "total_results",
          "resources"
        ],
        "properties": {
          "total_results": {
            "type": "integer",
            "description": "The number of items in the resources list.",
            "example": 1
          },
          "resources": {
            "type": "array",
            "description": "An array of notebooks.",
            "items": {
              "$ref": "#/components/schemas/NotebookResource"
            }
          }
        }
      },
      "Notebook": {
        "description": "Notebook information as returned by a GET request.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/NotebookMetadata"
          },
          "entity": {
            "$ref": "#/components/schemas/NotebookEntity"
          }
        }
      },
      "NotebookForCopy": {
        "description": "Information of a copied notebook as returned by a GET request.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/NotebookMetadataInProject"
          },
          "entity": {
            "$ref": "#/components/schemas/NotebookEntityForCopy"
          }
        }
      },
      "NotebookMetadata": {
        "description": "Metadata of a notebook.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the notebook.",
            "example": "my notebook"
          },
          "description": {
            "type": "string",
            "description": "A more verbose description.",
            "example": "this is my notebook"
          },
          "asset_type": {
            "type": "string",
            "description": "Asset type, always \"notebook\".",
            "example": "notebook"
          },
          "created": {
            "type": "integer",
            "description": "Creation date, ms since epoch.",
            "example": 1540471021134
          },
          "created_at": {
            "type": "string",
            "description": "Creation date, ISO format.",
            "example": "2018-10-25T12:37:01Z"
          },
          "owner_id": {
            "type": "string",
            "description": "IAM ID of the asset's owner.",
            "example": "IBMid-310000SG2Y"
          },
          "catalog_id": {
            "type": "string",
            "description": "UUID of the asset's catalog.",
            "example": "463cb8d8-8480-4a98-b75a-f7443b7d0af9"
          },
          "asset_id": {
            "type": "string",
            "description": "UUID of the asset.",
            "example": "41d09a9a-f771-48a2-9534-50c0c622356d"
          }
        }
      },
      "NotebookMetadataInProject": {
        "description": "Metadata of a notebook in a project.",
        "allOf": [
          {
            "$ref": "#/components/schemas/NotebookMetadata"
          },
          {
            "required": [
              "project_id"
            ],
            "properties": {
              "project_id": {
                "type": "string",
                "description": "UUID of the asset's project.",
                "example": "b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
              }
            }
          }
        ]
      },
      "NotebookEntity": {
        "description": "Entity of a notebook.",
        "properties": {
          "notebook": {
            "$ref": "#/components/schemas/NotebookEntityDefinition"
          },
          "runtime": {
            "$ref": "#/components/schemas/NotebookRuntime"
          },
          "href": {
            "type": "string",
            "description": "Full URI of the notebook.",
            "example": "/v2/assets/41d09a9a-f771-48a2-9534-50c0c622356d?project_id=b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          }
        }
      },
      "NotebookEntityForCopy": {
        "description": "Entity of a notebook copied from a source.",
        "properties": {
          "notebook": {
            "$ref": "#/components/schemas/NotebookEntityDefinitionForCopy"
          },
          "runtime": {
            "$ref": "#/components/schemas/NotebookRuntime"
          },
          "href": {
            "type": "string",
            "description": "Full URI of the notebook.",
            "example": "/v2/assets/41d09a9a-f771-48a2-9534-50c0c622356d?project_id=b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          }
        }
      },
      "NotebookEntityDefinition": {
        "description": "Definition part of a notebook entity.",
        "properties": {
          "kernel": {
            "$ref": "#/components/schemas/NotebookKernel"
          },
          "originates_from": {
            "$ref": "#/components/schemas/NotebookOrigin"
          }
        }
      },
      "NotebookEntityDefinitionForCopy": {
        "description": "Definition part of a notebook entity copied from a source.",
        "properties": {
          "kernel": {
            "$ref": "#/components/schemas/NotebookKernel"
          },
          "originates_from": {
            "$ref": "#/components/schemas/NotebookOriginFromSource"
          }
        }
      },
      "NotebookResource": {
        "description": "Notebook info returned in a listing.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/NotebookResourceMetadata"
          },
          "entity": {
            "$ref": "#/components/schemas/NotebookResourceEntity"
          }
        }
      },
      "NotebookResourceMetadata": {
        "description": "Metadata of notebook info returned in a listing.",
        "properties": {
          "guid": {
            "type": "string",
            "description": "UUID of the notebook.",
            "example": "299993bf-9a42-48ae-aadd-1336f31d5556"
          },
          "url": {
            "type": "string",
            "description": "URL of the notebook.",
            "example": "/v2/notebooks/299993bf-9a42-48ae-aadd-1336f31d5556"
          }
        }
      },
      "NotebookResourceEntity": {
        "description": "Entity of notebook info returned in a listing.",
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/NotebookResourceEntityAsset"
          },
          "runtime": {
            "$ref": "#/components/schemas/NotebookResourceEntityRuntime"
          }
        }
      },
      "NotebookResourceEntityAsset": {
        "description": "Asset API asset description returned with a notebook listing.",
        "properties": {
          "asset_id": {
            "type": "string",
            "description": "The UUID of the asset.",
            "example": "41d09a9a-f771-48a2-9534-50c0c622356d"
          },
          "asset_type": {
            "type": "string",
            "description": "The asset type. Always \"notebook\".",
            "example": "notebook"
          },
          "created": {
            "type": "integer",
            "description": "Timestamp of the creation date, ms since epoch.",
            "example": 1540471021134
          },
          "created_at": {
            "type": "string",
            "description": "Date the asset was created, ISO format.",
            "example": "2018-10-25T12:37:01Z"
          },
          "catalog_id": {
            "type": "string",
            "description": "The asset catalog ID.",
            "example": "463cb8d8-8480-4a98-b75a-f7443b7d0af9"
          },
          "project_id": {
            "type": "string",
            "description": "The project the notebook belongs to.",
            "example": "b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          },
          "version": {
            "type": "integer",
            "description": "Version of the asset.",
            "example": 2
          },
          "href": {
            "type": "string",
            "description": "The asset URL.",
            "example": "/v2/assets/299993bf-9a42-48ae-aadd-1336f31d5556?project_id=850d08c4-31f1-4722-a7ef-eeefd796e995"
          }
        }
      },
      "NotebookResourceEntityRuntime": {
        "description": "Runtime info returned with a notebook listing.",
        "properties": {
          "spark_monitoring_enabled": {
            "type": "boolean",
            "description": "If Spark monitoring is enabled.",
            "example": true
          },
          "environment": {
            "type": "string",
            "description": "UUID of the environment of the notebook.",
            "example": "conda4x16-850d08c4-31f1-4722-a7ef-eeefd796e995"
          }
        }
      },
      "NotebookCreateBodyInProject": {
        "description": "Payload for creating a notebook in a project.",
        "allOf": [
          {
            "$ref": "#/components/schemas/NotebookCreateBodyGeneral"
          },
          {
            "required": [
              "project"
            ],
            "properties": {
              "project": {
                "type": "string",
                "description": "The guid of the project in which to create the notebook.",
                "example": "92ae0e27-9b11-4de9-a646-d46ca3c183d4"
              }
            }
          }
        ]
      },
      "NotebookCreateBodyGeneral": {
        "description": "Payload for creating a notebook.",
        "required": [
          "name",
          "file_reference",
          "runtime"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the new notebook.",
            "example": "my notebook"
          },
          "description": {
            "type": "string",
            "description": "A more verbose description of the notebook.",
            "example": "this is my notebook"
          },
          "file_reference": {
            "type": "string",
            "description": "The reference to the file in the object storage.",
            "example": "notebook/my_notebook.ipynb"
          },
          "originates_from": {
            "$ref": "#/components/schemas/NotebookOrigin"
          },
          "runtime": {
            "$ref": "#/components/schemas/NotebookRuntime"
          },
          "kernel": {
            "$ref": "#/components/schemas/NotebookKernel"
          }
        }
      },
      "NotebookCopyBody": {
        "description": "Payload for copying a notebook.",
        "required": [
          "source_guid",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the new notebook.",
            "example": "my notebook"
          },
          "source_guid": {
            "type": "string",
            "description": "The guid of the notebook to be copied.",
            "example": "ca3c0e27-46ca-83d4-a646-d49b11c14de9"
          }
        }
      },
      "NotebookRevertBody": {
        "description": "Payload for a request to revert to a specific notebook version.",
        "required": [
          "source"
        ],
        "properties": {
          "source": {
            "type": "string",
            "description": "The guid of the notebook version.",
            "example": "ca3c0e27-46ca-83d4-a646-d49b11c14de9"
          }
        }
      },
      "NotebookOrigin": {
        "description": "The notebook origin.",
        "properties": {
          "type": {
            "type": "string",
            "description": "The orgin type of the notebook, either blank, file or url.",
            "example": "blank"
          }
        }
      },
      "NotebookOriginFromSource": {
        "description": "The origin of a notebook from a source.",
        "properties": {
          "type": {
            "type": "string",
            "description": "The orgin type of the notebook, either blank, file or url.",
            "example": "notebook"
          },
          "guid": {
            "type": "string",
            "description": "The guid of the source file",
            "example": "ca3c0e27-46ca-83d4-a646-d49b11c14de9"
          }
        }
      },
      "NotebookRuntime": {
        "description": "A notebook runtime.",
        "required": [
          "environment"
        ],
        "properties": {
          "environment": {
            "type": "string",
            "description": "The guid of the environment on which the notebook runs.",
            "example": "conda4x16-d46ca0e27-a646-4de9-a646-9b113c183d4"
          },
          "spark_monitoring_enabled": {
            "type": "boolean",
            "description": "Spark monitoring enabled or not."
          }
        }
      },
      "NotebookKernel": {
        "description": "A notebook kernel.",
        "properties": {
          "display_name": {
            "type": "string",
            "description": "The display name of the environment kernel.",
            "example": "Python 3.9 with Spark"
          },
          "name": {
            "type": "string",
            "description": "The name of the environment kernel.",
            "example": "python3"
          },
          "language": {
            "type": "string",
            "description": "The language of the environment kernel.",
            "example": "python3"
          }
        }
      },
      "NotebookListBody": {
        "description": "Payload for a notebook list request.",
        "properties": {
          "notebooks": {
            "type": "array",
            "description": "The list of notebooks whose details will be retrieved.",
            "items": {
              "type": "string",
              "description": "The guid of the notebook.",
              "example": "ca3c0e27-46ca-83d4-a646-d49b11c14de9"
            }
          }
        }
      },
      "NotebookUpdateBody": {
        "description": "Payload for a notebook update request.",
        "properties": {
          "environment": {
            "type": "string",
            "description": "The guid of the environment on which the notebook runs.",
            "example": "d46ca0e27-a646-4de9-a646-9b113c183d4"
          },
          "spark_monitoring_enabled": {
            "type": "boolean",
            "description": "Spark monitoring enabled or not.",
            "example": false
          },
          "kernel": {
            "$ref": "#/components/schemas/NotebookKernel"
          }
        }
      },
      "NotebookVersionInProject": {
        "description": "A notebook version in a project.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/NotebookVersionMetadata"
          },
          "entity": {
            "$ref": "#/components/schemas/NotebookVersionEntityInProject"
          }
        }
      },
      "NotebookVersionMetadata": {
        "description": "Notebook version metadata.",
        "properties": {
          "guid": {
            "type": "string",
            "description": "The guid of the version.",
            "example": "19d63b6b-81a1-4c05-bad2-36a2957bd6d0"
          },
          "url": {
            "type": "string",
            "description": "The URL of the version.",
            "example": "v2/notebooks/a528b427-d1cd-4039-8ddc-04203c2521e2/versions/1a1329e0-fd05-409a-8411-52db106e2142"
          },
          "created_at": {
            "type": "integer",
            "description": "The creation timestamp in UTC millisecond since UNIX Epoch time.",
            "example": 1543681714106
          }
        }
      },
      "NotebookVersionEntity": {
        "description": "A notebook version entity.",
        "properties": {
          "master_notebook_guid": {
            "type": "string",
            "description": "The guid of the versioned notebook.",
            "example": "a528b427-d1cd-4039-8ddc-04203c2521e2"
          },
          "created_by_iui": {
            "type": "string",
            "description": "The IUI of the user that has created the version.",
            "example": "IBMid-123456ABCD"
          },
          "file_reference": {
            "type": "string",
            "description": "The file reference in the corresponding COS.",
            "example": "myproject-donotdelete-pr-6p65nym92j1bv0/notebooks/GPU_ENVIRONMENT_DEFAULT_GBUXVKHH_version_1543781324804.ipynb"
          },
          "rev_id": {
            "type": "integer",
            "description": "The revision id of the notebook.",
            "example": 1
          }
        }
      },
      "NotebookVersionEntityInProject": {
        "description": "A notebook version entity in a project.",
        "allOf": [
          {
            "$ref": "#/components/schemas/NotebookVersionEntity"
          },
          {
            "required": [
              "project_id"
            ],
            "properties": {
              "project_id": {
                "type": "string",
                "description": "The guid of the project.",
                "example": "0f7c1111-a79d-45b2-9699-d4950e742964"
              }
            }
          }
        ]
      },
      "NotebookVersionsListInProject": {
        "description": "A list of notebook versions in a project.",
        "required": [
          "total_results",
          "resources"
        ],
        "properties": {
          "total_results": {
            "description": "The number of items in the resources array.",
            "type": "integer",
            "example": 1
          },
          "resources": {
            "description": "An array of notebook versions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotebookVersionInProject"
            }
          }
        }
      },
      "ErrorResponse": {
        "description": "An error response.",
        "required": [
          "trace",
          "errors"
        ],
        "properties": {
          "trace": {
            "description": "The trace ID used in logs.",
            "type": "string"
          },
          "errors": {
            "description": "The error objects.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Error": {
        "description": "An error object.",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "description": "The code describing the error.",
            "type": "string"
          },
          "message": {
            "description": "The detailed information about the error.",
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/ErrorTarget"
          }
        }
      },
      "ErrorTarget": {
        "description": "The target of the error.",
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "type": {
            "description": "The type of the problematic field.",
            "type": "string",
            "enum": [
              "field",
              "query",
              "header"
            ]
          },
          "name": {
            "description": "The name of the problematic field.",
            "type": "string"
          }
        }
      },
      "wxUtilityAgentToolsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/utilityAgentTool"
            }
          }
        },
        "required": [
          "resources"
        ]
      },
      "utilityAgentTool": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the tool",
            "example": "GoogleSearch"
          },
          "description": {
            "type": "string",
            "description": "A plain text description of what the tool is used for.",
            "example": "Search for online trends, news, current events, real-time information, or research topics."
          },
          "agent_description": {
            "type": "string",
            "description": "The precise instruction to agent LLMs and should be treated as part of the system prompt. If not provided, `description` can be used in it's place.",
            "example": "Search for online trends, news, current events, real-time information, or research topics."
          },
          "input_schema": {
            "type": "object",
            "additionalProperties": true,
            "properties": {},
            "description": "The JSON schema of the input that is provided when running the tool if applicable."
          },
          "config_schema": {
            "type": "object",
            "additionalProperties": true,
            "properties": {},
            "description": "The JSON schema of the config that can be provided when running the tool if applicable.",
            "example": {
              "title": "config schema for GoogleSearch tool",
              "type": "object",
              "properties": {
                "maxResults": {
                  "title": "Max number of results to return",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 20,
                  "wx_ui_name": "Max results",
                  "wx_ui_field_type": "numberInput",
                  "wx_ui_default": 10
                }
              }
            }
          }
        },
        "required": [
          "name",
          "description"
        ]
      },
      "wxUtilityAgentToolsRunRequest": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/utilityAgentToolUnstructuredInput"
          },
          {
            "$ref": "#/components/schemas/utilityAgentToolStructuredInput"
          }
        ]
      },
      "wxUtilityAgentToolsRunResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "output": {
            "description": "The output from running the tool.",
            "example": "[{\"title\":\"Toronto, Ontario, Canada Monthly Weather | AccuWeather\",\"description\":\"January. January February March April May June July August September October November December. 2025 ... 13°. 29. 37°. 18°. 30. 34°. 16°. 31. 36°. 18°. 1. 18°. 11 ...\",\"url\":\"https://www.accuweather.com/en/ca/toronto/m5h/january-weather/55488\"},{\"title\":\"Canada weather forecast for Tuesday, 13 January 2026\",\"description\":\"Weather in Canada during the last few years on January 13 ; 2025 - January 13, 32 ° / 26 °, 0 in ; 2024 - January 13, 39 ° / 26 °, 0.46 in ; 2023 - January 13, 32 ...\",\"url\":\"https://www.weather25.com/north-america/canada?page=date&date=13-1\"},{\"title\":\"Toronto January 2025 Historical Weather Data (Ontario, Canada ...\",\"description\":\"January 2025 Weather History in Toronto Ontario, Canada. The data for ... -SN, BR. Mon, Jan 13, Light Snow, Light Snow and Ice Pellets, Mist, Drifting ...\",\"url\":\"https://weatherspark.com/h/m/19863/2025/1/Historical-Weather-in-January-2025-in-Toronto-Ontario-Canada\"}]"
          }
        },
        "required": [
          "output"
        ]
      },
      "utilityAgentToolUnstructuredInput": {
        "type": "object",
        "title": "Unstructured input",
        "additionalProperties": false,
        "properties": {
          "tool_name": {
            "type": "string",
            "description": "The name of the tool to be run.",
            "example": "GoogleSearch"
          },
          "input": {
            "type": "string",
            "description": "Input to be used when running tool that has no input_schema.",
            "example": "What was the weather in Toronto on January 13th 2025?"
          },
          "config": {
            "$ref": "#/components/schemas/toolConfig"
          }
        },
        "required": [
          "input"
        ]
      },
      "utilityAgentToolStructuredInput": {
        "type": "object",
        "title": "Structured input",
        "additionalProperties": false,
        "properties": {
          "tool_name": {
            "type": "string",
            "description": "The name of the tool to be run.",
            "example": "WebCrawler"
          },
          "input": {
            "type": "object",
            "description": "Input to be used when running tool that has an input_schema.",
            "additionalProperties": true,
            "properties": {},
            "example": {
              "url": "https://www.ibm.com"
            }
          },
          "config": {
            "$ref": "#/components/schemas/toolConfig"
          }
        },
        "required": [
          "input"
        ]
      },
      "toolConfig": {
        "description": "Optional configuration options that can be passed for some tools. This must match the config schema for that tool.",
        "type": "object",
        "additionalProperties": true,
        "properties": {},
        "example": {
          "maxResults": 3
        }
      }
    },
    "parameters": {
      "version": {
        "name": "version",
        "description": "The version date for the API of the form `YYYY-MM-DD`.\n",
        "example": "2023-07-07",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "date"
        },
        "required": true,
        "x-sdk-global-param": true
      },
      "start": {
        "name": "start",
        "description": "Token required for token-based pagination. This token cannot be determined by end user.\nIt is generated by the service and it is set in the href available in the `next` field.\n",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "name": "limit",
        "description": "How many resources should be returned. By default limit is 100. Max limit allowed is 200.",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 200,
          "default": 100
        },
        "example": 50
      },
      "model_filters": {
        "name": "filters",
        "description": "A set of filters to specify the list of models, filters are described as the `pattern` shown below.\n```text\n pattern: tfilter[,tfilter][:(or|and)]\n tfilter: filter | !filter\n   filter: Requires existence of the filter.\n   !filter: Requires absence of the filter.\n filter: one of\n   modelid_*:     Filters by model id.\n                  Namely, select a model with a specific model id.\n   provider_*:    Filters by provider.\n                  Namely, select all models with a specific provider.\n   source_*:      Filters by source.\n                  Namely, select all models with a specific source.\n   input_tier_*:  Filters by input tier.\n                  Namely, select all models with a specific input tier.\n   output_tier_*: Filters by output tier.\n                  Namely, select all models with a specific output tier.\n   tier_*:        Filters by tier.\n                  Namely, select all models with a specific input or output tier.\n   task_*:        Filters by task id.\n                  Namely, select all models that support a specific task id.\n   lifecycle_*:   Filters by lifecycle state.\n                  Namely, select all models that are currently in the specified lifecycle state.\n   function_*:    Filters by function. \n                  Namely, select all models that support a specific function.\n```",
        "in": "query",
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 1000,
          "pattern": "^([!]?[^,!]+)(,[!]?[^,!]+)*(:(or|and))?$"
        },
        "example": "modelid_ibm/granite-13b-instruct-v1,modelid_ibm/granite-13b-instruct-v2:or"
      },
      "tech_preview": {
        "name": "tech_preview",
        "description": "See all the `Tech Preview` models if entitled.\n",
        "in": "query",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "SpaceId": {
        "name": "space_id",
        "description": "The space that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n",
        "in": "query",
        "schema": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9-]*$",
          "minLength": 36,
          "maxLength": 36
        },
        "example": "63dc4cf1-252f-424b-b52d-5cdd9814987f"
      },
      "ProjectId": {
        "name": "project_id",
        "description": "The project that contains the resource.\nEither `space_id` or `project_id` query parameter has to be given.\n",
        "in": "query",
        "schema": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9-]*$",
          "minLength": 36,
          "maxLength": 36
        },
        "example": "a77190a2-f52d-4f2a-be3d-7867b5f46edc"
      },
      "id_or_name": {
        "name": "id_or_name",
        "in": "path",
        "description": "The `id_or_name` can be either the `deployment_id` that identifies the deployment or a `serving_name` that allows a predefined URL to be used to post a prediction.\n\nThe WML instance that is associated with the deployment will be used for limits and billing (if a paid plan).\n",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      "id_or_name_chat_template": {
        "name": "id_or_name",
        "in": "path",
        "description": "The `id_or_name` can be either the `deployment_id` that identifies the deployment or a `serving_name` that allows a predefined URL to be used to post a prediction. The deployment must reference a prompt template with `input_mode` `chat`.\n\nThe WML instance that is associated with the deployment will be used for limits and billing (if a paid plan).\n",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      "total_count": {
        "name": "total_count",
        "description": "Compute the total count. May have performance impact.",
        "in": "query",
        "schema": {
          "type": "boolean"
        }
      },
      "hard_delete": {
        "name": "hard_delete",
        "description": "Set to true in order to also delete the job or request metadata.",
        "in": "query",
        "schema": {
          "type": "boolean"
        }
      },
      "path_id": {
        "name": "id",
        "in": "path",
        "description": "The `id` is the identifier that was returned in the `metadata.id` field of the request.\n",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      "tag.value": {
        "name": "tag.value",
        "description": "Return only the resources with the given tag values, separated by `or` or `and` to support multiple tags.",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "example": "tf2.0 or tf2.1"
      },
      "search": {
        "name": "search",
        "in": "query",
        "description": "Returns only resources that match this search string.\nThe path to the field must be the complete path to the field, and this field\nmust be one of the indexed fields for this resource type. Note that the\nsearch string must be URL encoded.\n",
        "schema": {
          "type": "string",
          "minLength": 1
        }
      },
      "path_ai_service_id": {
        "name": "id",
        "in": "path",
        "x-cli-option-name": "ai-service-id",
        "description": "AI service identifier.\n",
        "schema": {
          "type": "string"
        },
        "example": "64dc8921-345f-234b-462d-78e41246987f",
        "required": true
      },
      "rev": {
        "name": "rev",
        "description": "The revision number of the resource.\n",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "example": "2"
      },
      "model_uuid": {
        "name": "model_uuid",
        "in": "path",
        "description": "Model UUID",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "550e8400-e29b-41d4-a716-446655440000"
      },
      "provider_uuid": {
        "name": "provider_uuid",
        "in": "path",
        "description": "Provider UUID",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "550e8400-e29b-41d4-a716-446655440000"
      },
      "session_id": {
        "name": "session_id",
        "in": "path",
        "description": "Prompt Session ID",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "[a-zA-Z0-9-]*"
        }
      },
      "entry_id": {
        "name": "entry_id",
        "in": "path",
        "description": "Prompt Session Entry ID",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "[a-zA-Z0-9-]*"
        }
      },
      "prompt_id": {
        "name": "prompt_id",
        "in": "path",
        "description": "Prompt ID",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "[a-zA-Z0-9-]*"
        }
      },
      "project_id": {
        "name": "project_id",
        "in": "query",
        "description": "[REQUIRED] Specifies the project ID as the target. One target must be supplied per request.",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "[a-zA-Z0-9-]*"
        }
      },
      "space_id": {
        "name": "space_id",
        "in": "query",
        "description": "[REQUIRED] Specifies the space ID as the target. One target must be supplied per request.",
        "schema": {
          "type": "string",
          "pattern": "[a-zA-Z0-9-]*"
        }
      },
      "restrict_model_parameters": {
        "name": "restrict_model_parameters",
        "in": "query",
        "description": "Only return a set of model parameters compatiable with inferencing",
        "required": false,
        "schema": {
          "type": "string",
          "default": "true"
        }
      },
      "index_id": {
        "name": "index_id",
        "in": "path",
        "description": "Vector index ID",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "[a-zA-Z0-9-]*"
        }
      },
      "tool_id": {
        "name": "tool_id",
        "in": "path",
        "description": "Tool name",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "[a-zA-Z0-9-]*"
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request, the response body should contain the reason.\n",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiErrorResponse"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized.\n",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiErrorResponse"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden, an authentication error including trying to access an unauthorized space or project.\n",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiErrorResponse"
            }
          }
        }
      },
      "NotFound": {
        "description": "The specified resource was not found.\n",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiErrorResponse"
            }
          }
        }
      },
      "ApplicationZip": {
        "description": "OK.\n",
        "content": {
          "application/zip": {
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "BadRequestError": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MGErrorResponse"
            }
          }
        }
      },
      "UnauthorizedError": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MGErrorResponse"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MGErrorResponse"
            }
          }
        }
      },
      "NotFoundError": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MGErrorResponse"
            }
          }
        }
      },
      "ForbiddenError": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MGErrorResponse"
            }
          }
        }
      },
      "HTTP400Response": {
        "description": "Bad request. One of the fields has invalid format/content.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "BadRequestError": {
                "$ref": "#/components/examples/BadRequestError"
              }
            }
          }
        }
      },
      "HTTP401Response": {
        "description": "Unauthorized. No/Malformed authentication provided.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "AuthenticationError": {
                "$ref": "#/components/examples/AuthenticationError"
              }
            }
          }
        }
      },
      "HTTP403Response": {
        "description": "Forbidden. User is not allowed to perform the target operation.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "AuthorizationError": {
                "$ref": "#/components/examples/AuthorizationError"
              }
            }
          }
        }
      },
      "HTTP429Response": {
        "description": "The number of requests has exceeded the rate limit.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "RateLimitError": {
                "$ref": "#/components/examples/RateLimitError"
              }
            }
          }
        }
      },
      "NotebookCreateResponse": {
        "description": "Success. Created and returned a new notebook asset. Format follows v2/assets.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/NotebookInProject"
                },
                {
                  "$ref": "#/components/schemas/NotebookForCopy"
                }
              ]
            },
            "examples": {
              "NotebookCreatedFromScratchInProject": {
                "$ref": "#/components/examples/NotebookInProject"
              },
              "NotebookCreatedByCopying": {
                "$ref": "#/components/examples/NotebookForCopy"
              }
            }
          }
        }
      },
      "NotebooksListResponse": {
        "description": "Success. Returned a list of notebook assets. Format follows v2/assets.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NotebooksResourceList"
            },
            "examples": {
              "ListOfNotebooks": {
                "$ref": "#/components/examples/NotebooksList"
              }
            }
          }
        }
      },
      "NotebookRevertResponse": {
        "description": "Success. Reverted the main notebook to a version. Format follows v2/assets.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/NotebookInProject"
                }
              ]
            },
            "examples": {
              "NotebookReverted": {
                "$ref": "#/components/examples/NotebookReverted"
              }
            }
          }
        }
      },
      "NotebookUpdateResponse": {
        "description": "Success. Updated the notebook. Format follows v2/assets.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Notebook"
            },
            "examples": {
              "NotebookUpdated": {
                "$ref": "#/components/examples/NotebookUpdated"
              }
            }
          }
        }
      },
      "NotebookVersionCreateResponse": {
        "description": "Success. Returned the notebook version definition.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/NotebookVersionInProject"
                }
              ]
            },
            "examples": {
              "NotebookVersionInProject": {
                "$ref": "#/components/examples/NotebookVersionInProject"
              }
            }
          }
        }
      },
      "NotebookVersionsListResponse": {
        "description": "Success. Returned a list of versions of the notebook.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/NotebookVersionsListInProject"
                }
              ]
            },
            "examples": {
              "ListOfNotebookVersionsInProject": {
                "$ref": "#/components/examples/NotebookVersionsListInProject"
              }
            }
          }
        }
      },
      "NotebookVersionRetrieveResponse": {
        "description": "Success. Returned the version definition.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/NotebookVersionInProject"
                }
              ]
            },
            "examples": {
              "NotebookVersionInProject": {
                "$ref": "#/components/examples/NotebookVersionInProject"
              }
            }
          }
        }
      }
    },
    "requestBodies": {
      "AIServiceBody": {
        "description": "A gzip file containing code files.\n",
        "required": true,
        "content": {
          "application/gzip": {
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      }
    },
    "examples": {
      "NotebookCreateBodyInProject": {
        "summary": "Create a notebook from scratch in a project",
        "value": {
          "name": "my notebook",
          "description": "this is my notebook",
          "project": "b275be5f-10ff-47ee-bfc9-63f1ce5addbf",
          "file_reference": "notebook/my_notebook.ipynb",
          "runtime": {
            "environment": "spark33py39-b275be5f-10ff-47ee-bfc9-63f1ce5addbf",
            "spark_monitoring_enabled": true
          }
        }
      },
      "NotebookCopyBody": {
        "summary": "Copy a notebook",
        "value": {
          "source_guid": "ca3c0e27-46ca-83d4-a646-d49b11c14de9",
          "name": "my notebook"
        }
      },
      "NotebooksListBody": {
        "summary": "List notebooks",
        "value": {
          "notebooks": [
            "ca3c0e27-46ca-83d4-a646-d49b11c14de9"
          ]
        }
      },
      "NotebookRevertBody": {
        "summary": "Revert the notebook to a version",
        "value": {
          "source": "ca3c0e27-46ca-83d4-a646-d49b11c14de9"
        }
      },
      "NotebookUpdateBody": {
        "summary": "Update a notebook",
        "value": {
          "environment": "d46ca0e27-a646-4de9-a646-9b113c183d4",
          "spark_monitoring_enabled": false,
          "kernel": {
            "display_name": "Python 3.9 with Spark",
            "name": "python39",
            "language": "python3"
          }
        }
      },
      "NotebookInProject": {
        "summary": "A notebook created in a project from scratch",
        "value": {
          "metadata": {
            "name": "my notebook",
            "description": "this is my notebook",
            "asset_type": "notebook",
            "created": 1540471021134,
            "created_at": "2021-07-01T12:37:01Z",
            "owner_id": "IBMid-310000SG2Y",
            "catalog_id": "463cb8d8-8480-4a98-b75a-f7443b7d0af9",
            "asset_id": "41d09a9a-f771-48a2-9534-50c0c622356d",
            "project_id": "b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          },
          "entity": {
            "notebook": {
              "kernel": {
                "display_name": "Python 3.9 with Spark",
                "name": "python3",
                "language": "python3"
              },
              "originates_from": {
                "type": "blank"
              }
            },
            "runtime": {
              "environment": "spark33py39-b275be5f-10ff-47ee-bfc9-63f1ce5addbf",
              "spark_monitoring_enabled": true
            },
            "href": "/v2/assets/41d09a9a-f771-48a2-9534-50c0c622356d?project_id=b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          }
        }
      },
      "NotebookForCopy": {
        "summary": "A notebook created by copying another notebook",
        "value": {
          "metadata": {
            "name": "my notebook",
            "description": "this is my notebook",
            "asset_type": "notebook",
            "created": 1540471021134,
            "created_at": "2021-07-01T12:37:01Z",
            "owner_id": "IBMid-310000SG2Y",
            "catalog_id": "463cb8d8-8480-4a98-b75a-f7443b7d0af9",
            "asset_id": "41d09a9a-f771-48a2-9534-50c0c622356d",
            "project_id": "b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          },
          "entity": {
            "notebook": {
              "kernel": {
                "display_name": "Python 3.9 with Spark",
                "name": "python3",
                "language": "python3"
              },
              "originates_from": {
                "type": "notebook",
                "guid": "ca3c0e27-46ca-83d4-a646-d49b11c14de9"
              }
            },
            "runtime": {
              "environment": "spark33py39-b275be5f-10ff-47ee-bfc9-63f1ce5addbf",
              "spark_monitoring_enabled": true
            },
            "href": "/v2/assets/41d09a9a-f771-48a2-9534-50c0c622356d?project_id=b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          }
        }
      },
      "NotebooksList": {
        "summary": "A list of notebooks",
        "value": {
          "total_results": 1,
          "resources": [
            {
              "metadata": {
                "guid": "41d09a9a-f771-48a2-9534-50c0c622356d",
                "url": "/v2/notebooks/41d09a9a-f771-48a2-9534-50c0c622356d"
              },
              "entity": {
                "runtime": {
                  "environment": "spark33py39-b275be5f-10ff-47ee-bfc9-63f1ce5addbf",
                  "spark_monitoring_enabled": true
                },
                "asset": {
                  "asset_id": "41d09a9a-f771-48a2-9534-50c0c622356d",
                  "asset_type": "notebook",
                  "created_at": "2021-07-01T12:37:01Z",
                  "catalog_id": "463cb8d8-8480-4a98-b75a-f7443b7d0af9",
                  "version": 2,
                  "project_id": "b275be5f-10ff-47ee-bfc9-63f1ce5addbf",
                  "href": "/v2/assets/41d09a9a-f771-48a2-9534-50c0c622356d?project_id=b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
                }
              }
            }
          ]
        }
      },
      "NotebookReverted": {
        "summary": "A reverted notebook",
        "value": {
          "metadata": {
            "name": "my notebook v4.2",
            "description": "this is my notebook v4.2",
            "asset_type": "notebook",
            "created": 1540471021134,
            "created_at": "2021-07-01T12:37:01Z",
            "owner_id": "IBMid-310000SG2Y",
            "catalog_id": "463cb8d8-8480-4a98-b75a-f7443b7d0af9",
            "asset_id": "41d09a9a-f771-48a2-9534-50c0c622356d",
            "project_id": "b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          },
          "entity": {
            "notebook": {
              "kernel": {
                "display_name": "Python 3.9 with Spark",
                "name": "python39",
                "language": "python3"
              },
              "originates_from": {
                "type": "blank"
              }
            },
            "runtime": {
              "environment": "spark33py39-b275be5f-10ff-47ee-bfc9-63f1ce5addbf",
              "spark_monitoring_enabled": true
            },
            "href": "/v2/assets/41d09a9a-f771-48a2-9534-50c0c622356d?project_id=b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          }
        }
      },
      "NotebookUpdated": {
        "summary": "An updated notebook",
        "value": {
          "metadata": {
            "name": "my notebook",
            "description": "this is my notebook",
            "asset_type": "notebook",
            "created": 1540471021134,
            "created_at": "2021-07-01T12:37:01Z",
            "owner_id": "IBMid-310000SG2Y",
            "catalog_id": "463cb8d8-8480-4a98-b75a-f7443b7d0af9",
            "asset_id": "41d09a9a-f771-48a2-9534-50c0c622356d",
            "project_id": "b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          },
          "entity": {
            "notebook": {
              "kernel": {
                "display_name": "Python 3.9 with Spark",
                "name": "python39",
                "language": "python3"
              },
              "originates_from": {
                "type": "blank"
              }
            },
            "runtime": {
              "environment": "d46ca0e27-a646-4de9-a646-9b113c183d4",
              "spark_monitoring_enabled": false
            },
            "href": "/v2/assets/41d09a9a-f771-48a2-9534-50c0c622356d?project_id=b275be5f-10ff-47ee-bfc9-63f1ce5addbf"
          }
        }
      },
      "NotebookVersionInProject": {
        "summary": "A notebook version in a project",
        "value": {
          "metadata": {
            "guid": "19d63b6b-81a1-4c05-bad2-36a2957bd6d0",
            "url": "v2/notebooks/a528b427-d1cd-4039-8ddc-04203c2521e2/versions/1a1329e0-fd05-409a-8411-52db106e2142",
            "created_at": 1543681714106
          },
          "entity": {
            "master_notebook_guid": "a528b427-d1cd-4039-8ddc-04203c2521e2",
            "project_id": "0f7c1111-a79d-45b2-9699-d4950e742964",
            "created_by_iui": "IBMid-123456ABCD",
            "file_reference": "myproject-donotdelete-pr-6p65nym92j1bv0/notebooks/GPU_ENVIRONMENT_DEFAULT_GBUXVKHH_version_1543781324804.ipynb",
            "rev_id": 1
          }
        }
      },
      "NotebookVersionsListInProject": {
        "summary": "A list of notebook versions in a project",
        "value": {
          "total_results": 1,
          "resources": [
            {
              "metadata": {
                "guid": "19d63b6b-81a1-4c05-bad2-36a2957bd6d0",
                "url": "v2/notebooks/a528b427-d1cd-4039-8ddc-04203c2521e2/versions/1a1329e0-fd05-409a-8411-52db106e2142",
                "created_at": 1543681714106
              },
              "entity": {
                "master_notebook_guid": "a528b427-d1cd-4039-8ddc-04203c2521e2",
                "project_id": "0f7c1111-a79d-45b2-9699-d4950e742964",
                "created_by_iui": "IBMid-123456ABCD",
                "file_reference": "myproject-donotdelete-pr-6p65nym92j1bv0/notebooks/GPU_ENVIRONMENT_DEFAULT_GBUXVKHH_version_1543781324804.ipynb",
                "rev_id": 1
              }
            }
          ]
        }
      },
      "BadRequestError": {
        "summary": "Bad request error with status code 400",
        "value": {
          "trace": "b12692e1-8582-4628-88ca-7a13fefb73e2",
          "errors": [
            {
              "code": "invalid_type",
              "message": "The `project` field needs to be a uuid v4, but is 12345.",
              "target": {
                "type": "field",
                "name": "project"
              }
            }
          ]
        }
      },
      "AuthenticationError": {
        "summary": "Authentication error with status code 401",
        "value": {
          "trace": "b12692e1-8582-4628-88ca-7a13fefb73e2",
          "errors": [
            {
              "code": "invalid_auth_token",
              "message": "The IAM bearer token is not valid.",
              "target": {
                "type": "header",
                "name": "Authentication"
              }
            }
          ]
        }
      },
      "AuthorizationError": {
        "summary": "Authorization error with status code 403",
        "value": {
          "trace": "b12692e1-8582-4628-88ca-7a13fefb73e2",
          "errors": [
            {
              "code": "endpoint_access_forbidden",
              "message": "max.mustermann@ibm.com is neither editor/admin of project b275be5f-10ff-47ee-bfc9-63f1ce5addbf nor allowlisted Service ID."
            }
          ]
        }
      },
      "RateLimitError": {
        "summary": "Rate limit error with status code 429",
        "value": {
          "trace": "b12692e1-8582-4628-88ca-7a13fefb73e2",
          "errors": [
            {
              "code": "rate_limit",
              "message": "The requests from IBMid-310000A00A exceeds rate limit. Please try again later."
            }
          ]
        }
      }
    }
  }
}